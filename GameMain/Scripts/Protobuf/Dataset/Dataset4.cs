// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Dataset4.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AltarOfSword {

  /// <summary>Holder for reflection information generated from Dataset4.proto</summary>
  public static partial class Dataset4Reflection {

    #region Descriptor
    /// <summary>File descriptor for Dataset4.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Dataset4Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5EYXRhc2V0NC5wcm90bxIMQWx0YXJPZlN3b3JkIkcKCURhdGFzZXRJNBIN",
            "CgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoBRIN",
            "CgVkYXRhMxgEIAEoBSJJCgtEYXRhc2V0STNGMRINCgVkYXRhMBgBIAEoBRIN",
            "CgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoBRINCgVkYXRhMxgEIAEoAiJJ",
            "CgtEYXRhc2V0STNCMRINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRIN",
            "CgVkYXRhMhgDIAEoBRINCgVkYXRhMxgEIAEoCCJJCgtEYXRhc2V0STNTMRIN",
            "CgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoBRIN",
            "CgVkYXRhMxgEIAEoCSJJCgtEYXRhc2V0STJGMhINCgVkYXRhMBgBIAEoBRIN",
            "CgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoAhINCgVkYXRhMxgEIAEoAiJL",
            "Cg1EYXRhc2V0STJGMUIxEg0KBWRhdGEwGAEgASgFEg0KBWRhdGExGAIgASgF",
            "Eg0KBWRhdGEyGAMgASgCEg0KBWRhdGEzGAQgASgIIksKDURhdGFzZXRJMkYx",
            "UzESDQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyAB",
            "KAISDQoFZGF0YTMYBCABKAkiSQoLRGF0YXNldEkyQjISDQoFZGF0YTAYASAB",
            "KAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyABKAgSDQoFZGF0YTMYBCAB",
            "KAgiSwoNRGF0YXNldEkyQjFTMRINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgC",
            "IAEoBRINCgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoCSJJCgtEYXRhc2V0",
            "STJTMhINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgD",
            "IAEoCRINCgVkYXRhMxgEIAEoCSJJCgtEYXRhc2V0RjNJMRINCgVkYXRhMBgB",
            "IAEoAhINCgVkYXRhMRgCIAEoAhINCgVkYXRhMhgDIAEoAhINCgVkYXRhMxgE",
            "IAEoBSJLCg1EYXRhc2V0RjJJMUIxEg0KBWRhdGEwGAEgASgCEg0KBWRhdGEx",
            "GAIgASgCEg0KBWRhdGEyGAMgASgFEg0KBWRhdGEzGAQgASgIIksKDURhdGFz",
            "ZXRGMkkxUzESDQoFZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAISDQoFZGF0",
            "YTIYAyABKAUSDQoFZGF0YTMYBCABKAkiSwoNRGF0YXNldEIySTFGMRINCgVk",
            "YXRhMBgBIAEoCBINCgVkYXRhMRgCIAEoCBINCgVkYXRhMhgDIAEoBRINCgVk",
            "YXRhMxgEIAEoAiJNCg9EYXRhc2V0STFGMUIxUzESDQoFZGF0YTAYASABKAUS",
            "DQoFZGF0YTEYAiABKAISDQoFZGF0YTIYAyABKAgSDQoFZGF0YTMYBCABKAki",
            "SwoNRGF0YXNldFMySTFGMRINCgVkYXRhMBgBIAEoCRINCgVkYXRhMRgCIAEo",
            "CRINCgVkYXRhMhgDIAEoBRINCgVkYXRhMxgEIAEoAiJJCgtEYXRhc2V0QjNJ",
            "MRINCgVkYXRhMBgBIAEoCBINCgVkYXRhMRgCIAEoCBINCgVkYXRhMhgDIAEo",
            "CBINCgVkYXRhMxgEIAEoBSJLCg1EYXRhc2V0QjJJMVMxEg0KBWRhdGEwGAEg",
            "ASgIEg0KBWRhdGExGAIgASgIEg0KBWRhdGEyGAMgASgFEg0KBWRhdGEzGAQg",
            "ASgJIksKDURhdGFzZXRTMkkxQjESDQoFZGF0YTAYASABKAkSDQoFZGF0YTEY",
            "AiABKAkSDQoFZGF0YTIYAyABKAUSDQoFZGF0YTMYBCABKAgiSQoLRGF0YXNl",
            "dFMzSTESDQoFZGF0YTAYASABKAkSDQoFZGF0YTEYAiABKAkSDQoFZGF0YTIY",
            "AyABKAkSDQoFZGF0YTMYBCABKAUiRwoJRGF0YXNldEY0Eg0KBWRhdGEwGAEg",
            "ASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMgASgCEg0KBWRhdGEzGAQg",
            "ASgCIkkKC0RhdGFzZXRGM0IxEg0KBWRhdGEwGAEgASgCEg0KBWRhdGExGAIg",
            "ASgCEg0KBWRhdGEyGAMgASgCEg0KBWRhdGEzGAQgASgIIkkKC0RhdGFzZXRG",
            "M1MxEg0KBWRhdGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMg",
            "ASgCEg0KBWRhdGEzGAQgASgJIkkKC0RhdGFzZXRGMkIyEg0KBWRhdGEwGAEg",
            "ASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMgASgIEg0KBWRhdGEzGAQg",
            "ASgIIksKDURhdGFzZXRGMkIxUzESDQoFZGF0YTAYASABKAISDQoFZGF0YTEY",
            "AiABKAISDQoFZGF0YTIYAyABKAgSDQoFZGF0YTMYBCABKAkiSQoLRGF0YXNl",
            "dEYyUzISDQoFZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAISDQoFZGF0YTIY",
            "AyABKAkSDQoFZGF0YTMYBCABKAkiSQoLRGF0YXNldEIzRjESDQoFZGF0YTAY",
            "ASABKAgSDQoFZGF0YTEYAiABKAgSDQoFZGF0YTIYAyABKAgSDQoFZGF0YTMY",
            "BCABKAIiSwoNRGF0YXNldEIyRjFTMRINCgVkYXRhMBgBIAEoCBINCgVkYXRh",
            "MRgCIAEoCBINCgVkYXRhMhgDIAEoAhINCgVkYXRhMxgEIAEoCSJLCg1EYXRh",
            "c2V0UzJGMUIxEg0KBWRhdGEwGAEgASgJEg0KBWRhdGExGAIgASgJEg0KBWRh",
            "dGEyGAMgASgCEg0KBWRhdGEzGAQgASgIIkkKC0RhdGFzZXRTM0YxEg0KBWRh",
            "dGEwGAEgASgJEg0KBWRhdGExGAIgASgJEg0KBWRhdGEyGAMgASgJEg0KBWRh",
            "dGEzGAQgASgCIkcKCURhdGFzZXRCNBINCgVkYXRhMBgBIAEoCBINCgVkYXRh",
            "MRgCIAEoCBINCgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoCCJJCgtEYXRh",
            "c2V0QjNTMRINCgVkYXRhMBgBIAEoCBINCgVkYXRhMRgCIAEoCBINCgVkYXRh",
            "MhgDIAEoCBINCgVkYXRhMxgEIAEoCSJJCgtEYXRhc2V0QjJTMhINCgVkYXRh",
            "MBgBIAEoCBINCgVkYXRhMRgCIAEoCBINCgVkYXRhMhgDIAEoCRINCgVkYXRh",
            "MxgEIAEoCSJJCgtEYXRhc2V0UzNCMRINCgVkYXRhMBgBIAEoCRINCgVkYXRh",
            "MRgCIAEoCRINCgVkYXRhMhgDIAEoCRINCgVkYXRhMxgEIAEoCCJHCglEYXRh",
            "c2V0UzQSDQoFZGF0YTAYASABKAkSDQoFZGF0YTEYAiABKAkSDQoFZGF0YTIY",
            "AyABKAkSDQoFZGF0YTMYBCABKAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4), global::AltarOfSword.DatasetI4.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3F1), global::AltarOfSword.DatasetI3F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3B1), global::AltarOfSword.DatasetI3B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3S1), global::AltarOfSword.DatasetI3S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2F2), global::AltarOfSword.DatasetI2F2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2F1B1), global::AltarOfSword.DatasetI2F1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2F1S1), global::AltarOfSword.DatasetI2F1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2B2), global::AltarOfSword.DatasetI2B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2B1S1), global::AltarOfSword.DatasetI2B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2S2), global::AltarOfSword.DatasetI2S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3I1), global::AltarOfSword.DatasetF3I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF2I1B1), global::AltarOfSword.DatasetF2I1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF2I1S1), global::AltarOfSword.DatasetF2I1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB2I1F1), global::AltarOfSword.DatasetB2I1F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI1F1B1S1), global::AltarOfSword.DatasetI1F1B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS2I1F1), global::AltarOfSword.DatasetS2I1F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3I1), global::AltarOfSword.DatasetB3I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB2I1S1), global::AltarOfSword.DatasetB2I1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS2I1B1), global::AltarOfSword.DatasetS2I1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3I1), global::AltarOfSword.DatasetS3I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4), global::AltarOfSword.DatasetF4.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3B1), global::AltarOfSword.DatasetF3B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3S1), global::AltarOfSword.DatasetF3S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF2B2), global::AltarOfSword.DatasetF2B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF2B1S1), global::AltarOfSword.DatasetF2B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF2S2), global::AltarOfSword.DatasetF2S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3F1), global::AltarOfSword.DatasetB3F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB2F1S1), global::AltarOfSword.DatasetB2F1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS2F1B1), global::AltarOfSword.DatasetS2F1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3F1), global::AltarOfSword.DatasetS3F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4), global::AltarOfSword.DatasetB4.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3S1), global::AltarOfSword.DatasetB3S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB2S2), global::AltarOfSword.DatasetB2S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3B1), global::AltarOfSword.DatasetS3B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4), global::AltarOfSword.DatasetS4.Parser, new[]{ "Data0", "Data1", "Data2", "Data3" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DatasetI4 : pb::IMessage<DatasetI4> {
    private static readonly pb::MessageParser<DatasetI4> _parser = new pb::MessageParser<DatasetI4>(() => new DatasetI4());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4(DatasetI4 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4 Clone() {
      return new DatasetI4(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3F1 : pb::IMessage<DatasetI3F1> {
    private static readonly pb::MessageParser<DatasetI3F1> _parser = new pb::MessageParser<DatasetI3F1>(() => new DatasetI3F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F1(DatasetI3F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F1 Clone() {
      return new DatasetI3F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3B1 : pb::IMessage<DatasetI3B1> {
    private static readonly pb::MessageParser<DatasetI3B1> _parser = new pb::MessageParser<DatasetI3B1>(() => new DatasetI3B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B1(DatasetI3B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B1 Clone() {
      return new DatasetI3B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3S1 : pb::IMessage<DatasetI3S1> {
    private static readonly pb::MessageParser<DatasetI3S1> _parser = new pb::MessageParser<DatasetI3S1>(() => new DatasetI3S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S1(DatasetI3S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S1 Clone() {
      return new DatasetI3S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2F2 : pb::IMessage<DatasetI2F2> {
    private static readonly pb::MessageParser<DatasetI2F2> _parser = new pb::MessageParser<DatasetI2F2>(() => new DatasetI2F2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2F2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2(DatasetI2F2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2 Clone() {
      return new DatasetI2F2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2F2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2F2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2F2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2F1B1 : pb::IMessage<DatasetI2F1B1> {
    private static readonly pb::MessageParser<DatasetI2F1B1> _parser = new pb::MessageParser<DatasetI2F1B1>(() => new DatasetI2F1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2F1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F1B1(DatasetI2F1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F1B1 Clone() {
      return new DatasetI2F1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2F1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2F1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2F1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2F1S1 : pb::IMessage<DatasetI2F1S1> {
    private static readonly pb::MessageParser<DatasetI2F1S1> _parser = new pb::MessageParser<DatasetI2F1S1>(() => new DatasetI2F1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2F1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F1S1(DatasetI2F1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F1S1 Clone() {
      return new DatasetI2F1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2F1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2F1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2F1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2B2 : pb::IMessage<DatasetI2B2> {
    private static readonly pb::MessageParser<DatasetI2B2> _parser = new pb::MessageParser<DatasetI2B2>(() => new DatasetI2B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B2(DatasetI2B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B2 Clone() {
      return new DatasetI2B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2B1S1 : pb::IMessage<DatasetI2B1S1> {
    private static readonly pb::MessageParser<DatasetI2B1S1> _parser = new pb::MessageParser<DatasetI2B1S1>(() => new DatasetI2B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B1S1(DatasetI2B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B1S1 Clone() {
      return new DatasetI2B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2S2 : pb::IMessage<DatasetI2S2> {
    private static readonly pb::MessageParser<DatasetI2S2> _parser = new pb::MessageParser<DatasetI2S2>(() => new DatasetI2S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2S2(DatasetI2S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2S2 Clone() {
      return new DatasetI2S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3I1 : pb::IMessage<DatasetF3I1> {
    private static readonly pb::MessageParser<DatasetF3I1> _parser = new pb::MessageParser<DatasetF3I1>(() => new DatasetF3I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I1(DatasetF3I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I1 Clone() {
      return new DatasetF3I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF2I1B1 : pb::IMessage<DatasetF2I1B1> {
    private static readonly pb::MessageParser<DatasetF2I1B1> _parser = new pb::MessageParser<DatasetF2I1B1>(() => new DatasetF2I1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF2I1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2I1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2I1B1(DatasetF2I1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2I1B1 Clone() {
      return new DatasetF2I1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF2I1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF2I1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF2I1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF2I1S1 : pb::IMessage<DatasetF2I1S1> {
    private static readonly pb::MessageParser<DatasetF2I1S1> _parser = new pb::MessageParser<DatasetF2I1S1>(() => new DatasetF2I1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF2I1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2I1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2I1S1(DatasetF2I1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2I1S1 Clone() {
      return new DatasetF2I1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF2I1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF2I1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF2I1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB2I1F1 : pb::IMessage<DatasetB2I1F1> {
    private static readonly pb::MessageParser<DatasetB2I1F1> _parser = new pb::MessageParser<DatasetB2I1F1>(() => new DatasetB2I1F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB2I1F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2I1F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2I1F1(DatasetB2I1F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2I1F1 Clone() {
      return new DatasetB2I1F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB2I1F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB2I1F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB2I1F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI1F1B1S1 : pb::IMessage<DatasetI1F1B1S1> {
    private static readonly pb::MessageParser<DatasetI1F1B1S1> _parser = new pb::MessageParser<DatasetI1F1B1S1>(() => new DatasetI1F1B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI1F1B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI1F1B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI1F1B1S1(DatasetI1F1B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI1F1B1S1 Clone() {
      return new DatasetI1F1B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI1F1B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI1F1B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI1F1B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS2I1F1 : pb::IMessage<DatasetS2I1F1> {
    private static readonly pb::MessageParser<DatasetS2I1F1> _parser = new pb::MessageParser<DatasetS2I1F1>(() => new DatasetS2I1F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS2I1F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS2I1F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS2I1F1(DatasetS2I1F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS2I1F1 Clone() {
      return new DatasetS2I1F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS2I1F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS2I1F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS2I1F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3I1 : pb::IMessage<DatasetB3I1> {
    private static readonly pb::MessageParser<DatasetB3I1> _parser = new pb::MessageParser<DatasetB3I1>(() => new DatasetB3I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I1(DatasetB3I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I1 Clone() {
      return new DatasetB3I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB2I1S1 : pb::IMessage<DatasetB2I1S1> {
    private static readonly pb::MessageParser<DatasetB2I1S1> _parser = new pb::MessageParser<DatasetB2I1S1>(() => new DatasetB2I1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB2I1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2I1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2I1S1(DatasetB2I1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2I1S1 Clone() {
      return new DatasetB2I1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB2I1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB2I1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB2I1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS2I1B1 : pb::IMessage<DatasetS2I1B1> {
    private static readonly pb::MessageParser<DatasetS2I1B1> _parser = new pb::MessageParser<DatasetS2I1B1>(() => new DatasetS2I1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS2I1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS2I1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS2I1B1(DatasetS2I1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS2I1B1 Clone() {
      return new DatasetS2I1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS2I1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS2I1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS2I1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3I1 : pb::IMessage<DatasetS3I1> {
    private static readonly pb::MessageParser<DatasetS3I1> _parser = new pb::MessageParser<DatasetS3I1>(() => new DatasetS3I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I1(DatasetS3I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I1 Clone() {
      return new DatasetS3I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4 : pb::IMessage<DatasetF4> {
    private static readonly pb::MessageParser<DatasetF4> _parser = new pb::MessageParser<DatasetF4>(() => new DatasetF4());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4(DatasetF4 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4 Clone() {
      return new DatasetF4(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3B1 : pb::IMessage<DatasetF3B1> {
    private static readonly pb::MessageParser<DatasetF3B1> _parser = new pb::MessageParser<DatasetF3B1>(() => new DatasetF3B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B1(DatasetF3B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B1 Clone() {
      return new DatasetF3B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3S1 : pb::IMessage<DatasetF3S1> {
    private static readonly pb::MessageParser<DatasetF3S1> _parser = new pb::MessageParser<DatasetF3S1>(() => new DatasetF3S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S1(DatasetF3S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S1 Clone() {
      return new DatasetF3S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF2B2 : pb::IMessage<DatasetF2B2> {
    private static readonly pb::MessageParser<DatasetF2B2> _parser = new pb::MessageParser<DatasetF2B2>(() => new DatasetF2B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF2B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B2(DatasetF2B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B2 Clone() {
      return new DatasetF2B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF2B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF2B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF2B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF2B1S1 : pb::IMessage<DatasetF2B1S1> {
    private static readonly pb::MessageParser<DatasetF2B1S1> _parser = new pb::MessageParser<DatasetF2B1S1>(() => new DatasetF2B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF2B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B1S1(DatasetF2B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B1S1 Clone() {
      return new DatasetF2B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF2B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF2B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF2B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF2S2 : pb::IMessage<DatasetF2S2> {
    private static readonly pb::MessageParser<DatasetF2S2> _parser = new pb::MessageParser<DatasetF2S2>(() => new DatasetF2S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF2S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2S2(DatasetF2S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2S2 Clone() {
      return new DatasetF2S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF2S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF2S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF2S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3F1 : pb::IMessage<DatasetB3F1> {
    private static readonly pb::MessageParser<DatasetB3F1> _parser = new pb::MessageParser<DatasetB3F1>(() => new DatasetB3F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F1(DatasetB3F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F1 Clone() {
      return new DatasetB3F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB2F1S1 : pb::IMessage<DatasetB2F1S1> {
    private static readonly pb::MessageParser<DatasetB2F1S1> _parser = new pb::MessageParser<DatasetB2F1S1>(() => new DatasetB2F1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB2F1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2F1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2F1S1(DatasetB2F1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2F1S1 Clone() {
      return new DatasetB2F1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB2F1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB2F1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB2F1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS2F1B1 : pb::IMessage<DatasetS2F1B1> {
    private static readonly pb::MessageParser<DatasetS2F1B1> _parser = new pb::MessageParser<DatasetS2F1B1>(() => new DatasetS2F1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS2F1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS2F1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS2F1B1(DatasetS2F1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS2F1B1 Clone() {
      return new DatasetS2F1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS2F1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS2F1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS2F1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3F1 : pb::IMessage<DatasetS3F1> {
    private static readonly pb::MessageParser<DatasetS3F1> _parser = new pb::MessageParser<DatasetS3F1>(() => new DatasetS3F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F1(DatasetS3F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F1 Clone() {
      return new DatasetS3F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4 : pb::IMessage<DatasetB4> {
    private static readonly pb::MessageParser<DatasetB4> _parser = new pb::MessageParser<DatasetB4>(() => new DatasetB4());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4(DatasetB4 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4 Clone() {
      return new DatasetB4(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3S1 : pb::IMessage<DatasetB3S1> {
    private static readonly pb::MessageParser<DatasetB3S1> _parser = new pb::MessageParser<DatasetB3S1>(() => new DatasetB3S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S1(DatasetB3S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S1 Clone() {
      return new DatasetB3S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB2S2 : pb::IMessage<DatasetB2S2> {
    private static readonly pb::MessageParser<DatasetB2S2> _parser = new pb::MessageParser<DatasetB2S2>(() => new DatasetB2S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB2S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2S2(DatasetB2S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2S2 Clone() {
      return new DatasetB2S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB2S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB2S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB2S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3B1 : pb::IMessage<DatasetS3B1> {
    private static readonly pb::MessageParser<DatasetS3B1> _parser = new pb::MessageParser<DatasetS3B1>(() => new DatasetS3B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3B1(DatasetS3B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3B1 Clone() {
      return new DatasetS3B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4 : pb::IMessage<DatasetS4> {
    private static readonly pb::MessageParser<DatasetS4> _parser = new pb::MessageParser<DatasetS4>(() => new DatasetS4());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset4Reflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4(DatasetS4 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4 Clone() {
      return new DatasetS4(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
