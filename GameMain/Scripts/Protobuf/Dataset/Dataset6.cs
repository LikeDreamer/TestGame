// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Dataset6.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AltarOfSword {

  /// <summary>Holder for reflection information generated from Dataset6.proto</summary>
  public static partial class Dataset6Reflection {

    #region Descriptor
    /// <summary>File descriptor for Dataset6.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Dataset6Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5EYXRhc2V0Ni5wcm90bxIMQWx0YXJPZlN3b3JkImUKCURhdGFzZXRJNhIN",
            "CgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoBRIN",
            "CgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoBRINCgVkYXRhNRgGIAEoBSJn",
            "CgtEYXRhc2V0STVGMRINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRIN",
            "CgVkYXRhMhgDIAEoBRINCgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoBRIN",
            "CgVkYXRhNRgGIAEoAiJnCgtEYXRhc2V0STVCMRINCgVkYXRhMBgBIAEoBRIN",
            "CgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoBRINCgVkYXRhMxgEIAEoBRIN",
            "CgVkYXRhNBgFIAEoBRINCgVkYXRhNRgGIAEoCCJnCgtEYXRhc2V0STVTMRIN",
            "CgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoBRIN",
            "CgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoBRINCgVkYXRhNRgGIAEoCSJn",
            "CgtEYXRhc2V0STRGMhINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRIN",
            "CgVkYXRhMhgDIAEoBRINCgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoAhIN",
            "CgVkYXRhNRgGIAEoAiJpCg1EYXRhc2V0STRGMUIxEg0KBWRhdGEwGAEgASgF",
            "Eg0KBWRhdGExGAIgASgFEg0KBWRhdGEyGAMgASgFEg0KBWRhdGEzGAQgASgF",
            "Eg0KBWRhdGE0GAUgASgCEg0KBWRhdGE1GAYgASgIImkKDURhdGFzZXRJNEYx",
            "UzESDQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyAB",
            "KAUSDQoFZGF0YTMYBCABKAUSDQoFZGF0YTQYBSABKAISDQoFZGF0YTUYBiAB",
            "KAkiZwoLRGF0YXNldEk0QjISDQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiAB",
            "KAUSDQoFZGF0YTIYAyABKAUSDQoFZGF0YTMYBCABKAUSDQoFZGF0YTQYBSAB",
            "KAgSDQoFZGF0YTUYBiABKAgiaQoNRGF0YXNldEk0QjFTMRINCgVkYXRhMBgB",
            "IAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoBRINCgVkYXRhMxgE",
            "IAEoBRINCgVkYXRhNBgFIAEoCBINCgVkYXRhNRgGIAEoCSJnCgtEYXRhc2V0",
            "STRTMhINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgD",
            "IAEoBRINCgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoCRINCgVkYXRhNRgG",
            "IAEoCSJnCgtEYXRhc2V0STNGMxINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgC",
            "IAEoBRINCgVkYXRhMhgDIAEoBRINCgVkYXRhMxgEIAEoAhINCgVkYXRhNBgF",
            "IAEoAhINCgVkYXRhNRgGIAEoAiJpCg1EYXRhc2V0STNGMkIxEg0KBWRhdGEw",
            "GAEgASgFEg0KBWRhdGExGAIgASgFEg0KBWRhdGEyGAMgASgFEg0KBWRhdGEz",
            "GAQgASgCEg0KBWRhdGE0GAUgASgCEg0KBWRhdGE1GAYgASgIImkKDURhdGFz",
            "ZXRJM0YyUzESDQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0",
            "YTIYAyABKAUSDQoFZGF0YTMYBCABKAISDQoFZGF0YTQYBSABKAISDQoFZGF0",
            "YTUYBiABKAkiaQoNRGF0YXNldEkzQjJGMRINCgVkYXRhMBgBIAEoBRINCgVk",
            "YXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoBRINCgVkYXRhMxgEIAEoCBINCgVk",
            "YXRhNBgFIAEoCBINCgVkYXRhNRgGIAEoAiJrCg9EYXRhc2V0STNGMUIxUzES",
            "DQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyABKAUS",
            "DQoFZGF0YTMYBCABKAISDQoFZGF0YTQYBSABKAgSDQoFZGF0YTUYBiABKAki",
            "aQoNRGF0YXNldEkzUzJGMRINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEo",
            "BRINCgVkYXRhMhgDIAEoBRINCgVkYXRhMxgEIAEoCRINCgVkYXRhNBgFIAEo",
            "CRINCgVkYXRhNRgGIAEoAiJnCgtEYXRhc2V0STNCMxINCgVkYXRhMBgBIAEo",
            "BRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoBRINCgVkYXRhMxgEIAEo",
            "CBINCgVkYXRhNBgFIAEoCBINCgVkYXRhNRgGIAEoCCJpCg1EYXRhc2V0STNC",
            "MlMxEg0KBWRhdGEwGAEgASgFEg0KBWRhdGExGAIgASgFEg0KBWRhdGEyGAMg",
            "ASgFEg0KBWRhdGEzGAQgASgIEg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYg",
            "ASgJImkKDURhdGFzZXRJM1MyQjESDQoFZGF0YTAYASABKAUSDQoFZGF0YTEY",
            "AiABKAUSDQoFZGF0YTIYAyABKAUSDQoFZGF0YTMYBCABKAkSDQoFZGF0YTQY",
            "BSABKAkSDQoFZGF0YTUYBiABKAgiZwoLRGF0YXNldEkzUzMSDQoFZGF0YTAY",
            "ASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyABKAUSDQoFZGF0YTMY",
            "BCABKAkSDQoFZGF0YTQYBSABKAkSDQoFZGF0YTUYBiABKAkiZwoLRGF0YXNl",
            "dEY0STISDQoFZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAISDQoFZGF0YTIY",
            "AyABKAISDQoFZGF0YTMYBCABKAISDQoFZGF0YTQYBSABKAUSDQoFZGF0YTUY",
            "BiABKAUiaQoNRGF0YXNldEYzSTJCMRINCgVkYXRhMBgBIAEoAhINCgVkYXRh",
            "MRgCIAEoAhINCgVkYXRhMhgDIAEoAhINCgVkYXRhMxgEIAEoBRINCgVkYXRh",
            "NBgFIAEoBRINCgVkYXRhNRgGIAEoCCJpCg1EYXRhc2V0RjNJMlMxEg0KBWRh",
            "dGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMgASgCEg0KBWRh",
            "dGEzGAQgASgFEg0KBWRhdGE0GAUgASgFEg0KBWRhdGE1GAYgASgJImkKDURh",
            "dGFzZXRJMkYyQjISDQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoF",
            "ZGF0YTIYAyABKAISDQoFZGF0YTMYBCABKAISDQoFZGF0YTQYBSABKAgSDQoF",
            "ZGF0YTUYBiABKAgiawoPRGF0YXNldEkyRjJCMVMxEg0KBWRhdGEwGAEgASgF",
            "Eg0KBWRhdGExGAIgASgFEg0KBWRhdGEyGAMgASgCEg0KBWRhdGEzGAQgASgC",
            "Eg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYgASgJImkKDURhdGFzZXRJMkYy",
            "UzISDQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyAB",
            "KAISDQoFZGF0YTMYBCABKAISDQoFZGF0YTQYBSABKAkSDQoFZGF0YTUYBiAB",
            "KAkiaQoNRGF0YXNldEIzSTJGMRINCgVkYXRhMBgBIAEoCBINCgVkYXRhMRgC",
            "IAEoCBINCgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoBRINCgVkYXRhNBgF",
            "IAEoBRINCgVkYXRhNRgGIAEoAiJrCg9EYXRhc2V0STJCMkYxUzESDQoFZGF0",
            "YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyABKAgSDQoFZGF0",
            "YTMYBCABKAgSDQoFZGF0YTQYBSABKAISDQoFZGF0YTUYBiABKAkiawoPRGF0",
            "YXNldEkyUzJGMUIxEg0KBWRhdGEwGAEgASgFEg0KBWRhdGExGAIgASgFEg0K",
            "BWRhdGEyGAMgASgJEg0KBWRhdGEzGAQgASgJEg0KBWRhdGE0GAUgASgCEg0K",
            "BWRhdGE1GAYgASgIImkKDURhdGFzZXRTM0kyRjESDQoFZGF0YTAYASABKAkS",
            "DQoFZGF0YTEYAiABKAkSDQoFZGF0YTIYAyABKAkSDQoFZGF0YTMYBCABKAUS",
            "DQoFZGF0YTQYBSABKAUSDQoFZGF0YTUYBiABKAIiZwoLRGF0YXNldEI0STIS",
            "DQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiABKAgSDQoFZGF0YTIYAyABKAgS",
            "DQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAUSDQoFZGF0YTUYBiABKAUi",
            "aQoNRGF0YXNldEIzSTJTMRINCgVkYXRhMBgBIAEoCBINCgVkYXRhMRgCIAEo",
            "CBINCgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEo",
            "BRINCgVkYXRhNRgGIAEoCSJpCg1EYXRhc2V0STJCMlMyEg0KBWRhdGEwGAEg",
            "ASgFEg0KBWRhdGExGAIgASgFEg0KBWRhdGEyGAMgASgIEg0KBWRhdGEzGAQg",
            "ASgIEg0KBWRhdGE0GAUgASgJEg0KBWRhdGE1GAYgASgJImkKDURhdGFzZXRT",
            "M0kyQjESDQoFZGF0YTAYASABKAkSDQoFZGF0YTEYAiABKAkSDQoFZGF0YTIY",
            "AyABKAkSDQoFZGF0YTMYBCABKAUSDQoFZGF0YTQYBSABKAUSDQoFZGF0YTUY",
            "BiABKAgiZwoLRGF0YXNldFM0STISDQoFZGF0YTAYASABKAkSDQoFZGF0YTEY",
            "AiABKAkSDQoFZGF0YTIYAyABKAkSDQoFZGF0YTMYBCABKAkSDQoFZGF0YTQY",
            "BSABKAUSDQoFZGF0YTUYBiABKAUiZwoLRGF0YXNldEY1STESDQoFZGF0YTAY",
            "ASABKAISDQoFZGF0YTEYAiABKAISDQoFZGF0YTIYAyABKAISDQoFZGF0YTMY",
            "BCABKAISDQoFZGF0YTQYBSABKAISDQoFZGF0YTUYBiABKAUiaQoNRGF0YXNl",
            "dEY0STFCMRINCgVkYXRhMBgBIAEoAhINCgVkYXRhMRgCIAEoAhINCgVkYXRh",
            "MhgDIAEoAhINCgVkYXRhMxgEIAEoAhINCgVkYXRhNBgFIAEoBRINCgVkYXRh",
            "NRgGIAEoCCJpCg1EYXRhc2V0RjRJMVMxEg0KBWRhdGEwGAEgASgCEg0KBWRh",
            "dGExGAIgASgCEg0KBWRhdGEyGAMgASgCEg0KBWRhdGEzGAQgASgCEg0KBWRh",
            "dGE0GAUgASgFEg0KBWRhdGE1GAYgASgJImkKDURhdGFzZXRGM0IySTESDQoF",
            "ZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAISDQoFZGF0YTIYAyABKAISDQoF",
            "ZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAgSDQoFZGF0YTUYBiABKAUiawoP",
            "RGF0YXNldEYzSTFCMVMxEg0KBWRhdGEwGAEgASgCEg0KBWRhdGExGAIgASgC",
            "Eg0KBWRhdGEyGAMgASgCEg0KBWRhdGEzGAQgASgFEg0KBWRhdGE0GAUgASgI",
            "Eg0KBWRhdGE1GAYgASgJImkKDURhdGFzZXRGM1MySTESDQoFZGF0YTAYASAB",
            "KAISDQoFZGF0YTEYAiABKAISDQoFZGF0YTIYAyABKAISDQoFZGF0YTMYBCAB",
            "KAkSDQoFZGF0YTQYBSABKAkSDQoFZGF0YTUYBiABKAUiaQoNRGF0YXNldEIz",
            "RjJJMRINCgVkYXRhMBgBIAEoCBINCgVkYXRhMRgCIAEoCBINCgVkYXRhMhgD",
            "IAEoCBINCgVkYXRhMxgEIAEoAhINCgVkYXRhNBgFIAEoAhINCgVkYXRhNRgG",
            "IAEoBSJrCg9EYXRhc2V0RjJCMkkxUzESDQoFZGF0YTAYASABKAISDQoFZGF0",
            "YTEYAiABKAISDQoFZGF0YTIYAyABKAgSDQoFZGF0YTMYBCABKAgSDQoFZGF0",
            "YTQYBSABKAUSDQoFZGF0YTUYBiABKAkiawoPRGF0YXNldEYyUzJJMUIxEg0K",
            "BWRhdGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMgASgJEg0K",
            "BWRhdGEzGAQgASgJEg0KBWRhdGE0GAUgASgFEg0KBWRhdGE1GAYgASgIImkK",
            "DURhdGFzZXRTM0YySTESDQoFZGF0YTAYASABKAkSDQoFZGF0YTEYAiABKAkS",
            "DQoFZGF0YTIYAyABKAkSDQoFZGF0YTMYBCABKAISDQoFZGF0YTQYBSABKAIS",
            "DQoFZGF0YTUYBiABKAUiaQoNRGF0YXNldEI0STFGMRINCgVkYXRhMBgBIAEo",
            "CBINCgVkYXRhMRgCIAEoCBINCgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEo",
            "CBINCgVkYXRhNBgFIAEoBRINCgVkYXRhNRgGIAEoAiJrCg9EYXRhc2V0QjNJ",
            "MUYxUzESDQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiABKAgSDQoFZGF0YTIY",
            "AyABKAgSDQoFZGF0YTMYBCABKAUSDQoFZGF0YTQYBSABKAISDQoFZGF0YTUY",
            "BiABKAkiawoPRGF0YXNldEIyUzJJMUYxEg0KBWRhdGEwGAEgASgIEg0KBWRh",
            "dGExGAIgASgIEg0KBWRhdGEyGAMgASgJEg0KBWRhdGEzGAQgASgJEg0KBWRh",
            "dGE0GAUgASgFEg0KBWRhdGE1GAYgASgCImsKD0RhdGFzZXRTM0kxRjFCMRIN",
            "CgVkYXRhMBgBIAEoCRINCgVkYXRhMRgCIAEoCRINCgVkYXRhMhgDIAEoCRIN",
            "CgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoAhINCgVkYXRhNRgGIAEoCCJp",
            "Cg1EYXRhc2V0UzRJMUYxEg0KBWRhdGEwGAEgASgJEg0KBWRhdGExGAIgASgJ",
            "Eg0KBWRhdGEyGAMgASgJEg0KBWRhdGEzGAQgASgJEg0KBWRhdGE0GAUgASgF",
            "Eg0KBWRhdGE1GAYgASgCImcKC0RhdGFzZXRCNUkxEg0KBWRhdGEwGAEgASgI",
            "Eg0KBWRhdGExGAIgASgIEg0KBWRhdGEyGAMgASgIEg0KBWRhdGEzGAQgASgI",
            "Eg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYgASgFImkKDURhdGFzZXRCNEkx",
            "UzESDQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiABKAgSDQoFZGF0YTIYAyAB",
            "KAgSDQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAUSDQoFZGF0YTUYBiAB",
            "KAkiaQoNRGF0YXNldEIzUzJJMRINCgVkYXRhMBgBIAEoCBINCgVkYXRhMRgC",
            "IAEoCBINCgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoCRINCgVkYXRhNBgF",
            "IAEoCRINCgVkYXRhNRgGIAEoBSJpCg1EYXRhc2V0UzNCMkkxEg0KBWRhdGEw",
            "GAEgASgJEg0KBWRhdGExGAIgASgJEg0KBWRhdGEyGAMgASgJEg0KBWRhdGEz",
            "GAQgASgIEg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYgASgFImkKDURhdGFz",
            "ZXRTNEkxQjESDQoFZGF0YTAYASABKAkSDQoFZGF0YTEYAiABKAkSDQoFZGF0",
            "YTIYAyABKAkSDQoFZGF0YTMYBCABKAkSDQoFZGF0YTQYBSABKAUSDQoFZGF0",
            "YTUYBiABKAgiZwoLRGF0YXNldFM1STESDQoFZGF0YTAYASABKAkSDQoFZGF0",
            "YTEYAiABKAkSDQoFZGF0YTIYAyABKAkSDQoFZGF0YTMYBCABKAkSDQoFZGF0",
            "YTQYBSABKAkSDQoFZGF0YTUYBiABKAUiZQoJRGF0YXNldEY2Eg0KBWRhdGEw",
            "GAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMgASgCEg0KBWRhdGEz",
            "GAQgASgCEg0KBWRhdGE0GAUgASgCEg0KBWRhdGE1GAYgASgCImcKC0RhdGFz",
            "ZXRGNUIxEg0KBWRhdGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEy",
            "GAMgASgCEg0KBWRhdGEzGAQgASgCEg0KBWRhdGE0GAUgASgCEg0KBWRhdGE1",
            "GAYgASgIImcKC0RhdGFzZXRGNVMxEg0KBWRhdGEwGAEgASgCEg0KBWRhdGEx",
            "GAIgASgCEg0KBWRhdGEyGAMgASgCEg0KBWRhdGEzGAQgASgCEg0KBWRhdGE0",
            "GAUgASgCEg0KBWRhdGE1GAYgASgJImcKC0RhdGFzZXRGNEIyEg0KBWRhdGEw",
            "GAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMgASgCEg0KBWRhdGEz",
            "GAQgASgCEg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYgASgIImkKDURhdGFz",
            "ZXRGNEIxUzESDQoFZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAISDQoFZGF0",
            "YTIYAyABKAISDQoFZGF0YTMYBCABKAISDQoFZGF0YTQYBSABKAgSDQoFZGF0",
            "YTUYBiABKAkiZwoLRGF0YXNldEY0UzISDQoFZGF0YTAYASABKAISDQoFZGF0",
            "YTEYAiABKAISDQoFZGF0YTIYAyABKAISDQoFZGF0YTMYBCABKAISDQoFZGF0",
            "YTQYBSABKAkSDQoFZGF0YTUYBiABKAkiZwoLRGF0YXNldEYzQjMSDQoFZGF0",
            "YTAYASABKAISDQoFZGF0YTEYAiABKAISDQoFZGF0YTIYAyABKAISDQoFZGF0",
            "YTMYBCABKAgSDQoFZGF0YTQYBSABKAgSDQoFZGF0YTUYBiABKAgiaQoNRGF0",
            "YXNldEYzQjJTMRINCgVkYXRhMBgBIAEoAhINCgVkYXRhMRgCIAEoAhINCgVk",
            "YXRhMhgDIAEoAhINCgVkYXRhMxgEIAEoCBINCgVkYXRhNBgFIAEoCBINCgVk",
            "YXRhNRgGIAEoCSJpCg1EYXRhc2V0RjNTMkIxEg0KBWRhdGEwGAEgASgCEg0K",
            "BWRhdGExGAIgASgCEg0KBWRhdGEyGAMgASgCEg0KBWRhdGEzGAQgASgJEg0K",
            "BWRhdGE0GAUgASgJEg0KBWRhdGE1GAYgASgIImcKC0RhdGFzZXRGM1MzEg0K",
            "BWRhdGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMgASgCEg0K",
            "BWRhdGEzGAQgASgJEg0KBWRhdGE0GAUgASgJEg0KBWRhdGE1GAYgASgJImcK",
            "C0RhdGFzZXRCNEYyEg0KBWRhdGEwGAEgASgIEg0KBWRhdGExGAIgASgIEg0K",
            "BWRhdGEyGAMgASgIEg0KBWRhdGEzGAQgASgIEg0KBWRhdGE0GAUgASgCEg0K",
            "BWRhdGE1GAYgASgCImkKDURhdGFzZXRCM0YyUzESDQoFZGF0YTAYASABKAgS",
            "DQoFZGF0YTEYAiABKAgSDQoFZGF0YTIYAyABKAgSDQoFZGF0YTMYBCABKAIS",
            "DQoFZGF0YTQYBSABKAISDQoFZGF0YTUYBiABKAkiaQoNRGF0YXNldEYyQjJT",
            "MhINCgVkYXRhMBgBIAEoAhINCgVkYXRhMRgCIAEoAhINCgVkYXRhMhgDIAEo",
            "CBINCgVkYXRhMxgEIAEoCBINCgVkYXRhNBgFIAEoCRINCgVkYXRhNRgGIAEo",
            "CSJpCg1EYXRhc2V0UzNGMkIxEg0KBWRhdGEwGAEgASgJEg0KBWRhdGExGAIg",
            "ASgJEg0KBWRhdGEyGAMgASgJEg0KBWRhdGEzGAQgASgCEg0KBWRhdGE0GAUg",
            "ASgCEg0KBWRhdGE1GAYgASgIImcKC0RhdGFzZXRTNEYyEg0KBWRhdGEwGAEg",
            "ASgJEg0KBWRhdGExGAIgASgJEg0KBWRhdGEyGAMgASgJEg0KBWRhdGEzGAQg",
            "ASgJEg0KBWRhdGE0GAUgASgCEg0KBWRhdGE1GAYgASgCImcKC0RhdGFzZXRC",
            "NUYxEg0KBWRhdGEwGAEgASgIEg0KBWRhdGExGAIgASgIEg0KBWRhdGEyGAMg",
            "ASgIEg0KBWRhdGEzGAQgASgIEg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYg",
            "ASgCImkKDURhdGFzZXRCNEYxUzESDQoFZGF0YTAYASABKAgSDQoFZGF0YTEY",
            "AiABKAgSDQoFZGF0YTIYAyABKAgSDQoFZGF0YTMYBCABKAgSDQoFZGF0YTQY",
            "BSABKAISDQoFZGF0YTUYBiABKAkiaQoNRGF0YXNldEIzUzJGMRINCgVkYXRh",
            "MBgBIAEoCBINCgVkYXRhMRgCIAEoCBINCgVkYXRhMhgDIAEoCBINCgVkYXRh",
            "MxgEIAEoCRINCgVkYXRhNBgFIAEoCRINCgVkYXRhNRgGIAEoAiJpCg1EYXRh",
            "c2V0UzNCMkYxEg0KBWRhdGEwGAEgASgJEg0KBWRhdGExGAIgASgJEg0KBWRh",
            "dGEyGAMgASgJEg0KBWRhdGEzGAQgASgIEg0KBWRhdGE0GAUgASgIEg0KBWRh",
            "dGE1GAYgASgCImkKDURhdGFzZXRTNEYxQjESDQoFZGF0YTAYASABKAkSDQoF",
            "ZGF0YTEYAiABKAkSDQoFZGF0YTIYAyABKAkSDQoFZGF0YTMYBCABKAkSDQoF",
            "ZGF0YTQYBSABKAISDQoFZGF0YTUYBiABKAgiZwoLRGF0YXNldFM1RjESDQoF",
            "ZGF0YTAYASABKAkSDQoFZGF0YTEYAiABKAkSDQoFZGF0YTIYAyABKAkSDQoF",
            "ZGF0YTMYBCABKAkSDQoFZGF0YTQYBSABKAkSDQoFZGF0YTUYBiABKAIiZQoJ",
            "RGF0YXNldEI2Eg0KBWRhdGEwGAEgASgIEg0KBWRhdGExGAIgASgIEg0KBWRh",
            "dGEyGAMgASgIEg0KBWRhdGEzGAQgASgIEg0KBWRhdGE0GAUgASgIEg0KBWRh",
            "dGE1GAYgASgIImcKC0RhdGFzZXRCNVMxEg0KBWRhdGEwGAEgASgIEg0KBWRh",
            "dGExGAIgASgIEg0KBWRhdGEyGAMgASgIEg0KBWRhdGEzGAQgASgIEg0KBWRh",
            "dGE0GAUgASgIEg0KBWRhdGE1GAYgASgJImcKC0RhdGFzZXRCNFMyEg0KBWRh",
            "dGEwGAEgASgIEg0KBWRhdGExGAIgASgIEg0KBWRhdGEyGAMgASgIEg0KBWRh",
            "dGEzGAQgASgIEg0KBWRhdGE0GAUgASgJEg0KBWRhdGE1GAYgASgJImcKC0Rh",
            "dGFzZXRCM1MzEg0KBWRhdGEwGAEgASgIEg0KBWRhdGExGAIgASgIEg0KBWRh",
            "dGEyGAMgASgIEg0KBWRhdGEzGAQgASgJEg0KBWRhdGE0GAUgASgJEg0KBWRh",
            "dGE1GAYgASgJImcKC0RhdGFzZXRTNEIyEg0KBWRhdGEwGAEgASgJEg0KBWRh",
            "dGExGAIgASgJEg0KBWRhdGEyGAMgASgJEg0KBWRhdGEzGAQgASgJEg0KBWRh",
            "dGE0GAUgASgIEg0KBWRhdGE1GAYgASgIImcKC0RhdGFzZXRTNUIxEg0KBWRh",
            "dGEwGAEgASgJEg0KBWRhdGExGAIgASgJEg0KBWRhdGEyGAMgASgJEg0KBWRh",
            "dGEzGAQgASgJEg0KBWRhdGE0GAUgASgJEg0KBWRhdGE1GAYgASgIImUKCURh",
            "dGFzZXRTNhINCgVkYXRhMBgBIAEoCRINCgVkYXRhMRgCIAEoCRINCgVkYXRh",
            "MhgDIAEoCRINCgVkYXRhMxgEIAEoCRINCgVkYXRhNBgFIAEoCRINCgVkYXRh",
            "NRgGIAEoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI6), global::AltarOfSword.DatasetI6.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI5F1), global::AltarOfSword.DatasetI5F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI5B1), global::AltarOfSword.DatasetI5B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI5S1), global::AltarOfSword.DatasetI5S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4F2), global::AltarOfSword.DatasetI4F2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4F1B1), global::AltarOfSword.DatasetI4F1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4F1S1), global::AltarOfSword.DatasetI4F1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4B2), global::AltarOfSword.DatasetI4B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4B1S1), global::AltarOfSword.DatasetI4B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4S2), global::AltarOfSword.DatasetI4S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3F3), global::AltarOfSword.DatasetI3F3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3F2B1), global::AltarOfSword.DatasetI3F2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3F2S1), global::AltarOfSword.DatasetI3F2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3B2F1), global::AltarOfSword.DatasetI3B2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3F1B1S1), global::AltarOfSword.DatasetI3F1B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3S2F1), global::AltarOfSword.DatasetI3S2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3B3), global::AltarOfSword.DatasetI3B3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3B2S1), global::AltarOfSword.DatasetI3B2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3S2B1), global::AltarOfSword.DatasetI3S2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3S3), global::AltarOfSword.DatasetI3S3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4I2), global::AltarOfSword.DatasetF4I2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3I2B1), global::AltarOfSword.DatasetF3I2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3I2S1), global::AltarOfSword.DatasetF3I2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2F2B2), global::AltarOfSword.DatasetI2F2B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2F2B1S1), global::AltarOfSword.DatasetI2F2B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2F2S2), global::AltarOfSword.DatasetI2F2S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3I2F1), global::AltarOfSword.DatasetB3I2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2B2F1S1), global::AltarOfSword.DatasetI2B2F1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2S2F1B1), global::AltarOfSword.DatasetI2S2F1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3I2F1), global::AltarOfSword.DatasetS3I2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4I2), global::AltarOfSword.DatasetB4I2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3I2S1), global::AltarOfSword.DatasetB3I2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2B2S2), global::AltarOfSword.DatasetI2B2S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3I2B1), global::AltarOfSword.DatasetS3I2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4I2), global::AltarOfSword.DatasetS4I2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF5I1), global::AltarOfSword.DatasetF5I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4I1B1), global::AltarOfSword.DatasetF4I1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4I1S1), global::AltarOfSword.DatasetF4I1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3B2I1), global::AltarOfSword.DatasetF3B2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3I1B1S1), global::AltarOfSword.DatasetF3I1B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3S2I1), global::AltarOfSword.DatasetF3S2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3F2I1), global::AltarOfSword.DatasetB3F2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF2B2I1S1), global::AltarOfSword.DatasetF2B2I1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF2S2I1B1), global::AltarOfSword.DatasetF2S2I1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3F2I1), global::AltarOfSword.DatasetS3F2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4I1F1), global::AltarOfSword.DatasetB4I1F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3I1F1S1), global::AltarOfSword.DatasetB3I1F1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB2S2I1F1), global::AltarOfSword.DatasetB2S2I1F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3I1F1B1), global::AltarOfSword.DatasetS3I1F1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4I1F1), global::AltarOfSword.DatasetS4I1F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB5I1), global::AltarOfSword.DatasetB5I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4I1S1), global::AltarOfSword.DatasetB4I1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3S2I1), global::AltarOfSword.DatasetB3S2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3B2I1), global::AltarOfSword.DatasetS3B2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4I1B1), global::AltarOfSword.DatasetS4I1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS5I1), global::AltarOfSword.DatasetS5I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF6), global::AltarOfSword.DatasetF6.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF5B1), global::AltarOfSword.DatasetF5B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF5S1), global::AltarOfSword.DatasetF5S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4B2), global::AltarOfSword.DatasetF4B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4B1S1), global::AltarOfSword.DatasetF4B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4S2), global::AltarOfSword.DatasetF4S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3B3), global::AltarOfSword.DatasetF3B3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3B2S1), global::AltarOfSword.DatasetF3B2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3S2B1), global::AltarOfSword.DatasetF3S2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3S3), global::AltarOfSword.DatasetF3S3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4F2), global::AltarOfSword.DatasetB4F2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3F2S1), global::AltarOfSword.DatasetB3F2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF2B2S2), global::AltarOfSword.DatasetF2B2S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3F2B1), global::AltarOfSword.DatasetS3F2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4F2), global::AltarOfSword.DatasetS4F2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB5F1), global::AltarOfSword.DatasetB5F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4F1S1), global::AltarOfSword.DatasetB4F1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3S2F1), global::AltarOfSword.DatasetB3S2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3B2F1), global::AltarOfSword.DatasetS3B2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4F1B1), global::AltarOfSword.DatasetS4F1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS5F1), global::AltarOfSword.DatasetS5F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB6), global::AltarOfSword.DatasetB6.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB5S1), global::AltarOfSword.DatasetB5S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4S2), global::AltarOfSword.DatasetB4S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3S3), global::AltarOfSword.DatasetB3S3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4B2), global::AltarOfSword.DatasetS4B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS5B1), global::AltarOfSword.DatasetS5B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS6), global::AltarOfSword.DatasetS6.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DatasetI6 : pb::IMessage<DatasetI6> {
    private static readonly pb::MessageParser<DatasetI6> _parser = new pb::MessageParser<DatasetI6>(() => new DatasetI6());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI6> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6(DatasetI6 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6 Clone() {
      return new DatasetI6(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI6);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI6 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI6 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI5F1 : pb::IMessage<DatasetI5F1> {
    private static readonly pb::MessageParser<DatasetI5F1> _parser = new pb::MessageParser<DatasetI5F1>(() => new DatasetI5F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI5F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5F1(DatasetI5F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5F1 Clone() {
      return new DatasetI5F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI5F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI5F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI5F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI5B1 : pb::IMessage<DatasetI5B1> {
    private static readonly pb::MessageParser<DatasetI5B1> _parser = new pb::MessageParser<DatasetI5B1>(() => new DatasetI5B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI5B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5B1(DatasetI5B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5B1 Clone() {
      return new DatasetI5B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI5B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI5B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI5B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI5S1 : pb::IMessage<DatasetI5S1> {
    private static readonly pb::MessageParser<DatasetI5S1> _parser = new pb::MessageParser<DatasetI5S1>(() => new DatasetI5S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI5S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5S1(DatasetI5S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5S1 Clone() {
      return new DatasetI5S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI5S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI5S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI5S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4F2 : pb::IMessage<DatasetI4F2> {
    private static readonly pb::MessageParser<DatasetI4F2> _parser = new pb::MessageParser<DatasetI4F2>(() => new DatasetI4F2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4F2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F2(DatasetI4F2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F2 Clone() {
      return new DatasetI4F2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4F2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4F2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4F2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4F1B1 : pb::IMessage<DatasetI4F1B1> {
    private static readonly pb::MessageParser<DatasetI4F1B1> _parser = new pb::MessageParser<DatasetI4F1B1>(() => new DatasetI4F1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4F1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F1B1(DatasetI4F1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F1B1 Clone() {
      return new DatasetI4F1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4F1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4F1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4F1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4F1S1 : pb::IMessage<DatasetI4F1S1> {
    private static readonly pb::MessageParser<DatasetI4F1S1> _parser = new pb::MessageParser<DatasetI4F1S1>(() => new DatasetI4F1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4F1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F1S1(DatasetI4F1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F1S1 Clone() {
      return new DatasetI4F1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4F1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4F1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4F1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4B2 : pb::IMessage<DatasetI4B2> {
    private static readonly pb::MessageParser<DatasetI4B2> _parser = new pb::MessageParser<DatasetI4B2>(() => new DatasetI4B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B2(DatasetI4B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B2 Clone() {
      return new DatasetI4B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4B1S1 : pb::IMessage<DatasetI4B1S1> {
    private static readonly pb::MessageParser<DatasetI4B1S1> _parser = new pb::MessageParser<DatasetI4B1S1>(() => new DatasetI4B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B1S1(DatasetI4B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B1S1 Clone() {
      return new DatasetI4B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4S2 : pb::IMessage<DatasetI4S2> {
    private static readonly pb::MessageParser<DatasetI4S2> _parser = new pb::MessageParser<DatasetI4S2>(() => new DatasetI4S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S2(DatasetI4S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S2 Clone() {
      return new DatasetI4S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3F3 : pb::IMessage<DatasetI3F3> {
    private static readonly pb::MessageParser<DatasetI3F3> _parser = new pb::MessageParser<DatasetI3F3>(() => new DatasetI3F3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3F3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F3(DatasetI3F3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F3 Clone() {
      return new DatasetI3F3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3F3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3F3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3F3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3F2B1 : pb::IMessage<DatasetI3F2B1> {
    private static readonly pb::MessageParser<DatasetI3F2B1> _parser = new pb::MessageParser<DatasetI3F2B1>(() => new DatasetI3F2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3F2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F2B1(DatasetI3F2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F2B1 Clone() {
      return new DatasetI3F2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3F2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3F2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3F2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3F2S1 : pb::IMessage<DatasetI3F2S1> {
    private static readonly pb::MessageParser<DatasetI3F2S1> _parser = new pb::MessageParser<DatasetI3F2S1>(() => new DatasetI3F2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3F2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F2S1(DatasetI3F2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F2S1 Clone() {
      return new DatasetI3F2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3F2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3F2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3F2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3B2F1 : pb::IMessage<DatasetI3B2F1> {
    private static readonly pb::MessageParser<DatasetI3B2F1> _parser = new pb::MessageParser<DatasetI3B2F1>(() => new DatasetI3B2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3B2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B2F1(DatasetI3B2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B2F1 Clone() {
      return new DatasetI3B2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3B2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3B2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3B2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3F1B1S1 : pb::IMessage<DatasetI3F1B1S1> {
    private static readonly pb::MessageParser<DatasetI3F1B1S1> _parser = new pb::MessageParser<DatasetI3F1B1S1>(() => new DatasetI3F1B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3F1B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F1B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F1B1S1(DatasetI3F1B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F1B1S1 Clone() {
      return new DatasetI3F1B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3F1B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3F1B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3F1B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3S2F1 : pb::IMessage<DatasetI3S2F1> {
    private static readonly pb::MessageParser<DatasetI3S2F1> _parser = new pb::MessageParser<DatasetI3S2F1>(() => new DatasetI3S2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3S2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S2F1(DatasetI3S2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S2F1 Clone() {
      return new DatasetI3S2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3S2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3S2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3S2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3B3 : pb::IMessage<DatasetI3B3> {
    private static readonly pb::MessageParser<DatasetI3B3> _parser = new pb::MessageParser<DatasetI3B3>(() => new DatasetI3B3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3B3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B3(DatasetI3B3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B3 Clone() {
      return new DatasetI3B3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3B3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3B3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3B3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3B2S1 : pb::IMessage<DatasetI3B2S1> {
    private static readonly pb::MessageParser<DatasetI3B2S1> _parser = new pb::MessageParser<DatasetI3B2S1>(() => new DatasetI3B2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3B2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B2S1(DatasetI3B2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B2S1 Clone() {
      return new DatasetI3B2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3B2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3B2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3B2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3S2B1 : pb::IMessage<DatasetI3S2B1> {
    private static readonly pb::MessageParser<DatasetI3S2B1> _parser = new pb::MessageParser<DatasetI3S2B1>(() => new DatasetI3S2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3S2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S2B1(DatasetI3S2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S2B1 Clone() {
      return new DatasetI3S2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3S2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3S2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3S2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3S3 : pb::IMessage<DatasetI3S3> {
    private static readonly pb::MessageParser<DatasetI3S3> _parser = new pb::MessageParser<DatasetI3S3>(() => new DatasetI3S3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3S3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S3(DatasetI3S3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S3 Clone() {
      return new DatasetI3S3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3S3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3S3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3S3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4I2 : pb::IMessage<DatasetF4I2> {
    private static readonly pb::MessageParser<DatasetF4I2> _parser = new pb::MessageParser<DatasetF4I2>(() => new DatasetF4I2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4I2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I2(DatasetF4I2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I2 Clone() {
      return new DatasetF4I2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4I2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4I2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4I2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3I2B1 : pb::IMessage<DatasetF3I2B1> {
    private static readonly pb::MessageParser<DatasetF3I2B1> _parser = new pb::MessageParser<DatasetF3I2B1>(() => new DatasetF3I2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3I2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I2B1(DatasetF3I2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I2B1 Clone() {
      return new DatasetF3I2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3I2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3I2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3I2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3I2S1 : pb::IMessage<DatasetF3I2S1> {
    private static readonly pb::MessageParser<DatasetF3I2S1> _parser = new pb::MessageParser<DatasetF3I2S1>(() => new DatasetF3I2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3I2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I2S1(DatasetF3I2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I2S1 Clone() {
      return new DatasetF3I2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3I2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3I2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3I2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2F2B2 : pb::IMessage<DatasetI2F2B2> {
    private static readonly pb::MessageParser<DatasetI2F2B2> _parser = new pb::MessageParser<DatasetI2F2B2>(() => new DatasetI2F2B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2F2B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2B2(DatasetI2F2B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2B2 Clone() {
      return new DatasetI2F2B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2F2B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2F2B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2F2B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2F2B1S1 : pb::IMessage<DatasetI2F2B1S1> {
    private static readonly pb::MessageParser<DatasetI2F2B1S1> _parser = new pb::MessageParser<DatasetI2F2B1S1>(() => new DatasetI2F2B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2F2B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2B1S1(DatasetI2F2B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2B1S1 Clone() {
      return new DatasetI2F2B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2F2B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2F2B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2F2B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2F2S2 : pb::IMessage<DatasetI2F2S2> {
    private static readonly pb::MessageParser<DatasetI2F2S2> _parser = new pb::MessageParser<DatasetI2F2S2>(() => new DatasetI2F2S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2F2S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2S2(DatasetI2F2S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2S2 Clone() {
      return new DatasetI2F2S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2F2S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2F2S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2F2S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3I2F1 : pb::IMessage<DatasetB3I2F1> {
    private static readonly pb::MessageParser<DatasetB3I2F1> _parser = new pb::MessageParser<DatasetB3I2F1>(() => new DatasetB3I2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3I2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I2F1(DatasetB3I2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I2F1 Clone() {
      return new DatasetB3I2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3I2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3I2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3I2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2B2F1S1 : pb::IMessage<DatasetI2B2F1S1> {
    private static readonly pb::MessageParser<DatasetI2B2F1S1> _parser = new pb::MessageParser<DatasetI2B2F1S1>(() => new DatasetI2B2F1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2B2F1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B2F1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B2F1S1(DatasetI2B2F1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B2F1S1 Clone() {
      return new DatasetI2B2F1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2B2F1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2B2F1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2B2F1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2S2F1B1 : pb::IMessage<DatasetI2S2F1B1> {
    private static readonly pb::MessageParser<DatasetI2S2F1B1> _parser = new pb::MessageParser<DatasetI2S2F1B1>(() => new DatasetI2S2F1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2S2F1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2S2F1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2S2F1B1(DatasetI2S2F1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2S2F1B1 Clone() {
      return new DatasetI2S2F1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2S2F1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2S2F1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2S2F1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3I2F1 : pb::IMessage<DatasetS3I2F1> {
    private static readonly pb::MessageParser<DatasetS3I2F1> _parser = new pb::MessageParser<DatasetS3I2F1>(() => new DatasetS3I2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3I2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I2F1(DatasetS3I2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I2F1 Clone() {
      return new DatasetS3I2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3I2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3I2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3I2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4I2 : pb::IMessage<DatasetB4I2> {
    private static readonly pb::MessageParser<DatasetB4I2> _parser = new pb::MessageParser<DatasetB4I2>(() => new DatasetB4I2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4I2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I2(DatasetB4I2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I2 Clone() {
      return new DatasetB4I2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4I2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4I2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4I2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3I2S1 : pb::IMessage<DatasetB3I2S1> {
    private static readonly pb::MessageParser<DatasetB3I2S1> _parser = new pb::MessageParser<DatasetB3I2S1>(() => new DatasetB3I2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3I2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I2S1(DatasetB3I2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I2S1 Clone() {
      return new DatasetB3I2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3I2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3I2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3I2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2B2S2 : pb::IMessage<DatasetI2B2S2> {
    private static readonly pb::MessageParser<DatasetI2B2S2> _parser = new pb::MessageParser<DatasetI2B2S2>(() => new DatasetI2B2S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2B2S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B2S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B2S2(DatasetI2B2S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B2S2 Clone() {
      return new DatasetI2B2S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2B2S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2B2S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2B2S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3I2B1 : pb::IMessage<DatasetS3I2B1> {
    private static readonly pb::MessageParser<DatasetS3I2B1> _parser = new pb::MessageParser<DatasetS3I2B1>(() => new DatasetS3I2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3I2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I2B1(DatasetS3I2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I2B1 Clone() {
      return new DatasetS3I2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3I2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3I2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3I2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4I2 : pb::IMessage<DatasetS4I2> {
    private static readonly pb::MessageParser<DatasetS4I2> _parser = new pb::MessageParser<DatasetS4I2>(() => new DatasetS4I2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4I2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I2(DatasetS4I2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I2 Clone() {
      return new DatasetS4I2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4I2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4I2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4I2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF5I1 : pb::IMessage<DatasetF5I1> {
    private static readonly pb::MessageParser<DatasetF5I1> _parser = new pb::MessageParser<DatasetF5I1>(() => new DatasetF5I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF5I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5I1(DatasetF5I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5I1 Clone() {
      return new DatasetF5I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF5I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF5I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF5I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4I1B1 : pb::IMessage<DatasetF4I1B1> {
    private static readonly pb::MessageParser<DatasetF4I1B1> _parser = new pb::MessageParser<DatasetF4I1B1>(() => new DatasetF4I1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4I1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I1B1(DatasetF4I1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I1B1 Clone() {
      return new DatasetF4I1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4I1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4I1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4I1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4I1S1 : pb::IMessage<DatasetF4I1S1> {
    private static readonly pb::MessageParser<DatasetF4I1S1> _parser = new pb::MessageParser<DatasetF4I1S1>(() => new DatasetF4I1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4I1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I1S1(DatasetF4I1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I1S1 Clone() {
      return new DatasetF4I1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4I1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4I1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4I1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3B2I1 : pb::IMessage<DatasetF3B2I1> {
    private static readonly pb::MessageParser<DatasetF3B2I1> _parser = new pb::MessageParser<DatasetF3B2I1>(() => new DatasetF3B2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3B2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B2I1(DatasetF3B2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B2I1 Clone() {
      return new DatasetF3B2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3B2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3B2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3B2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3I1B1S1 : pb::IMessage<DatasetF3I1B1S1> {
    private static readonly pb::MessageParser<DatasetF3I1B1S1> _parser = new pb::MessageParser<DatasetF3I1B1S1>(() => new DatasetF3I1B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3I1B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I1B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I1B1S1(DatasetF3I1B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I1B1S1 Clone() {
      return new DatasetF3I1B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3I1B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3I1B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3I1B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3S2I1 : pb::IMessage<DatasetF3S2I1> {
    private static readonly pb::MessageParser<DatasetF3S2I1> _parser = new pb::MessageParser<DatasetF3S2I1>(() => new DatasetF3S2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3S2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S2I1(DatasetF3S2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S2I1 Clone() {
      return new DatasetF3S2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3S2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3S2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3S2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3F2I1 : pb::IMessage<DatasetB3F2I1> {
    private static readonly pb::MessageParser<DatasetB3F2I1> _parser = new pb::MessageParser<DatasetB3F2I1>(() => new DatasetB3F2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3F2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F2I1(DatasetB3F2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F2I1 Clone() {
      return new DatasetB3F2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3F2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3F2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3F2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF2B2I1S1 : pb::IMessage<DatasetF2B2I1S1> {
    private static readonly pb::MessageParser<DatasetF2B2I1S1> _parser = new pb::MessageParser<DatasetF2B2I1S1>(() => new DatasetF2B2I1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF2B2I1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B2I1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B2I1S1(DatasetF2B2I1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B2I1S1 Clone() {
      return new DatasetF2B2I1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF2B2I1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF2B2I1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF2B2I1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF2S2I1B1 : pb::IMessage<DatasetF2S2I1B1> {
    private static readonly pb::MessageParser<DatasetF2S2I1B1> _parser = new pb::MessageParser<DatasetF2S2I1B1>(() => new DatasetF2S2I1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF2S2I1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2S2I1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2S2I1B1(DatasetF2S2I1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2S2I1B1 Clone() {
      return new DatasetF2S2I1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF2S2I1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF2S2I1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF2S2I1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3F2I1 : pb::IMessage<DatasetS3F2I1> {
    private static readonly pb::MessageParser<DatasetS3F2I1> _parser = new pb::MessageParser<DatasetS3F2I1>(() => new DatasetS3F2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3F2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F2I1(DatasetS3F2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F2I1 Clone() {
      return new DatasetS3F2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3F2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3F2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3F2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4I1F1 : pb::IMessage<DatasetB4I1F1> {
    private static readonly pb::MessageParser<DatasetB4I1F1> _parser = new pb::MessageParser<DatasetB4I1F1>(() => new DatasetB4I1F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4I1F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I1F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I1F1(DatasetB4I1F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I1F1 Clone() {
      return new DatasetB4I1F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4I1F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4I1F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4I1F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3I1F1S1 : pb::IMessage<DatasetB3I1F1S1> {
    private static readonly pb::MessageParser<DatasetB3I1F1S1> _parser = new pb::MessageParser<DatasetB3I1F1S1>(() => new DatasetB3I1F1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3I1F1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I1F1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I1F1S1(DatasetB3I1F1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I1F1S1 Clone() {
      return new DatasetB3I1F1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3I1F1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3I1F1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3I1F1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB2S2I1F1 : pb::IMessage<DatasetB2S2I1F1> {
    private static readonly pb::MessageParser<DatasetB2S2I1F1> _parser = new pb::MessageParser<DatasetB2S2I1F1>(() => new DatasetB2S2I1F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB2S2I1F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2S2I1F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2S2I1F1(DatasetB2S2I1F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2S2I1F1 Clone() {
      return new DatasetB2S2I1F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB2S2I1F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB2S2I1F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB2S2I1F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3I1F1B1 : pb::IMessage<DatasetS3I1F1B1> {
    private static readonly pb::MessageParser<DatasetS3I1F1B1> _parser = new pb::MessageParser<DatasetS3I1F1B1>(() => new DatasetS3I1F1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3I1F1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I1F1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I1F1B1(DatasetS3I1F1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I1F1B1 Clone() {
      return new DatasetS3I1F1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3I1F1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3I1F1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3I1F1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4I1F1 : pb::IMessage<DatasetS4I1F1> {
    private static readonly pb::MessageParser<DatasetS4I1F1> _parser = new pb::MessageParser<DatasetS4I1F1>(() => new DatasetS4I1F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4I1F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I1F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I1F1(DatasetS4I1F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I1F1 Clone() {
      return new DatasetS4I1F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4I1F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4I1F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4I1F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB5I1 : pb::IMessage<DatasetB5I1> {
    private static readonly pb::MessageParser<DatasetB5I1> _parser = new pb::MessageParser<DatasetB5I1>(() => new DatasetB5I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB5I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5I1(DatasetB5I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5I1 Clone() {
      return new DatasetB5I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB5I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB5I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB5I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4I1S1 : pb::IMessage<DatasetB4I1S1> {
    private static readonly pb::MessageParser<DatasetB4I1S1> _parser = new pb::MessageParser<DatasetB4I1S1>(() => new DatasetB4I1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4I1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I1S1(DatasetB4I1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I1S1 Clone() {
      return new DatasetB4I1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4I1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4I1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4I1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3S2I1 : pb::IMessage<DatasetB3S2I1> {
    private static readonly pb::MessageParser<DatasetB3S2I1> _parser = new pb::MessageParser<DatasetB3S2I1>(() => new DatasetB3S2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3S2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S2I1(DatasetB3S2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S2I1 Clone() {
      return new DatasetB3S2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3S2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3S2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3S2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3B2I1 : pb::IMessage<DatasetS3B2I1> {
    private static readonly pb::MessageParser<DatasetS3B2I1> _parser = new pb::MessageParser<DatasetS3B2I1>(() => new DatasetS3B2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3B2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3B2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3B2I1(DatasetS3B2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3B2I1 Clone() {
      return new DatasetS3B2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3B2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3B2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3B2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4I1B1 : pb::IMessage<DatasetS4I1B1> {
    private static readonly pb::MessageParser<DatasetS4I1B1> _parser = new pb::MessageParser<DatasetS4I1B1>(() => new DatasetS4I1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4I1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I1B1(DatasetS4I1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I1B1 Clone() {
      return new DatasetS4I1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4I1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4I1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4I1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS5I1 : pb::IMessage<DatasetS5I1> {
    private static readonly pb::MessageParser<DatasetS5I1> _parser = new pb::MessageParser<DatasetS5I1>(() => new DatasetS5I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS5I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5I1(DatasetS5I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5I1 Clone() {
      return new DatasetS5I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS5I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS5I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS5I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF6 : pb::IMessage<DatasetF6> {
    private static readonly pb::MessageParser<DatasetF6> _parser = new pb::MessageParser<DatasetF6>(() => new DatasetF6());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF6> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6(DatasetF6 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6 Clone() {
      return new DatasetF6(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF6);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF6 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF6 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF5B1 : pb::IMessage<DatasetF5B1> {
    private static readonly pb::MessageParser<DatasetF5B1> _parser = new pb::MessageParser<DatasetF5B1>(() => new DatasetF5B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF5B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5B1(DatasetF5B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5B1 Clone() {
      return new DatasetF5B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF5B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF5B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF5B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF5S1 : pb::IMessage<DatasetF5S1> {
    private static readonly pb::MessageParser<DatasetF5S1> _parser = new pb::MessageParser<DatasetF5S1>(() => new DatasetF5S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF5S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5S1(DatasetF5S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5S1 Clone() {
      return new DatasetF5S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF5S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF5S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF5S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4B2 : pb::IMessage<DatasetF4B2> {
    private static readonly pb::MessageParser<DatasetF4B2> _parser = new pb::MessageParser<DatasetF4B2>(() => new DatasetF4B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B2(DatasetF4B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B2 Clone() {
      return new DatasetF4B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4B1S1 : pb::IMessage<DatasetF4B1S1> {
    private static readonly pb::MessageParser<DatasetF4B1S1> _parser = new pb::MessageParser<DatasetF4B1S1>(() => new DatasetF4B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B1S1(DatasetF4B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B1S1 Clone() {
      return new DatasetF4B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4S2 : pb::IMessage<DatasetF4S2> {
    private static readonly pb::MessageParser<DatasetF4S2> _parser = new pb::MessageParser<DatasetF4S2>(() => new DatasetF4S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S2(DatasetF4S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S2 Clone() {
      return new DatasetF4S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3B3 : pb::IMessage<DatasetF3B3> {
    private static readonly pb::MessageParser<DatasetF3B3> _parser = new pb::MessageParser<DatasetF3B3>(() => new DatasetF3B3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3B3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B3(DatasetF3B3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B3 Clone() {
      return new DatasetF3B3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3B3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3B3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3B3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3B2S1 : pb::IMessage<DatasetF3B2S1> {
    private static readonly pb::MessageParser<DatasetF3B2S1> _parser = new pb::MessageParser<DatasetF3B2S1>(() => new DatasetF3B2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3B2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B2S1(DatasetF3B2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B2S1 Clone() {
      return new DatasetF3B2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3B2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3B2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3B2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3S2B1 : pb::IMessage<DatasetF3S2B1> {
    private static readonly pb::MessageParser<DatasetF3S2B1> _parser = new pb::MessageParser<DatasetF3S2B1>(() => new DatasetF3S2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3S2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S2B1(DatasetF3S2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S2B1 Clone() {
      return new DatasetF3S2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3S2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3S2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3S2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3S3 : pb::IMessage<DatasetF3S3> {
    private static readonly pb::MessageParser<DatasetF3S3> _parser = new pb::MessageParser<DatasetF3S3>(() => new DatasetF3S3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3S3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S3(DatasetF3S3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S3 Clone() {
      return new DatasetF3S3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3S3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3S3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3S3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4F2 : pb::IMessage<DatasetB4F2> {
    private static readonly pb::MessageParser<DatasetB4F2> _parser = new pb::MessageParser<DatasetB4F2>(() => new DatasetB4F2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4F2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F2(DatasetB4F2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F2 Clone() {
      return new DatasetB4F2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4F2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4F2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4F2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3F2S1 : pb::IMessage<DatasetB3F2S1> {
    private static readonly pb::MessageParser<DatasetB3F2S1> _parser = new pb::MessageParser<DatasetB3F2S1>(() => new DatasetB3F2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3F2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F2S1(DatasetB3F2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F2S1 Clone() {
      return new DatasetB3F2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3F2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3F2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3F2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF2B2S2 : pb::IMessage<DatasetF2B2S2> {
    private static readonly pb::MessageParser<DatasetF2B2S2> _parser = new pb::MessageParser<DatasetF2B2S2>(() => new DatasetF2B2S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF2B2S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B2S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B2S2(DatasetF2B2S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B2S2 Clone() {
      return new DatasetF2B2S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF2B2S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF2B2S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF2B2S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3F2B1 : pb::IMessage<DatasetS3F2B1> {
    private static readonly pb::MessageParser<DatasetS3F2B1> _parser = new pb::MessageParser<DatasetS3F2B1>(() => new DatasetS3F2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3F2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F2B1(DatasetS3F2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F2B1 Clone() {
      return new DatasetS3F2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3F2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3F2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3F2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4F2 : pb::IMessage<DatasetS4F2> {
    private static readonly pb::MessageParser<DatasetS4F2> _parser = new pb::MessageParser<DatasetS4F2>(() => new DatasetS4F2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4F2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F2(DatasetS4F2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F2 Clone() {
      return new DatasetS4F2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4F2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4F2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4F2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB5F1 : pb::IMessage<DatasetB5F1> {
    private static readonly pb::MessageParser<DatasetB5F1> _parser = new pb::MessageParser<DatasetB5F1>(() => new DatasetB5F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB5F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5F1(DatasetB5F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5F1 Clone() {
      return new DatasetB5F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB5F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB5F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB5F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4F1S1 : pb::IMessage<DatasetB4F1S1> {
    private static readonly pb::MessageParser<DatasetB4F1S1> _parser = new pb::MessageParser<DatasetB4F1S1>(() => new DatasetB4F1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4F1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F1S1(DatasetB4F1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F1S1 Clone() {
      return new DatasetB4F1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4F1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4F1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4F1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3S2F1 : pb::IMessage<DatasetB3S2F1> {
    private static readonly pb::MessageParser<DatasetB3S2F1> _parser = new pb::MessageParser<DatasetB3S2F1>(() => new DatasetB3S2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3S2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S2F1(DatasetB3S2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S2F1 Clone() {
      return new DatasetB3S2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3S2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3S2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3S2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3B2F1 : pb::IMessage<DatasetS3B2F1> {
    private static readonly pb::MessageParser<DatasetS3B2F1> _parser = new pb::MessageParser<DatasetS3B2F1>(() => new DatasetS3B2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3B2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3B2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3B2F1(DatasetS3B2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3B2F1 Clone() {
      return new DatasetS3B2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3B2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3B2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3B2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4F1B1 : pb::IMessage<DatasetS4F1B1> {
    private static readonly pb::MessageParser<DatasetS4F1B1> _parser = new pb::MessageParser<DatasetS4F1B1>(() => new DatasetS4F1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4F1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F1B1(DatasetS4F1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F1B1 Clone() {
      return new DatasetS4F1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4F1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4F1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4F1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS5F1 : pb::IMessage<DatasetS5F1> {
    private static readonly pb::MessageParser<DatasetS5F1> _parser = new pb::MessageParser<DatasetS5F1>(() => new DatasetS5F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS5F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5F1(DatasetS5F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5F1 Clone() {
      return new DatasetS5F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS5F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS5F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS5F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB6 : pb::IMessage<DatasetB6> {
    private static readonly pb::MessageParser<DatasetB6> _parser = new pb::MessageParser<DatasetB6>(() => new DatasetB6());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB6> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6(DatasetB6 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6 Clone() {
      return new DatasetB6(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB6);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB6 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB6 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB5S1 : pb::IMessage<DatasetB5S1> {
    private static readonly pb::MessageParser<DatasetB5S1> _parser = new pb::MessageParser<DatasetB5S1>(() => new DatasetB5S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB5S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5S1(DatasetB5S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5S1 Clone() {
      return new DatasetB5S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB5S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB5S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB5S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4S2 : pb::IMessage<DatasetB4S2> {
    private static readonly pb::MessageParser<DatasetB4S2> _parser = new pb::MessageParser<DatasetB4S2>(() => new DatasetB4S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S2(DatasetB4S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S2 Clone() {
      return new DatasetB4S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3S3 : pb::IMessage<DatasetB3S3> {
    private static readonly pb::MessageParser<DatasetB3S3> _parser = new pb::MessageParser<DatasetB3S3>(() => new DatasetB3S3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3S3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S3(DatasetB3S3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S3 Clone() {
      return new DatasetB3S3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3S3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3S3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3S3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4B2 : pb::IMessage<DatasetS4B2> {
    private static readonly pb::MessageParser<DatasetS4B2> _parser = new pb::MessageParser<DatasetS4B2>(() => new DatasetS4B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4B2(DatasetS4B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4B2 Clone() {
      return new DatasetS4B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS5B1 : pb::IMessage<DatasetS5B1> {
    private static readonly pb::MessageParser<DatasetS5B1> _parser = new pb::MessageParser<DatasetS5B1>(() => new DatasetS5B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS5B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5B1(DatasetS5B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5B1 Clone() {
      return new DatasetS5B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS5B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS5B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS5B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS6 : pb::IMessage<DatasetS6> {
    private static readonly pb::MessageParser<DatasetS6> _parser = new pb::MessageParser<DatasetS6>(() => new DatasetS6());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS6> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset6Reflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6(DatasetS6 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6 Clone() {
      return new DatasetS6(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS6);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS6 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS6 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
