// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Dataset2.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AltarOfSword {

  /// <summary>Holder for reflection information generated from Dataset2.proto</summary>
  public static partial class Dataset2Reflection {

    #region Descriptor
    /// <summary>File descriptor for Dataset2.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Dataset2Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5EYXRhc2V0Mi5wcm90bxIMQWx0YXJPZlN3b3JkIikKCURhdGFzZXRJMhIN",
            "CgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBSIrCgtEYXRhc2V0STFGMRIN",
            "CgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoAiIrCgtEYXRhc2V0STFCMRIN",
            "CgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoCCIrCgtEYXRhc2V0STFTMRIN",
            "CgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoCSIpCglEYXRhc2V0RjISDQoF",
            "ZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAIiKwoLRGF0YXNldEYxQjESDQoF",
            "ZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAgiKwoLRGF0YXNldEYxUzESDQoF",
            "ZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAkiKQoJRGF0YXNldEIyEg0KBWRh",
            "dGEwGAEgASgIEg0KBWRhdGExGAIgASgIIisKC0RhdGFzZXRCMVMxEg0KBWRh",
            "dGEwGAEgASgIEg0KBWRhdGExGAIgASgJIikKCURhdGFzZXRTMhINCgVkYXRh",
            "MBgBIAEoCRINCgVkYXRhMRgCIAEoCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2), global::AltarOfSword.DatasetI2.Parser, new[]{ "Data0", "Data1" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI1F1), global::AltarOfSword.DatasetI1F1.Parser, new[]{ "Data0", "Data1" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI1B1), global::AltarOfSword.DatasetI1B1.Parser, new[]{ "Data0", "Data1" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI1S1), global::AltarOfSword.DatasetI1S1.Parser, new[]{ "Data0", "Data1" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF2), global::AltarOfSword.DatasetF2.Parser, new[]{ "Data0", "Data1" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF1B1), global::AltarOfSword.DatasetF1B1.Parser, new[]{ "Data0", "Data1" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF1S1), global::AltarOfSword.DatasetF1S1.Parser, new[]{ "Data0", "Data1" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB2), global::AltarOfSword.DatasetB2.Parser, new[]{ "Data0", "Data1" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB1S1), global::AltarOfSword.DatasetB1S1.Parser, new[]{ "Data0", "Data1" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS2), global::AltarOfSword.DatasetS2.Parser, new[]{ "Data0", "Data1" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DatasetI2 : pb::IMessage<DatasetI2> {
    private static readonly pb::MessageParser<DatasetI2> _parser = new pb::MessageParser<DatasetI2>(() => new DatasetI2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset2Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2(DatasetI2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2 Clone() {
      return new DatasetI2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI1F1 : pb::IMessage<DatasetI1F1> {
    private static readonly pb::MessageParser<DatasetI1F1> _parser = new pb::MessageParser<DatasetI1F1>(() => new DatasetI1F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI1F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset2Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI1F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI1F1(DatasetI1F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI1F1 Clone() {
      return new DatasetI1F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI1F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI1F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI1F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI1B1 : pb::IMessage<DatasetI1B1> {
    private static readonly pb::MessageParser<DatasetI1B1> _parser = new pb::MessageParser<DatasetI1B1>(() => new DatasetI1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset2Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI1B1(DatasetI1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI1B1 Clone() {
      return new DatasetI1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI1S1 : pb::IMessage<DatasetI1S1> {
    private static readonly pb::MessageParser<DatasetI1S1> _parser = new pb::MessageParser<DatasetI1S1>(() => new DatasetI1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset2Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI1S1(DatasetI1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI1S1 Clone() {
      return new DatasetI1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF2 : pb::IMessage<DatasetF2> {
    private static readonly pb::MessageParser<DatasetF2> _parser = new pb::MessageParser<DatasetF2>(() => new DatasetF2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset2Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2(DatasetF2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2 Clone() {
      return new DatasetF2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF1B1 : pb::IMessage<DatasetF1B1> {
    private static readonly pb::MessageParser<DatasetF1B1> _parser = new pb::MessageParser<DatasetF1B1>(() => new DatasetF1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset2Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF1B1(DatasetF1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF1B1 Clone() {
      return new DatasetF1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (Data1 != other.Data1) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF1S1 : pb::IMessage<DatasetF1S1> {
    private static readonly pb::MessageParser<DatasetF1S1> _parser = new pb::MessageParser<DatasetF1S1>(() => new DatasetF1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset2Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF1S1(DatasetF1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF1S1 Clone() {
      return new DatasetF1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (Data1 != other.Data1) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB2 : pb::IMessage<DatasetB2> {
    private static readonly pb::MessageParser<DatasetB2> _parser = new pb::MessageParser<DatasetB2>(() => new DatasetB2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset2Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2(DatasetB2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2 Clone() {
      return new DatasetB2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB1S1 : pb::IMessage<DatasetB1S1> {
    private static readonly pb::MessageParser<DatasetB1S1> _parser = new pb::MessageParser<DatasetB1S1>(() => new DatasetB1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset2Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB1S1(DatasetB1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB1S1 Clone() {
      return new DatasetB1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS2 : pb::IMessage<DatasetS2> {
    private static readonly pb::MessageParser<DatasetS2> _parser = new pb::MessageParser<DatasetS2>(() => new DatasetS2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset2Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS2(DatasetS2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS2 Clone() {
      return new DatasetS2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
