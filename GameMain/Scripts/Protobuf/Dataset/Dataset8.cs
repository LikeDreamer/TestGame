// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Dataset8.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AltarOfSword {

  /// <summary>Holder for reflection information generated from Dataset8.proto</summary>
  public static partial class Dataset8Reflection {

    #region Descriptor
    /// <summary>File descriptor for Dataset8.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Dataset8Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5EYXRhc2V0OC5wcm90bxIMQWx0YXJPZlN3b3JkIoMBCglEYXRhc2V0STgS",
            "DQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyABKAUS",
            "DQoFZGF0YTMYBCABKAUSDQoFZGF0YTQYBSABKAUSDQoFZGF0YTUYBiABKAUS",
            "DQoFZGF0YTYYByABKAUSDQoFZGF0YTcYCCABKAUihQEKC0RhdGFzZXRJN0Yx",
            "Eg0KBWRhdGEwGAEgASgFEg0KBWRhdGExGAIgASgFEg0KBWRhdGEyGAMgASgF",
            "Eg0KBWRhdGEzGAQgASgFEg0KBWRhdGE0GAUgASgFEg0KBWRhdGE1GAYgASgF",
            "Eg0KBWRhdGE2GAcgASgFEg0KBWRhdGE3GAggASgCIoUBCgtEYXRhc2V0STdC",
            "MRINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEo",
            "BRINCgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoBRINCgVkYXRhNRgGIAEo",
            "BRINCgVkYXRhNhgHIAEoBRINCgVkYXRhNxgIIAEoCCKFAQoLRGF0YXNldEk3",
            "UzESDQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyAB",
            "KAUSDQoFZGF0YTMYBCABKAUSDQoFZGF0YTQYBSABKAUSDQoFZGF0YTUYBiAB",
            "KAUSDQoFZGF0YTYYByABKAUSDQoFZGF0YTcYCCABKAkihQEKC0RhdGFzZXRJ",
            "NkYyEg0KBWRhdGEwGAEgASgFEg0KBWRhdGExGAIgASgFEg0KBWRhdGEyGAMg",
            "ASgFEg0KBWRhdGEzGAQgASgFEg0KBWRhdGE0GAUgASgFEg0KBWRhdGE1GAYg",
            "ASgFEg0KBWRhdGE2GAcgASgCEg0KBWRhdGE3GAggASgCIocBCg1EYXRhc2V0",
            "STZGMUIxEg0KBWRhdGEwGAEgASgFEg0KBWRhdGExGAIgASgFEg0KBWRhdGEy",
            "GAMgASgFEg0KBWRhdGEzGAQgASgFEg0KBWRhdGE0GAUgASgFEg0KBWRhdGE1",
            "GAYgASgFEg0KBWRhdGE2GAcgASgCEg0KBWRhdGE3GAggASgIIocBCg1EYXRh",
            "c2V0STZGMVMxEg0KBWRhdGEwGAEgASgFEg0KBWRhdGExGAIgASgFEg0KBWRh",
            "dGEyGAMgASgFEg0KBWRhdGEzGAQgASgFEg0KBWRhdGE0GAUgASgFEg0KBWRh",
            "dGE1GAYgASgFEg0KBWRhdGE2GAcgASgCEg0KBWRhdGE3GAggASgJIoUBCgtE",
            "YXRhc2V0STZCMhINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVk",
            "YXRhMhgDIAEoBRINCgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoBRINCgVk",
            "YXRhNRgGIAEoBRINCgVkYXRhNhgHIAEoCBINCgVkYXRhNxgIIAEoCCKHAQoN",
            "RGF0YXNldEk2QjFTMRINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRIN",
            "CgVkYXRhMhgDIAEoBRINCgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoBRIN",
            "CgVkYXRhNRgGIAEoBRINCgVkYXRhNhgHIAEoCBINCgVkYXRhNxgIIAEoCSKF",
            "AQoLRGF0YXNldEk2UzISDQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUS",
            "DQoFZGF0YTIYAyABKAUSDQoFZGF0YTMYBCABKAUSDQoFZGF0YTQYBSABKAUS",
            "DQoFZGF0YTUYBiABKAUSDQoFZGF0YTYYByABKAkSDQoFZGF0YTcYCCABKAki",
            "hQEKC0RhdGFzZXRJNUYzEg0KBWRhdGEwGAEgASgFEg0KBWRhdGExGAIgASgF",
            "Eg0KBWRhdGEyGAMgASgFEg0KBWRhdGEzGAQgASgFEg0KBWRhdGE0GAUgASgF",
            "Eg0KBWRhdGE1GAYgASgCEg0KBWRhdGE2GAcgASgCEg0KBWRhdGE3GAggASgC",
            "IocBCg1EYXRhc2V0STVGMkIxEg0KBWRhdGEwGAEgASgFEg0KBWRhdGExGAIg",
            "ASgFEg0KBWRhdGEyGAMgASgFEg0KBWRhdGEzGAQgASgFEg0KBWRhdGE0GAUg",
            "ASgFEg0KBWRhdGE1GAYgASgCEg0KBWRhdGE2GAcgASgCEg0KBWRhdGE3GAgg",
            "ASgIIocBCg1EYXRhc2V0STVGMlMxEg0KBWRhdGEwGAEgASgFEg0KBWRhdGEx",
            "GAIgASgFEg0KBWRhdGEyGAMgASgFEg0KBWRhdGEzGAQgASgFEg0KBWRhdGE0",
            "GAUgASgFEg0KBWRhdGE1GAYgASgCEg0KBWRhdGE2GAcgASgCEg0KBWRhdGE3",
            "GAggASgJIocBCg1EYXRhc2V0STVCMkYxEg0KBWRhdGEwGAEgASgFEg0KBWRh",
            "dGExGAIgASgFEg0KBWRhdGEyGAMgASgFEg0KBWRhdGEzGAQgASgFEg0KBWRh",
            "dGE0GAUgASgFEg0KBWRhdGE1GAYgASgIEg0KBWRhdGE2GAcgASgIEg0KBWRh",
            "dGE3GAggASgCIokBCg9EYXRhc2V0STVGMUIxUzESDQoFZGF0YTAYASABKAUS",
            "DQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyABKAUSDQoFZGF0YTMYBCABKAUS",
            "DQoFZGF0YTQYBSABKAUSDQoFZGF0YTUYBiABKAISDQoFZGF0YTYYByABKAgS",
            "DQoFZGF0YTcYCCABKAkihwEKDURhdGFzZXRJNVMyRjESDQoFZGF0YTAYASAB",
            "KAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyABKAUSDQoFZGF0YTMYBCAB",
            "KAUSDQoFZGF0YTQYBSABKAUSDQoFZGF0YTUYBiABKAkSDQoFZGF0YTYYByAB",
            "KAkSDQoFZGF0YTcYCCABKAIihQEKC0RhdGFzZXRJNUIzEg0KBWRhdGEwGAEg",
            "ASgFEg0KBWRhdGExGAIgASgFEg0KBWRhdGEyGAMgASgFEg0KBWRhdGEzGAQg",
            "ASgFEg0KBWRhdGE0GAUgASgFEg0KBWRhdGE1GAYgASgIEg0KBWRhdGE2GAcg",
            "ASgIEg0KBWRhdGE3GAggASgIIocBCg1EYXRhc2V0STVCMlMxEg0KBWRhdGEw",
            "GAEgASgFEg0KBWRhdGExGAIgASgFEg0KBWRhdGEyGAMgASgFEg0KBWRhdGEz",
            "GAQgASgFEg0KBWRhdGE0GAUgASgFEg0KBWRhdGE1GAYgASgIEg0KBWRhdGE2",
            "GAcgASgIEg0KBWRhdGE3GAggASgJIocBCg1EYXRhc2V0STVTMkIxEg0KBWRh",
            "dGEwGAEgASgFEg0KBWRhdGExGAIgASgFEg0KBWRhdGEyGAMgASgFEg0KBWRh",
            "dGEzGAQgASgFEg0KBWRhdGE0GAUgASgFEg0KBWRhdGE1GAYgASgJEg0KBWRh",
            "dGE2GAcgASgJEg0KBWRhdGE3GAggASgIIoUBCgtEYXRhc2V0STVTMxINCgVk",
            "YXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoBRINCgVk",
            "YXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoBRINCgVkYXRhNRgGIAEoCRINCgVk",
            "YXRhNhgHIAEoCRINCgVkYXRhNxgIIAEoCSKFAQoLRGF0YXNldEk0RjQSDQoF",
            "ZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyABKAUSDQoF",
            "ZGF0YTMYBCABKAUSDQoFZGF0YTQYBSABKAISDQoFZGF0YTUYBiABKAISDQoF",
            "ZGF0YTYYByABKAISDQoFZGF0YTcYCCABKAIihwEKDURhdGFzZXRJNEYzQjES",
            "DQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyABKAUS",
            "DQoFZGF0YTMYBCABKAUSDQoFZGF0YTQYBSABKAISDQoFZGF0YTUYBiABKAIS",
            "DQoFZGF0YTYYByABKAISDQoFZGF0YTcYCCABKAgihwEKDURhdGFzZXRJNEYz",
            "UzESDQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyAB",
            "KAUSDQoFZGF0YTMYBCABKAUSDQoFZGF0YTQYBSABKAISDQoFZGF0YTUYBiAB",
            "KAISDQoFZGF0YTYYByABKAISDQoFZGF0YTcYCCABKAkihwEKDURhdGFzZXRJ",
            "NEYyQjISDQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIY",
            "AyABKAUSDQoFZGF0YTMYBCABKAUSDQoFZGF0YTQYBSABKAISDQoFZGF0YTUY",
            "BiABKAISDQoFZGF0YTYYByABKAgSDQoFZGF0YTcYCCABKAgiiQEKD0RhdGFz",
            "ZXRJNEYyQjFTMRINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVk",
            "YXRhMhgDIAEoBRINCgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoAhINCgVk",
            "YXRhNRgGIAEoAhINCgVkYXRhNhgHIAEoCBINCgVkYXRhNxgIIAEoCSKHAQoN",
            "RGF0YXNldEk0RjJTMhINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRIN",
            "CgVkYXRhMhgDIAEoBRINCgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoAhIN",
            "CgVkYXRhNRgGIAEoAhINCgVkYXRhNhgHIAEoCRINCgVkYXRhNxgIIAEoCSKH",
            "AQoNRGF0YXNldEk0QjNGMRINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEo",
            "BRINCgVkYXRhMhgDIAEoBRINCgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEo",
            "CBINCgVkYXRhNRgGIAEoCBINCgVkYXRhNhgHIAEoCBINCgVkYXRhNxgIIAEo",
            "AiKJAQoPRGF0YXNldEk0QjJGMVMxEg0KBWRhdGEwGAEgASgFEg0KBWRhdGEx",
            "GAIgASgFEg0KBWRhdGEyGAMgASgFEg0KBWRhdGEzGAQgASgFEg0KBWRhdGE0",
            "GAUgASgIEg0KBWRhdGE1GAYgASgIEg0KBWRhdGE2GAcgASgCEg0KBWRhdGE3",
            "GAggASgJIokBCg9EYXRhc2V0STRTMkYxQjESDQoFZGF0YTAYASABKAUSDQoF",
            "ZGF0YTEYAiABKAUSDQoFZGF0YTIYAyABKAUSDQoFZGF0YTMYBCABKAUSDQoF",
            "ZGF0YTQYBSABKAkSDQoFZGF0YTUYBiABKAkSDQoFZGF0YTYYByABKAISDQoF",
            "ZGF0YTcYCCABKAgihwEKDURhdGFzZXRJNFMzRjESDQoFZGF0YTAYASABKAUS",
            "DQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyABKAUSDQoFZGF0YTMYBCABKAUS",
            "DQoFZGF0YTQYBSABKAkSDQoFZGF0YTUYBiABKAkSDQoFZGF0YTYYByABKAkS",
            "DQoFZGF0YTcYCCABKAIihQEKC0RhdGFzZXRJNEI0Eg0KBWRhdGEwGAEgASgF",
            "Eg0KBWRhdGExGAIgASgFEg0KBWRhdGEyGAMgASgFEg0KBWRhdGEzGAQgASgF",
            "Eg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYgASgIEg0KBWRhdGE2GAcgASgI",
            "Eg0KBWRhdGE3GAggASgIIocBCg1EYXRhc2V0STRCM1MxEg0KBWRhdGEwGAEg",
            "ASgFEg0KBWRhdGExGAIgASgFEg0KBWRhdGEyGAMgASgFEg0KBWRhdGEzGAQg",
            "ASgFEg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYgASgIEg0KBWRhdGE2GAcg",
            "ASgIEg0KBWRhdGE3GAggASgJIocBCg1EYXRhc2V0STRCMlMyEg0KBWRhdGEw",
            "GAEgASgFEg0KBWRhdGExGAIgASgFEg0KBWRhdGEyGAMgASgFEg0KBWRhdGEz",
            "GAQgASgFEg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYgASgIEg0KBWRhdGE2",
            "GAcgASgJEg0KBWRhdGE3GAggASgJIocBCg1EYXRhc2V0STRTM0IxEg0KBWRh",
            "dGEwGAEgASgFEg0KBWRhdGExGAIgASgFEg0KBWRhdGEyGAMgASgFEg0KBWRh",
            "dGEzGAQgASgFEg0KBWRhdGE0GAUgASgJEg0KBWRhdGE1GAYgASgJEg0KBWRh",
            "dGE2GAcgASgJEg0KBWRhdGE3GAggASgIIoUBCgtEYXRhc2V0STRTNBINCgVk",
            "YXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoBRINCgVk",
            "YXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoCRINCgVkYXRhNRgGIAEoCRINCgVk",
            "YXRhNhgHIAEoCRINCgVkYXRhNxgIIAEoCSKFAQoLRGF0YXNldEY1STMSDQoF",
            "ZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAISDQoFZGF0YTIYAyABKAISDQoF",
            "ZGF0YTMYBCABKAISDQoFZGF0YTQYBSABKAISDQoFZGF0YTUYBiABKAUSDQoF",
            "ZGF0YTYYByABKAUSDQoFZGF0YTcYCCABKAUihwEKDURhdGFzZXRGNEkzQjES",
            "DQoFZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAISDQoFZGF0YTIYAyABKAIS",
            "DQoFZGF0YTMYBCABKAISDQoFZGF0YTQYBSABKAUSDQoFZGF0YTUYBiABKAUS",
            "DQoFZGF0YTYYByABKAUSDQoFZGF0YTcYCCABKAgihwEKDURhdGFzZXRGNEkz",
            "UzESDQoFZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAISDQoFZGF0YTIYAyAB",
            "KAISDQoFZGF0YTMYBCABKAISDQoFZGF0YTQYBSABKAUSDQoFZGF0YTUYBiAB",
            "KAUSDQoFZGF0YTYYByABKAUSDQoFZGF0YTcYCCABKAkihwEKDURhdGFzZXRJ",
            "M0YzQjISDQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIY",
            "AyABKAUSDQoFZGF0YTMYBCABKAISDQoFZGF0YTQYBSABKAISDQoFZGF0YTUY",
            "BiABKAISDQoFZGF0YTYYByABKAgSDQoFZGF0YTcYCCABKAgiiQEKD0RhdGFz",
            "ZXRJM0YzQjFTMRINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVk",
            "YXRhMhgDIAEoBRINCgVkYXRhMxgEIAEoAhINCgVkYXRhNBgFIAEoAhINCgVk",
            "YXRhNRgGIAEoAhINCgVkYXRhNhgHIAEoCBINCgVkYXRhNxgIIAEoCSKHAQoN",
            "RGF0YXNldEkzRjNTMhINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRIN",
            "CgVkYXRhMhgDIAEoBRINCgVkYXRhMxgEIAEoAhINCgVkYXRhNBgFIAEoAhIN",
            "CgVkYXRhNRgGIAEoAhINCgVkYXRhNhgHIAEoCRINCgVkYXRhNxgIIAEoCSKH",
            "AQoNRGF0YXNldEkzQjNGMhINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEo",
            "BRINCgVkYXRhMhgDIAEoBRINCgVkYXRhMxgEIAEoCBINCgVkYXRhNBgFIAEo",
            "CBINCgVkYXRhNRgGIAEoCBINCgVkYXRhNhgHIAEoAhINCgVkYXRhNxgIIAEo",
            "AiKJAQoPRGF0YXNldEkzRjJCMlMxEg0KBWRhdGEwGAEgASgFEg0KBWRhdGEx",
            "GAIgASgFEg0KBWRhdGEyGAMgASgFEg0KBWRhdGEzGAQgASgCEg0KBWRhdGE0",
            "GAUgASgCEg0KBWRhdGE1GAYgASgIEg0KBWRhdGE2GAcgASgIEg0KBWRhdGE3",
            "GAggASgJIokBCg9EYXRhc2V0STNGMlMyQjESDQoFZGF0YTAYASABKAUSDQoF",
            "ZGF0YTEYAiABKAUSDQoFZGF0YTIYAyABKAUSDQoFZGF0YTMYBCABKAISDQoF",
            "ZGF0YTQYBSABKAISDQoFZGF0YTUYBiABKAkSDQoFZGF0YTYYByABKAkSDQoF",
            "ZGF0YTcYCCABKAgihwEKDURhdGFzZXRJM1MzRjISDQoFZGF0YTAYASABKAUS",
            "DQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyABKAUSDQoFZGF0YTMYBCABKAkS",
            "DQoFZGF0YTQYBSABKAkSDQoFZGF0YTUYBiABKAkSDQoFZGF0YTYYByABKAIS",
            "DQoFZGF0YTcYCCABKAIihwEKDURhdGFzZXRCNEkzRjESDQoFZGF0YTAYASAB",
            "KAgSDQoFZGF0YTEYAiABKAgSDQoFZGF0YTIYAyABKAgSDQoFZGF0YTMYBCAB",
            "KAgSDQoFZGF0YTQYBSABKAUSDQoFZGF0YTUYBiABKAUSDQoFZGF0YTYYByAB",
            "KAUSDQoFZGF0YTcYCCABKAIiiQEKD0RhdGFzZXRJM0IzRjFTMRINCgVkYXRh",
            "MBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoBRINCgVkYXRh",
            "MxgEIAEoCBINCgVkYXRhNBgFIAEoCBINCgVkYXRhNRgGIAEoCBINCgVkYXRh",
            "NhgHIAEoAhINCgVkYXRhNxgIIAEoCSKJAQoPRGF0YXNldEkzQjJTMkYxEg0K",
            "BWRhdGEwGAEgASgFEg0KBWRhdGExGAIgASgFEg0KBWRhdGEyGAMgASgFEg0K",
            "BWRhdGEzGAQgASgIEg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYgASgJEg0K",
            "BWRhdGE2GAcgASgJEg0KBWRhdGE3GAggASgCIokBCg9EYXRhc2V0STNTM0Yx",
            "QjESDQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyAB",
            "KAUSDQoFZGF0YTMYBCABKAkSDQoFZGF0YTQYBSABKAkSDQoFZGF0YTUYBiAB",
            "KAkSDQoFZGF0YTYYByABKAISDQoFZGF0YTcYCCABKAgihwEKDURhdGFzZXRT",
            "NEkzRjESDQoFZGF0YTAYASABKAkSDQoFZGF0YTEYAiABKAkSDQoFZGF0YTIY",
            "AyABKAkSDQoFZGF0YTMYBCABKAkSDQoFZGF0YTQYBSABKAUSDQoFZGF0YTUY",
            "BiABKAUSDQoFZGF0YTYYByABKAUSDQoFZGF0YTcYCCABKAIihQEKC0RhdGFz",
            "ZXRCNUkzEg0KBWRhdGEwGAEgASgIEg0KBWRhdGExGAIgASgIEg0KBWRhdGEy",
            "GAMgASgIEg0KBWRhdGEzGAQgASgIEg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1",
            "GAYgASgFEg0KBWRhdGE2GAcgASgFEg0KBWRhdGE3GAggASgFIocBCg1EYXRh",
            "c2V0QjRJM1MxEg0KBWRhdGEwGAEgASgIEg0KBWRhdGExGAIgASgIEg0KBWRh",
            "dGEyGAMgASgIEg0KBWRhdGEzGAQgASgIEg0KBWRhdGE0GAUgASgFEg0KBWRh",
            "dGE1GAYgASgFEg0KBWRhdGE2GAcgASgFEg0KBWRhdGE3GAggASgJIocBCg1E",
            "YXRhc2V0STNCM1MyEg0KBWRhdGEwGAEgASgFEg0KBWRhdGExGAIgASgFEg0K",
            "BWRhdGEyGAMgASgFEg0KBWRhdGEzGAQgASgIEg0KBWRhdGE0GAUgASgIEg0K",
            "BWRhdGE1GAYgASgIEg0KBWRhdGE2GAcgASgJEg0KBWRhdGE3GAggASgJIocB",
            "Cg1EYXRhc2V0STNTM0IyEg0KBWRhdGEwGAEgASgFEg0KBWRhdGExGAIgASgF",
            "Eg0KBWRhdGEyGAMgASgFEg0KBWRhdGEzGAQgASgJEg0KBWRhdGE0GAUgASgJ",
            "Eg0KBWRhdGE1GAYgASgJEg0KBWRhdGE2GAcgASgIEg0KBWRhdGE3GAggASgI",
            "IocBCg1EYXRhc2V0UzRJM0IxEg0KBWRhdGEwGAEgASgJEg0KBWRhdGExGAIg",
            "ASgJEg0KBWRhdGEyGAMgASgJEg0KBWRhdGEzGAQgASgJEg0KBWRhdGE0GAUg",
            "ASgFEg0KBWRhdGE1GAYgASgFEg0KBWRhdGE2GAcgASgFEg0KBWRhdGE3GAgg",
            "ASgIIoUBCgtEYXRhc2V0UzVJMxINCgVkYXRhMBgBIAEoCRINCgVkYXRhMRgC",
            "IAEoCRINCgVkYXRhMhgDIAEoCRINCgVkYXRhMxgEIAEoCRINCgVkYXRhNBgF",
            "IAEoCRINCgVkYXRhNRgGIAEoBRINCgVkYXRhNhgHIAEoBRINCgVkYXRhNxgI",
            "IAEoBSKFAQoLRGF0YXNldEY2STISDQoFZGF0YTAYASABKAISDQoFZGF0YTEY",
            "AiABKAISDQoFZGF0YTIYAyABKAISDQoFZGF0YTMYBCABKAISDQoFZGF0YTQY",
            "BSABKAISDQoFZGF0YTUYBiABKAISDQoFZGF0YTYYByABKAUSDQoFZGF0YTcY",
            "CCABKAUihwEKDURhdGFzZXRGNUkyQjESDQoFZGF0YTAYASABKAISDQoFZGF0",
            "YTEYAiABKAISDQoFZGF0YTIYAyABKAISDQoFZGF0YTMYBCABKAISDQoFZGF0",
            "YTQYBSABKAISDQoFZGF0YTUYBiABKAUSDQoFZGF0YTYYByABKAUSDQoFZGF0",
            "YTcYCCABKAgihwEKDURhdGFzZXRGNUkyUzESDQoFZGF0YTAYASABKAISDQoF",
            "ZGF0YTEYAiABKAISDQoFZGF0YTIYAyABKAISDQoFZGF0YTMYBCABKAISDQoF",
            "ZGF0YTQYBSABKAISDQoFZGF0YTUYBiABKAUSDQoFZGF0YTYYByABKAUSDQoF",
            "ZGF0YTcYCCABKAkihwEKDURhdGFzZXRGNEkyQjISDQoFZGF0YTAYASABKAIS",
            "DQoFZGF0YTEYAiABKAISDQoFZGF0YTIYAyABKAISDQoFZGF0YTMYBCABKAIS",
            "DQoFZGF0YTQYBSABKAUSDQoFZGF0YTUYBiABKAUSDQoFZGF0YTYYByABKAgS",
            "DQoFZGF0YTcYCCABKAgiiQEKD0RhdGFzZXRGNEkyQjFTMRINCgVkYXRhMBgB",
            "IAEoAhINCgVkYXRhMRgCIAEoAhINCgVkYXRhMhgDIAEoAhINCgVkYXRhMxgE",
            "IAEoAhINCgVkYXRhNBgFIAEoBRINCgVkYXRhNRgGIAEoBRINCgVkYXRhNhgH",
            "IAEoCBINCgVkYXRhNxgIIAEoCSKHAQoNRGF0YXNldEY0STJTMhINCgVkYXRh",
            "MBgBIAEoAhINCgVkYXRhMRgCIAEoAhINCgVkYXRhMhgDIAEoAhINCgVkYXRh",
            "MxgEIAEoAhINCgVkYXRhNBgFIAEoBRINCgVkYXRhNRgGIAEoBRINCgVkYXRh",
            "NhgHIAEoCRINCgVkYXRhNxgIIAEoCSKHAQoNRGF0YXNldEYzQjNJMhINCgVk",
            "YXRhMBgBIAEoAhINCgVkYXRhMRgCIAEoAhINCgVkYXRhMhgDIAEoAhINCgVk",
            "YXRhMxgEIAEoCBINCgVkYXRhNBgFIAEoCBINCgVkYXRhNRgGIAEoCBINCgVk",
            "YXRhNhgHIAEoBRINCgVkYXRhNxgIIAEoBSKJAQoPRGF0YXNldEYzSTJCMlMx",
            "Eg0KBWRhdGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMgASgC",
            "Eg0KBWRhdGEzGAQgASgFEg0KBWRhdGE0GAUgASgFEg0KBWRhdGE1GAYgASgI",
            "Eg0KBWRhdGE2GAcgASgIEg0KBWRhdGE3GAggASgJIokBCg9EYXRhc2V0RjNJ",
            "MlMyQjESDQoFZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAISDQoFZGF0YTIY",
            "AyABKAISDQoFZGF0YTMYBCABKAUSDQoFZGF0YTQYBSABKAUSDQoFZGF0YTUY",
            "BiABKAkSDQoFZGF0YTYYByABKAkSDQoFZGF0YTcYCCABKAgihwEKDURhdGFz",
            "ZXRGM1MzSTISDQoFZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAISDQoFZGF0",
            "YTIYAyABKAISDQoFZGF0YTMYBCABKAkSDQoFZGF0YTQYBSABKAkSDQoFZGF0",
            "YTUYBiABKAkSDQoFZGF0YTYYByABKAUSDQoFZGF0YTcYCCABKAUihwEKDURh",
            "dGFzZXRCNEkyRjISDQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiABKAgSDQoF",
            "ZGF0YTIYAyABKAgSDQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAUSDQoF",
            "ZGF0YTUYBiABKAUSDQoFZGF0YTYYByABKAISDQoFZGF0YTcYCCABKAIiiQEK",
            "D0RhdGFzZXRCM0kyRjJTMRINCgVkYXRhMBgBIAEoCBINCgVkYXRhMRgCIAEo",
            "CBINCgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEo",
            "BRINCgVkYXRhNRgGIAEoAhINCgVkYXRhNhgHIAEoAhINCgVkYXRhNxgIIAEo",
            "CSKJAQoPRGF0YXNldEkyRjJCMlMyEg0KBWRhdGEwGAEgASgFEg0KBWRhdGEx",
            "GAIgASgFEg0KBWRhdGEyGAMgASgCEg0KBWRhdGEzGAQgASgCEg0KBWRhdGE0",
            "GAUgASgIEg0KBWRhdGE1GAYgASgIEg0KBWRhdGE2GAcgASgJEg0KBWRhdGE3",
            "GAggASgJIokBCg9EYXRhc2V0UzNJMkYyQjESDQoFZGF0YTAYASABKAkSDQoF",
            "ZGF0YTEYAiABKAkSDQoFZGF0YTIYAyABKAkSDQoFZGF0YTMYBCABKAUSDQoF",
            "ZGF0YTQYBSABKAUSDQoFZGF0YTUYBiABKAISDQoFZGF0YTYYByABKAISDQoF",
            "ZGF0YTcYCCABKAgihwEKDURhdGFzZXRTNEkyRjISDQoFZGF0YTAYASABKAkS",
            "DQoFZGF0YTEYAiABKAkSDQoFZGF0YTIYAyABKAkSDQoFZGF0YTMYBCABKAkS",
            "DQoFZGF0YTQYBSABKAUSDQoFZGF0YTUYBiABKAUSDQoFZGF0YTYYByABKAIS",
            "DQoFZGF0YTcYCCABKAIihwEKDURhdGFzZXRCNUkyRjESDQoFZGF0YTAYASAB",
            "KAgSDQoFZGF0YTEYAiABKAgSDQoFZGF0YTIYAyABKAgSDQoFZGF0YTMYBCAB",
            "KAgSDQoFZGF0YTQYBSABKAgSDQoFZGF0YTUYBiABKAUSDQoFZGF0YTYYByAB",
            "KAUSDQoFZGF0YTcYCCABKAIiiQEKD0RhdGFzZXRCNEkyRjFTMRINCgVkYXRh",
            "MBgBIAEoCBINCgVkYXRhMRgCIAEoCBINCgVkYXRhMhgDIAEoCBINCgVkYXRh",
            "MxgEIAEoCBINCgVkYXRhNBgFIAEoBRINCgVkYXRhNRgGIAEoBRINCgVkYXRh",
            "NhgHIAEoAhINCgVkYXRhNxgIIAEoCSKJAQoPRGF0YXNldEIzSTJTMkYxEg0K",
            "BWRhdGEwGAEgASgIEg0KBWRhdGExGAIgASgIEg0KBWRhdGEyGAMgASgIEg0K",
            "BWRhdGEzGAQgASgFEg0KBWRhdGE0GAUgASgFEg0KBWRhdGE1GAYgASgJEg0K",
            "BWRhdGE2GAcgASgJEg0KBWRhdGE3GAggASgCIokBCg9EYXRhc2V0UzNJMkIy",
            "RjESDQoFZGF0YTAYASABKAkSDQoFZGF0YTEYAiABKAkSDQoFZGF0YTIYAyAB",
            "KAkSDQoFZGF0YTMYBCABKAUSDQoFZGF0YTQYBSABKAUSDQoFZGF0YTUYBiAB",
            "KAgSDQoFZGF0YTYYByABKAgSDQoFZGF0YTcYCCABKAIiiQEKD0RhdGFzZXRT",
            "NEkyRjFCMRINCgVkYXRhMBgBIAEoCRINCgVkYXRhMRgCIAEoCRINCgVkYXRh",
            "MhgDIAEoCRINCgVkYXRhMxgEIAEoCRINCgVkYXRhNBgFIAEoBRINCgVkYXRh",
            "NRgGIAEoBRINCgVkYXRhNhgHIAEoAhINCgVkYXRhNxgIIAEoCCKHAQoNRGF0",
            "YXNldFM1STJGMRINCgVkYXRhMBgBIAEoCRINCgVkYXRhMRgCIAEoCRINCgVk",
            "YXRhMhgDIAEoCRINCgVkYXRhMxgEIAEoCRINCgVkYXRhNBgFIAEoCRINCgVk",
            "YXRhNRgGIAEoBRINCgVkYXRhNhgHIAEoBRINCgVkYXRhNxgIIAEoAiKFAQoL",
            "RGF0YXNldEI2STISDQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiABKAgSDQoF",
            "ZGF0YTIYAyABKAgSDQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAgSDQoF",
            "ZGF0YTUYBiABKAgSDQoFZGF0YTYYByABKAUSDQoFZGF0YTcYCCABKAUihwEK",
            "DURhdGFzZXRCNUkyUzESDQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiABKAgS",
            "DQoFZGF0YTIYAyABKAgSDQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAgS",
            "DQoFZGF0YTUYBiABKAUSDQoFZGF0YTYYByABKAUSDQoFZGF0YTcYCCABKAki",
            "hwEKDURhdGFzZXRCNEkyUzISDQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiAB",
            "KAgSDQoFZGF0YTIYAyABKAgSDQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSAB",
            "KAUSDQoFZGF0YTUYBiABKAUSDQoFZGF0YTYYByABKAkSDQoFZGF0YTcYCCAB",
            "KAkihwEKDURhdGFzZXRCM1MzSTISDQoFZGF0YTAYASABKAgSDQoFZGF0YTEY",
            "AiABKAgSDQoFZGF0YTIYAyABKAgSDQoFZGF0YTMYBCABKAkSDQoFZGF0YTQY",
            "BSABKAkSDQoFZGF0YTUYBiABKAkSDQoFZGF0YTYYByABKAUSDQoFZGF0YTcY",
            "CCABKAUihwEKDURhdGFzZXRTNEkyQjISDQoFZGF0YTAYASABKAkSDQoFZGF0",
            "YTEYAiABKAkSDQoFZGF0YTIYAyABKAkSDQoFZGF0YTMYBCABKAkSDQoFZGF0",
            "YTQYBSABKAUSDQoFZGF0YTUYBiABKAUSDQoFZGF0YTYYByABKAgSDQoFZGF0",
            "YTcYCCABKAgihwEKDURhdGFzZXRTNUkyQjESDQoFZGF0YTAYASABKAkSDQoF",
            "ZGF0YTEYAiABKAkSDQoFZGF0YTIYAyABKAkSDQoFZGF0YTMYBCABKAkSDQoF",
            "ZGF0YTQYBSABKAkSDQoFZGF0YTUYBiABKAUSDQoFZGF0YTYYByABKAUSDQoF",
            "ZGF0YTcYCCABKAgihQEKC0RhdGFzZXRTNkkyEg0KBWRhdGEwGAEgASgJEg0K",
            "BWRhdGExGAIgASgJEg0KBWRhdGEyGAMgASgJEg0KBWRhdGEzGAQgASgJEg0K",
            "BWRhdGE0GAUgASgJEg0KBWRhdGE1GAYgASgJEg0KBWRhdGE2GAcgASgFEg0K",
            "BWRhdGE3GAggASgFIoUBCgtEYXRhc2V0RjdJMRINCgVkYXRhMBgBIAEoAhIN",
            "CgVkYXRhMRgCIAEoAhINCgVkYXRhMhgDIAEoAhINCgVkYXRhMxgEIAEoAhIN",
            "CgVkYXRhNBgFIAEoAhINCgVkYXRhNRgGIAEoAhINCgVkYXRhNhgHIAEoAhIN",
            "CgVkYXRhNxgIIAEoBSKHAQoNRGF0YXNldEY2STFCMRINCgVkYXRhMBgBIAEo",
            "AhINCgVkYXRhMRgCIAEoAhINCgVkYXRhMhgDIAEoAhINCgVkYXRhMxgEIAEo",
            "AhINCgVkYXRhNBgFIAEoAhINCgVkYXRhNRgGIAEoAhINCgVkYXRhNhgHIAEo",
            "BRINCgVkYXRhNxgIIAEoCCKHAQoNRGF0YXNldEY2STFTMRINCgVkYXRhMBgB",
            "IAEoAhINCgVkYXRhMRgCIAEoAhINCgVkYXRhMhgDIAEoAhINCgVkYXRhMxgE",
            "IAEoAhINCgVkYXRhNBgFIAEoAhINCgVkYXRhNRgGIAEoAhINCgVkYXRhNhgH",
            "IAEoBRINCgVkYXRhNxgIIAEoCSKHAQoNRGF0YXNldEY1QjJJMRINCgVkYXRh",
            "MBgBIAEoAhINCgVkYXRhMRgCIAEoAhINCgVkYXRhMhgDIAEoAhINCgVkYXRh",
            "MxgEIAEoAhINCgVkYXRhNBgFIAEoAhINCgVkYXRhNRgGIAEoCBINCgVkYXRh",
            "NhgHIAEoCBINCgVkYXRhNxgIIAEoBSKJAQoPRGF0YXNldEY1STFCMVMxEg0K",
            "BWRhdGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMgASgCEg0K",
            "BWRhdGEzGAQgASgCEg0KBWRhdGE0GAUgASgCEg0KBWRhdGE1GAYgASgFEg0K",
            "BWRhdGE2GAcgASgIEg0KBWRhdGE3GAggASgJIocBCg1EYXRhc2V0RjVTMkkx",
            "Eg0KBWRhdGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMgASgC",
            "Eg0KBWRhdGEzGAQgASgCEg0KBWRhdGE0GAUgASgCEg0KBWRhdGE1GAYgASgJ",
            "Eg0KBWRhdGE2GAcgASgJEg0KBWRhdGE3GAggASgFIocBCg1EYXRhc2V0RjRC",
            "M0kxEg0KBWRhdGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMg",
            "ASgCEg0KBWRhdGEzGAQgASgCEg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYg",
            "ASgIEg0KBWRhdGE2GAcgASgIEg0KBWRhdGE3GAggASgFIokBCg9EYXRhc2V0",
            "RjRCMkkxUzESDQoFZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAISDQoFZGF0",
            "YTIYAyABKAISDQoFZGF0YTMYBCABKAISDQoFZGF0YTQYBSABKAgSDQoFZGF0",
            "YTUYBiABKAgSDQoFZGF0YTYYByABKAUSDQoFZGF0YTcYCCABKAkiiQEKD0Rh",
            "dGFzZXRGNFMySTFCMRINCgVkYXRhMBgBIAEoAhINCgVkYXRhMRgCIAEoAhIN",
            "CgVkYXRhMhgDIAEoAhINCgVkYXRhMxgEIAEoAhINCgVkYXRhNBgFIAEoCRIN",
            "CgVkYXRhNRgGIAEoCRINCgVkYXRhNhgHIAEoBRINCgVkYXRhNxgIIAEoCCKH",
            "AQoNRGF0YXNldEY0UzNJMRINCgVkYXRhMBgBIAEoAhINCgVkYXRhMRgCIAEo",
            "AhINCgVkYXRhMhgDIAEoAhINCgVkYXRhMxgEIAEoAhINCgVkYXRhNBgFIAEo",
            "CRINCgVkYXRhNRgGIAEoCRINCgVkYXRhNhgHIAEoCRINCgVkYXRhNxgIIAEo",
            "BSKHAQoNRGF0YXNldEI0RjNJMRINCgVkYXRhMBgBIAEoCBINCgVkYXRhMRgC",
            "IAEoCBINCgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoCBINCgVkYXRhNBgF",
            "IAEoAhINCgVkYXRhNRgGIAEoAhINCgVkYXRhNhgHIAEoAhINCgVkYXRhNxgI",
            "IAEoBSKJAQoPRGF0YXNldEYzQjNJMVMxEg0KBWRhdGEwGAEgASgCEg0KBWRh",
            "dGExGAIgASgCEg0KBWRhdGEyGAMgASgCEg0KBWRhdGEzGAQgASgIEg0KBWRh",
            "dGE0GAUgASgIEg0KBWRhdGE1GAYgASgIEg0KBWRhdGE2GAcgASgFEg0KBWRh",
            "dGE3GAggASgJIokBCg9EYXRhc2V0RjNCMlMySTESDQoFZGF0YTAYASABKAIS",
            "DQoFZGF0YTEYAiABKAISDQoFZGF0YTIYAyABKAISDQoFZGF0YTMYBCABKAgS",
            "DQoFZGF0YTQYBSABKAgSDQoFZGF0YTUYBiABKAkSDQoFZGF0YTYYByABKAkS",
            "DQoFZGF0YTcYCCABKAUiiQEKD0RhdGFzZXRGM1MzSTFCMRINCgVkYXRhMBgB",
            "IAEoAhINCgVkYXRhMRgCIAEoAhINCgVkYXRhMhgDIAEoAhINCgVkYXRhMxgE",
            "IAEoCRINCgVkYXRhNBgFIAEoCRINCgVkYXRhNRgGIAEoCRINCgVkYXRhNhgH",
            "IAEoBRINCgVkYXRhNxgIIAEoCCKHAQoNRGF0YXNldFM0RjNJMRINCgVkYXRh",
            "MBgBIAEoCRINCgVkYXRhMRgCIAEoCRINCgVkYXRhMhgDIAEoCRINCgVkYXRh",
            "MxgEIAEoCRINCgVkYXRhNBgFIAEoAhINCgVkYXRhNRgGIAEoAhINCgVkYXRh",
            "NhgHIAEoAhINCgVkYXRhNxgIIAEoBSKHAQoNRGF0YXNldEI1RjJJMRINCgVk",
            "YXRhMBgBIAEoCBINCgVkYXRhMRgCIAEoCBINCgVkYXRhMhgDIAEoCBINCgVk",
            "YXRhMxgEIAEoCBINCgVkYXRhNBgFIAEoCBINCgVkYXRhNRgGIAEoAhINCgVk",
            "YXRhNhgHIAEoAhINCgVkYXRhNxgIIAEoBSKJAQoPRGF0YXNldEI0RjJJMVMx",
            "Eg0KBWRhdGEwGAEgASgIEg0KBWRhdGExGAIgASgIEg0KBWRhdGEyGAMgASgI",
            "Eg0KBWRhdGEzGAQgASgIEg0KBWRhdGE0GAUgASgCEg0KBWRhdGE1GAYgASgC",
            "Eg0KBWRhdGE2GAcgASgFEg0KBWRhdGE3GAggASgJIokBCg9EYXRhc2V0QjNG",
            "MlMySTESDQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiABKAgSDQoFZGF0YTIY",
            "AyABKAgSDQoFZGF0YTMYBCABKAISDQoFZGF0YTQYBSABKAISDQoFZGF0YTUY",
            "BiABKAkSDQoFZGF0YTYYByABKAkSDQoFZGF0YTcYCCABKAUiiQEKD0RhdGFz",
            "ZXRTM0YyQjJJMRINCgVkYXRhMBgBIAEoCRINCgVkYXRhMRgCIAEoCRINCgVk",
            "YXRhMhgDIAEoCRINCgVkYXRhMxgEIAEoAhINCgVkYXRhNBgFIAEoAhINCgVk",
            "YXRhNRgGIAEoCBINCgVkYXRhNhgHIAEoCBINCgVkYXRhNxgIIAEoBSKJAQoP",
            "RGF0YXNldFM0RjJJMUIxEg0KBWRhdGEwGAEgASgJEg0KBWRhdGExGAIgASgJ",
            "Eg0KBWRhdGEyGAMgASgJEg0KBWRhdGEzGAQgASgJEg0KBWRhdGE0GAUgASgC",
            "Eg0KBWRhdGE1GAYgASgCEg0KBWRhdGE2GAcgASgFEg0KBWRhdGE3GAggASgI",
            "IocBCg1EYXRhc2V0UzVGMkkxEg0KBWRhdGEwGAEgASgJEg0KBWRhdGExGAIg",
            "ASgJEg0KBWRhdGEyGAMgASgJEg0KBWRhdGEzGAQgASgJEg0KBWRhdGE0GAUg",
            "ASgJEg0KBWRhdGE1GAYgASgCEg0KBWRhdGE2GAcgASgCEg0KBWRhdGE3GAgg",
            "ASgFIocBCg1EYXRhc2V0QjZJMUYxEg0KBWRhdGEwGAEgASgIEg0KBWRhdGEx",
            "GAIgASgIEg0KBWRhdGEyGAMgASgIEg0KBWRhdGEzGAQgASgIEg0KBWRhdGE0",
            "GAUgASgIEg0KBWRhdGE1GAYgASgIEg0KBWRhdGE2GAcgASgFEg0KBWRhdGE3",
            "GAggASgCIokBCg9EYXRhc2V0QjVJMUYxUzESDQoFZGF0YTAYASABKAgSDQoF",
            "ZGF0YTEYAiABKAgSDQoFZGF0YTIYAyABKAgSDQoFZGF0YTMYBCABKAgSDQoF",
            "ZGF0YTQYBSABKAgSDQoFZGF0YTUYBiABKAUSDQoFZGF0YTYYByABKAISDQoF",
            "ZGF0YTcYCCABKAkiiQEKD0RhdGFzZXRCNFMySTFGMRINCgVkYXRhMBgBIAEo",
            "CBINCgVkYXRhMRgCIAEoCBINCgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEo",
            "CBINCgVkYXRhNBgFIAEoCRINCgVkYXRhNRgGIAEoCRINCgVkYXRhNhgHIAEo",
            "BRINCgVkYXRhNxgIIAEoAiKJAQoPRGF0YXNldEIzUzNJMUYxEg0KBWRhdGEw",
            "GAEgASgIEg0KBWRhdGExGAIgASgIEg0KBWRhdGEyGAMgASgIEg0KBWRhdGEz",
            "GAQgASgJEg0KBWRhdGE0GAUgASgJEg0KBWRhdGE1GAYgASgJEg0KBWRhdGE2",
            "GAcgASgFEg0KBWRhdGE3GAggASgCIokBCg9EYXRhc2V0UzRCMkkxRjESDQoF",
            "ZGF0YTAYASABKAkSDQoFZGF0YTEYAiABKAkSDQoFZGF0YTIYAyABKAkSDQoF",
            "ZGF0YTMYBCABKAkSDQoFZGF0YTQYBSABKAgSDQoFZGF0YTUYBiABKAgSDQoF",
            "ZGF0YTYYByABKAUSDQoFZGF0YTcYCCABKAIiiQEKD0RhdGFzZXRTNUkxRjFC",
            "MRINCgVkYXRhMBgBIAEoCRINCgVkYXRhMRgCIAEoCRINCgVkYXRhMhgDIAEo",
            "CRINCgVkYXRhMxgEIAEoCRINCgVkYXRhNBgFIAEoCRINCgVkYXRhNRgGIAEo",
            "BRINCgVkYXRhNhgHIAEoAhINCgVkYXRhNxgIIAEoCCKHAQoNRGF0YXNldFM2",
            "STFGMRINCgVkYXRhMBgBIAEoCRINCgVkYXRhMRgCIAEoCRINCgVkYXRhMhgD",
            "IAEoCRINCgVkYXRhMxgEIAEoCRINCgVkYXRhNBgFIAEoCRINCgVkYXRhNRgG",
            "IAEoCRINCgVkYXRhNhgHIAEoBRINCgVkYXRhNxgIIAEoAiKFAQoLRGF0YXNl",
            "dEI3STESDQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiABKAgSDQoFZGF0YTIY",
            "AyABKAgSDQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAgSDQoFZGF0YTUY",
            "BiABKAgSDQoFZGF0YTYYByABKAgSDQoFZGF0YTcYCCABKAUihwEKDURhdGFz",
            "ZXRCNkkxUzESDQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiABKAgSDQoFZGF0",
            "YTIYAyABKAgSDQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAgSDQoFZGF0",
            "YTUYBiABKAgSDQoFZGF0YTYYByABKAUSDQoFZGF0YTcYCCABKAkihwEKDURh",
            "dGFzZXRCNVMySTESDQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiABKAgSDQoF",
            "ZGF0YTIYAyABKAgSDQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAgSDQoF",
            "ZGF0YTUYBiABKAkSDQoFZGF0YTYYByABKAkSDQoFZGF0YTcYCCABKAUihwEK",
            "DURhdGFzZXRCNFMzSTESDQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiABKAgS",
            "DQoFZGF0YTIYAyABKAgSDQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAkS",
            "DQoFZGF0YTUYBiABKAkSDQoFZGF0YTYYByABKAkSDQoFZGF0YTcYCCABKAUi",
            "hwEKDURhdGFzZXRTNEIzSTESDQoFZGF0YTAYASABKAkSDQoFZGF0YTEYAiAB",
            "KAkSDQoFZGF0YTIYAyABKAkSDQoFZGF0YTMYBCABKAkSDQoFZGF0YTQYBSAB",
            "KAgSDQoFZGF0YTUYBiABKAgSDQoFZGF0YTYYByABKAgSDQoFZGF0YTcYCCAB",
            "KAUihwEKDURhdGFzZXRTNUIySTESDQoFZGF0YTAYASABKAkSDQoFZGF0YTEY",
            "AiABKAkSDQoFZGF0YTIYAyABKAkSDQoFZGF0YTMYBCABKAkSDQoFZGF0YTQY",
            "BSABKAkSDQoFZGF0YTUYBiABKAgSDQoFZGF0YTYYByABKAgSDQoFZGF0YTcY",
            "CCABKAUihwEKDURhdGFzZXRTNkkxQjESDQoFZGF0YTAYASABKAkSDQoFZGF0",
            "YTEYAiABKAkSDQoFZGF0YTIYAyABKAkSDQoFZGF0YTMYBCABKAkSDQoFZGF0",
            "YTQYBSABKAkSDQoFZGF0YTUYBiABKAkSDQoFZGF0YTYYByABKAUSDQoFZGF0",
            "YTcYCCABKAgihQEKC0RhdGFzZXRTN0kxEg0KBWRhdGEwGAEgASgJEg0KBWRh",
            "dGExGAIgASgJEg0KBWRhdGEyGAMgASgJEg0KBWRhdGEzGAQgASgJEg0KBWRh",
            "dGE0GAUgASgJEg0KBWRhdGE1GAYgASgJEg0KBWRhdGE2GAcgASgJEg0KBWRh",
            "dGE3GAggASgFIoMBCglEYXRhc2V0RjgSDQoFZGF0YTAYASABKAISDQoFZGF0",
            "YTEYAiABKAISDQoFZGF0YTIYAyABKAISDQoFZGF0YTMYBCABKAISDQoFZGF0",
            "YTQYBSABKAISDQoFZGF0YTUYBiABKAISDQoFZGF0YTYYByABKAISDQoFZGF0",
            "YTcYCCABKAIihQEKC0RhdGFzZXRGN0IxEg0KBWRhdGEwGAEgASgCEg0KBWRh",
            "dGExGAIgASgCEg0KBWRhdGEyGAMgASgCEg0KBWRhdGEzGAQgASgCEg0KBWRh",
            "dGE0GAUgASgCEg0KBWRhdGE1GAYgASgCEg0KBWRhdGE2GAcgASgCEg0KBWRh",
            "dGE3GAggASgIIoUBCgtEYXRhc2V0RjdTMRINCgVkYXRhMBgBIAEoAhINCgVk",
            "YXRhMRgCIAEoAhINCgVkYXRhMhgDIAEoAhINCgVkYXRhMxgEIAEoAhINCgVk",
            "YXRhNBgFIAEoAhINCgVkYXRhNRgGIAEoAhINCgVkYXRhNhgHIAEoAhINCgVk",
            "YXRhNxgIIAEoCSKFAQoLRGF0YXNldEY2QjISDQoFZGF0YTAYASABKAISDQoF",
            "ZGF0YTEYAiABKAISDQoFZGF0YTIYAyABKAISDQoFZGF0YTMYBCABKAISDQoF",
            "ZGF0YTQYBSABKAISDQoFZGF0YTUYBiABKAISDQoFZGF0YTYYByABKAgSDQoF",
            "ZGF0YTcYCCABKAgihwEKDURhdGFzZXRGNkIxUzESDQoFZGF0YTAYASABKAIS",
            "DQoFZGF0YTEYAiABKAISDQoFZGF0YTIYAyABKAISDQoFZGF0YTMYBCABKAIS",
            "DQoFZGF0YTQYBSABKAISDQoFZGF0YTUYBiABKAISDQoFZGF0YTYYByABKAgS",
            "DQoFZGF0YTcYCCABKAkihQEKC0RhdGFzZXRGNlMyEg0KBWRhdGEwGAEgASgC",
            "Eg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMgASgCEg0KBWRhdGEzGAQgASgC",
            "Eg0KBWRhdGE0GAUgASgCEg0KBWRhdGE1GAYgASgCEg0KBWRhdGE2GAcgASgJ",
            "Eg0KBWRhdGE3GAggASgJIoUBCgtEYXRhc2V0RjVCMxINCgVkYXRhMBgBIAEo",
            "AhINCgVkYXRhMRgCIAEoAhINCgVkYXRhMhgDIAEoAhINCgVkYXRhMxgEIAEo",
            "AhINCgVkYXRhNBgFIAEoAhINCgVkYXRhNRgGIAEoCBINCgVkYXRhNhgHIAEo",
            "CBINCgVkYXRhNxgIIAEoCCKHAQoNRGF0YXNldEY1QjJTMRINCgVkYXRhMBgB",
            "IAEoAhINCgVkYXRhMRgCIAEoAhINCgVkYXRhMhgDIAEoAhINCgVkYXRhMxgE",
            "IAEoAhINCgVkYXRhNBgFIAEoAhINCgVkYXRhNRgGIAEoCBINCgVkYXRhNhgH",
            "IAEoCBINCgVkYXRhNxgIIAEoCSKHAQoNRGF0YXNldEY1UzJCMRINCgVkYXRh",
            "MBgBIAEoAhINCgVkYXRhMRgCIAEoAhINCgVkYXRhMhgDIAEoAhINCgVkYXRh",
            "MxgEIAEoAhINCgVkYXRhNBgFIAEoAhINCgVkYXRhNRgGIAEoCRINCgVkYXRh",
            "NhgHIAEoCRINCgVkYXRhNxgIIAEoCCKFAQoLRGF0YXNldEY1UzMSDQoFZGF0",
            "YTAYASABKAISDQoFZGF0YTEYAiABKAISDQoFZGF0YTIYAyABKAISDQoFZGF0",
            "YTMYBCABKAISDQoFZGF0YTQYBSABKAISDQoFZGF0YTUYBiABKAkSDQoFZGF0",
            "YTYYByABKAkSDQoFZGF0YTcYCCABKAkihQEKC0RhdGFzZXRGNEI0Eg0KBWRh",
            "dGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMgASgCEg0KBWRh",
            "dGEzGAQgASgCEg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYgASgIEg0KBWRh",
            "dGE2GAcgASgIEg0KBWRhdGE3GAggASgIIocBCg1EYXRhc2V0RjRCM1MxEg0K",
            "BWRhdGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMgASgCEg0K",
            "BWRhdGEzGAQgASgCEg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYgASgIEg0K",
            "BWRhdGE2GAcgASgIEg0KBWRhdGE3GAggASgJIocBCg1EYXRhc2V0RjRCMlMy",
            "Eg0KBWRhdGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMgASgC",
            "Eg0KBWRhdGEzGAQgASgCEg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYgASgI",
            "Eg0KBWRhdGE2GAcgASgJEg0KBWRhdGE3GAggASgJIocBCg1EYXRhc2V0RjRT",
            "M0IxEg0KBWRhdGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMg",
            "ASgCEg0KBWRhdGEzGAQgASgCEg0KBWRhdGE0GAUgASgJEg0KBWRhdGE1GAYg",
            "ASgJEg0KBWRhdGE2GAcgASgJEg0KBWRhdGE3GAggASgIIoUBCgtEYXRhc2V0",
            "RjRTNBINCgVkYXRhMBgBIAEoAhINCgVkYXRhMRgCIAEoAhINCgVkYXRhMhgD",
            "IAEoAhINCgVkYXRhMxgEIAEoAhINCgVkYXRhNBgFIAEoCRINCgVkYXRhNRgG",
            "IAEoCRINCgVkYXRhNhgHIAEoCRINCgVkYXRhNxgIIAEoCSKFAQoLRGF0YXNl",
            "dEI1RjMSDQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiABKAgSDQoFZGF0YTIY",
            "AyABKAgSDQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAgSDQoFZGF0YTUY",
            "BiABKAISDQoFZGF0YTYYByABKAISDQoFZGF0YTcYCCABKAIihwEKDURhdGFz",
            "ZXRCNEYzUzESDQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiABKAgSDQoFZGF0",
            "YTIYAyABKAgSDQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAISDQoFZGF0",
            "YTUYBiABKAISDQoFZGF0YTYYByABKAISDQoFZGF0YTcYCCABKAkihwEKDURh",
            "dGFzZXRGM0IzUzISDQoFZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAISDQoF",
            "ZGF0YTIYAyABKAISDQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAgSDQoF",
            "ZGF0YTUYBiABKAgSDQoFZGF0YTYYByABKAkSDQoFZGF0YTcYCCABKAkihwEK",
            "DURhdGFzZXRGM1MzQjISDQoFZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAIS",
            "DQoFZGF0YTIYAyABKAISDQoFZGF0YTMYBCABKAkSDQoFZGF0YTQYBSABKAkS",
            "DQoFZGF0YTUYBiABKAkSDQoFZGF0YTYYByABKAgSDQoFZGF0YTcYCCABKAgi",
            "hwEKDURhdGFzZXRTNEYzQjESDQoFZGF0YTAYASABKAkSDQoFZGF0YTEYAiAB",
            "KAkSDQoFZGF0YTIYAyABKAkSDQoFZGF0YTMYBCABKAkSDQoFZGF0YTQYBSAB",
            "KAISDQoFZGF0YTUYBiABKAISDQoFZGF0YTYYByABKAISDQoFZGF0YTcYCCAB",
            "KAgihQEKC0RhdGFzZXRTNUYzEg0KBWRhdGEwGAEgASgJEg0KBWRhdGExGAIg",
            "ASgJEg0KBWRhdGEyGAMgASgJEg0KBWRhdGEzGAQgASgJEg0KBWRhdGE0GAUg",
            "ASgJEg0KBWRhdGE1GAYgASgCEg0KBWRhdGE2GAcgASgCEg0KBWRhdGE3GAgg",
            "ASgCIoUBCgtEYXRhc2V0QjZGMhINCgVkYXRhMBgBIAEoCBINCgVkYXRhMRgC",
            "IAEoCBINCgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoCBINCgVkYXRhNBgF",
            "IAEoCBINCgVkYXRhNRgGIAEoCBINCgVkYXRhNhgHIAEoAhINCgVkYXRhNxgI",
            "IAEoAiKHAQoNRGF0YXNldEI1RjJTMRINCgVkYXRhMBgBIAEoCBINCgVkYXRh",
            "MRgCIAEoCBINCgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoCBINCgVkYXRh",
            "NBgFIAEoCBINCgVkYXRhNRgGIAEoAhINCgVkYXRhNhgHIAEoAhINCgVkYXRh",
            "NxgIIAEoCSKHAQoNRGF0YXNldEI0RjJTMhINCgVkYXRhMBgBIAEoCBINCgVk",
            "YXRhMRgCIAEoCBINCgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoCBINCgVk",
            "YXRhNBgFIAEoAhINCgVkYXRhNRgGIAEoAhINCgVkYXRhNhgHIAEoCRINCgVk",
            "YXRhNxgIIAEoCSKHAQoNRGF0YXNldEIzUzNGMhINCgVkYXRhMBgBIAEoCBIN",
            "CgVkYXRhMRgCIAEoCBINCgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoCRIN",
            "CgVkYXRhNBgFIAEoCRINCgVkYXRhNRgGIAEoCRINCgVkYXRhNhgHIAEoAhIN",
            "CgVkYXRhNxgIIAEoAiKHAQoNRGF0YXNldFM0RjJCMhINCgVkYXRhMBgBIAEo",
            "CRINCgVkYXRhMRgCIAEoCRINCgVkYXRhMhgDIAEoCRINCgVkYXRhMxgEIAEo",
            "CRINCgVkYXRhNBgFIAEoAhINCgVkYXRhNRgGIAEoAhINCgVkYXRhNhgHIAEo",
            "CBINCgVkYXRhNxgIIAEoCCKHAQoNRGF0YXNldFM1RjJCMRINCgVkYXRhMBgB",
            "IAEoCRINCgVkYXRhMRgCIAEoCRINCgVkYXRhMhgDIAEoCRINCgVkYXRhMxgE",
            "IAEoCRINCgVkYXRhNBgFIAEoCRINCgVkYXRhNRgGIAEoAhINCgVkYXRhNhgH",
            "IAEoAhINCgVkYXRhNxgIIAEoCCKFAQoLRGF0YXNldFM2RjISDQoFZGF0YTAY",
            "ASABKAkSDQoFZGF0YTEYAiABKAkSDQoFZGF0YTIYAyABKAkSDQoFZGF0YTMY",
            "BCABKAkSDQoFZGF0YTQYBSABKAkSDQoFZGF0YTUYBiABKAkSDQoFZGF0YTYY",
            "ByABKAISDQoFZGF0YTcYCCABKAIihQEKC0RhdGFzZXRCN0YxEg0KBWRhdGEw",
            "GAEgASgIEg0KBWRhdGExGAIgASgIEg0KBWRhdGEyGAMgASgIEg0KBWRhdGEz",
            "GAQgASgIEg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYgASgIEg0KBWRhdGE2",
            "GAcgASgIEg0KBWRhdGE3GAggASgCIocBCg1EYXRhc2V0QjZGMVMxEg0KBWRh",
            "dGEwGAEgASgIEg0KBWRhdGExGAIgASgIEg0KBWRhdGEyGAMgASgIEg0KBWRh",
            "dGEzGAQgASgIEg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYgASgIEg0KBWRh",
            "dGE2GAcgASgCEg0KBWRhdGE3GAggASgJIocBCg1EYXRhc2V0QjVTMkYxEg0K",
            "BWRhdGEwGAEgASgIEg0KBWRhdGExGAIgASgIEg0KBWRhdGEyGAMgASgIEg0K",
            "BWRhdGEzGAQgASgIEg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYgASgJEg0K",
            "BWRhdGE2GAcgASgJEg0KBWRhdGE3GAggASgCIocBCg1EYXRhc2V0QjRTM0Yx",
            "Eg0KBWRhdGEwGAEgASgIEg0KBWRhdGExGAIgASgIEg0KBWRhdGEyGAMgASgI",
            "Eg0KBWRhdGEzGAQgASgIEg0KBWRhdGE0GAUgASgJEg0KBWRhdGE1GAYgASgJ",
            "Eg0KBWRhdGE2GAcgASgJEg0KBWRhdGE3GAggASgCIocBCg1EYXRhc2V0UzRC",
            "M0YxEg0KBWRhdGEwGAEgASgJEg0KBWRhdGExGAIgASgJEg0KBWRhdGEyGAMg",
            "ASgJEg0KBWRhdGEzGAQgASgJEg0KBWRhdGE0GAUgASgIEg0KBWRhdGE1GAYg",
            "ASgIEg0KBWRhdGE2GAcgASgIEg0KBWRhdGE3GAggASgCIocBCg1EYXRhc2V0",
            "UzVCMkYxEg0KBWRhdGEwGAEgASgJEg0KBWRhdGExGAIgASgJEg0KBWRhdGEy",
            "GAMgASgJEg0KBWRhdGEzGAQgASgJEg0KBWRhdGE0GAUgASgJEg0KBWRhdGE1",
            "GAYgASgIEg0KBWRhdGE2GAcgASgIEg0KBWRhdGE3GAggASgCIocBCg1EYXRh",
            "c2V0UzZGMUIxEg0KBWRhdGEwGAEgASgJEg0KBWRhdGExGAIgASgJEg0KBWRh",
            "dGEyGAMgASgJEg0KBWRhdGEzGAQgASgJEg0KBWRhdGE0GAUgASgJEg0KBWRh",
            "dGE1GAYgASgJEg0KBWRhdGE2GAcgASgCEg0KBWRhdGE3GAggASgIIoUBCgtE",
            "YXRhc2V0UzdGMRINCgVkYXRhMBgBIAEoCRINCgVkYXRhMRgCIAEoCRINCgVk",
            "YXRhMhgDIAEoCRINCgVkYXRhMxgEIAEoCRINCgVkYXRhNBgFIAEoCRINCgVk",
            "YXRhNRgGIAEoCRINCgVkYXRhNhgHIAEoCRINCgVkYXRhNxgIIAEoAiKDAQoJ",
            "RGF0YXNldEI4Eg0KBWRhdGEwGAEgASgIEg0KBWRhdGExGAIgASgIEg0KBWRh",
            "dGEyGAMgASgIEg0KBWRhdGEzGAQgASgIEg0KBWRhdGE0GAUgASgIEg0KBWRh",
            "dGE1GAYgASgIEg0KBWRhdGE2GAcgASgIEg0KBWRhdGE3GAggASgIIoUBCgtE",
            "YXRhc2V0QjdTMRINCgVkYXRhMBgBIAEoCBINCgVkYXRhMRgCIAEoCBINCgVk",
            "YXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoCBINCgVkYXRhNBgFIAEoCBINCgVk",
            "YXRhNRgGIAEoCBINCgVkYXRhNhgHIAEoCBINCgVkYXRhNxgIIAEoCSKFAQoL",
            "RGF0YXNldEI2UzISDQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiABKAgSDQoF",
            "ZGF0YTIYAyABKAgSDQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAgSDQoF",
            "ZGF0YTUYBiABKAgSDQoFZGF0YTYYByABKAkSDQoFZGF0YTcYCCABKAkihQEK",
            "C0RhdGFzZXRCNVMzEg0KBWRhdGEwGAEgASgIEg0KBWRhdGExGAIgASgIEg0K",
            "BWRhdGEyGAMgASgIEg0KBWRhdGEzGAQgASgIEg0KBWRhdGE0GAUgASgIEg0K",
            "BWRhdGE1GAYgASgJEg0KBWRhdGE2GAcgASgJEg0KBWRhdGE3GAggASgJIoUB",
            "CgtEYXRhc2V0QjRTNBINCgVkYXRhMBgBIAEoCBINCgVkYXRhMRgCIAEoCBIN",
            "CgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoCBINCgVkYXRhNBgFIAEoCRIN",
            "CgVkYXRhNRgGIAEoCRINCgVkYXRhNhgHIAEoCRINCgVkYXRhNxgIIAEoCSKF",
            "AQoLRGF0YXNldFM1QjMSDQoFZGF0YTAYASABKAkSDQoFZGF0YTEYAiABKAkS",
            "DQoFZGF0YTIYAyABKAkSDQoFZGF0YTMYBCABKAkSDQoFZGF0YTQYBSABKAkS",
            "DQoFZGF0YTUYBiABKAgSDQoFZGF0YTYYByABKAgSDQoFZGF0YTcYCCABKAgi",
            "hQEKC0RhdGFzZXRTNkIyEg0KBWRhdGEwGAEgASgJEg0KBWRhdGExGAIgASgJ",
            "Eg0KBWRhdGEyGAMgASgJEg0KBWRhdGEzGAQgASgJEg0KBWRhdGE0GAUgASgJ",
            "Eg0KBWRhdGE1GAYgASgJEg0KBWRhdGE2GAcgASgIEg0KBWRhdGE3GAggASgI",
            "IoUBCgtEYXRhc2V0UzdCMRINCgVkYXRhMBgBIAEoCRINCgVkYXRhMRgCIAEo",
            "CRINCgVkYXRhMhgDIAEoCRINCgVkYXRhMxgEIAEoCRINCgVkYXRhNBgFIAEo",
            "CRINCgVkYXRhNRgGIAEoCRINCgVkYXRhNhgHIAEoCRINCgVkYXRhNxgIIAEo",
            "CCKDAQoJRGF0YXNldFM4Eg0KBWRhdGEwGAEgASgJEg0KBWRhdGExGAIgASgJ",
            "Eg0KBWRhdGEyGAMgASgJEg0KBWRhdGEzGAQgASgJEg0KBWRhdGE0GAUgASgJ",
            "Eg0KBWRhdGE1GAYgASgJEg0KBWRhdGE2GAcgASgJEg0KBWRhdGE3GAggASgJ",
            "YgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI8), global::AltarOfSword.DatasetI8.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI7F1), global::AltarOfSword.DatasetI7F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI7B1), global::AltarOfSword.DatasetI7B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI7S1), global::AltarOfSword.DatasetI7S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI6F2), global::AltarOfSword.DatasetI6F2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI6F1B1), global::AltarOfSword.DatasetI6F1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI6F1S1), global::AltarOfSword.DatasetI6F1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI6B2), global::AltarOfSword.DatasetI6B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI6B1S1), global::AltarOfSword.DatasetI6B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI6S2), global::AltarOfSword.DatasetI6S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI5F3), global::AltarOfSword.DatasetI5F3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI5F2B1), global::AltarOfSword.DatasetI5F2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI5F2S1), global::AltarOfSword.DatasetI5F2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI5B2F1), global::AltarOfSword.DatasetI5B2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI5F1B1S1), global::AltarOfSword.DatasetI5F1B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI5S2F1), global::AltarOfSword.DatasetI5S2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI5B3), global::AltarOfSword.DatasetI5B3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI5B2S1), global::AltarOfSword.DatasetI5B2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI5S2B1), global::AltarOfSword.DatasetI5S2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI5S3), global::AltarOfSword.DatasetI5S3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4F4), global::AltarOfSword.DatasetI4F4.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4F3B1), global::AltarOfSword.DatasetI4F3B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4F3S1), global::AltarOfSword.DatasetI4F3S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4F2B2), global::AltarOfSword.DatasetI4F2B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4F2B1S1), global::AltarOfSword.DatasetI4F2B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4F2S2), global::AltarOfSword.DatasetI4F2S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4B3F1), global::AltarOfSword.DatasetI4B3F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4B2F1S1), global::AltarOfSword.DatasetI4B2F1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4S2F1B1), global::AltarOfSword.DatasetI4S2F1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4S3F1), global::AltarOfSword.DatasetI4S3F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4B4), global::AltarOfSword.DatasetI4B4.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4B3S1), global::AltarOfSword.DatasetI4B3S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4B2S2), global::AltarOfSword.DatasetI4B2S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4S3B1), global::AltarOfSword.DatasetI4S3B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4S4), global::AltarOfSword.DatasetI4S4.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF5I3), global::AltarOfSword.DatasetF5I3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4I3B1), global::AltarOfSword.DatasetF4I3B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4I3S1), global::AltarOfSword.DatasetF4I3S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3F3B2), global::AltarOfSword.DatasetI3F3B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3F3B1S1), global::AltarOfSword.DatasetI3F3B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3F3S2), global::AltarOfSword.DatasetI3F3S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3B3F2), global::AltarOfSword.DatasetI3B3F2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3F2B2S1), global::AltarOfSword.DatasetI3F2B2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3F2S2B1), global::AltarOfSword.DatasetI3F2S2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3S3F2), global::AltarOfSword.DatasetI3S3F2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4I3F1), global::AltarOfSword.DatasetB4I3F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3B3F1S1), global::AltarOfSword.DatasetI3B3F1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3B2S2F1), global::AltarOfSword.DatasetI3B2S2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3S3F1B1), global::AltarOfSword.DatasetI3S3F1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4I3F1), global::AltarOfSword.DatasetS4I3F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB5I3), global::AltarOfSword.DatasetB5I3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4I3S1), global::AltarOfSword.DatasetB4I3S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3B3S2), global::AltarOfSword.DatasetI3B3S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3S3B2), global::AltarOfSword.DatasetI3S3B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4I3B1), global::AltarOfSword.DatasetS4I3B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS5I3), global::AltarOfSword.DatasetS5I3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF6I2), global::AltarOfSword.DatasetF6I2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF5I2B1), global::AltarOfSword.DatasetF5I2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF5I2S1), global::AltarOfSword.DatasetF5I2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4I2B2), global::AltarOfSword.DatasetF4I2B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4I2B1S1), global::AltarOfSword.DatasetF4I2B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4I2S2), global::AltarOfSword.DatasetF4I2S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3B3I2), global::AltarOfSword.DatasetF3B3I2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3I2B2S1), global::AltarOfSword.DatasetF3I2B2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3I2S2B1), global::AltarOfSword.DatasetF3I2S2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3S3I2), global::AltarOfSword.DatasetF3S3I2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4I2F2), global::AltarOfSword.DatasetB4I2F2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3I2F2S1), global::AltarOfSword.DatasetB3I2F2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2F2B2S2), global::AltarOfSword.DatasetI2F2B2S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3I2F2B1), global::AltarOfSword.DatasetS3I2F2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4I2F2), global::AltarOfSword.DatasetS4I2F2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB5I2F1), global::AltarOfSword.DatasetB5I2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4I2F1S1), global::AltarOfSword.DatasetB4I2F1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3I2S2F1), global::AltarOfSword.DatasetB3I2S2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3I2B2F1), global::AltarOfSword.DatasetS3I2B2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4I2F1B1), global::AltarOfSword.DatasetS4I2F1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS5I2F1), global::AltarOfSword.DatasetS5I2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB6I2), global::AltarOfSword.DatasetB6I2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB5I2S1), global::AltarOfSword.DatasetB5I2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4I2S2), global::AltarOfSword.DatasetB4I2S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3S3I2), global::AltarOfSword.DatasetB3S3I2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4I2B2), global::AltarOfSword.DatasetS4I2B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS5I2B1), global::AltarOfSword.DatasetS5I2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS6I2), global::AltarOfSword.DatasetS6I2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF7I1), global::AltarOfSword.DatasetF7I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF6I1B1), global::AltarOfSword.DatasetF6I1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF6I1S1), global::AltarOfSword.DatasetF6I1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF5B2I1), global::AltarOfSword.DatasetF5B2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF5I1B1S1), global::AltarOfSword.DatasetF5I1B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF5S2I1), global::AltarOfSword.DatasetF5S2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4B3I1), global::AltarOfSword.DatasetF4B3I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4B2I1S1), global::AltarOfSword.DatasetF4B2I1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4S2I1B1), global::AltarOfSword.DatasetF4S2I1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4S3I1), global::AltarOfSword.DatasetF4S3I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4F3I1), global::AltarOfSword.DatasetB4F3I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3B3I1S1), global::AltarOfSword.DatasetF3B3I1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3B2S2I1), global::AltarOfSword.DatasetF3B2S2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3S3I1B1), global::AltarOfSword.DatasetF3S3I1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4F3I1), global::AltarOfSword.DatasetS4F3I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB5F2I1), global::AltarOfSword.DatasetB5F2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4F2I1S1), global::AltarOfSword.DatasetB4F2I1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3F2S2I1), global::AltarOfSword.DatasetB3F2S2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3F2B2I1), global::AltarOfSword.DatasetS3F2B2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4F2I1B1), global::AltarOfSword.DatasetS4F2I1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS5F2I1), global::AltarOfSword.DatasetS5F2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB6I1F1), global::AltarOfSword.DatasetB6I1F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB5I1F1S1), global::AltarOfSword.DatasetB5I1F1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4S2I1F1), global::AltarOfSword.DatasetB4S2I1F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3S3I1F1), global::AltarOfSword.DatasetB3S3I1F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4B2I1F1), global::AltarOfSword.DatasetS4B2I1F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS5I1F1B1), global::AltarOfSword.DatasetS5I1F1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS6I1F1), global::AltarOfSword.DatasetS6I1F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB7I1), global::AltarOfSword.DatasetB7I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB6I1S1), global::AltarOfSword.DatasetB6I1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB5S2I1), global::AltarOfSword.DatasetB5S2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4S3I1), global::AltarOfSword.DatasetB4S3I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4B3I1), global::AltarOfSword.DatasetS4B3I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS5B2I1), global::AltarOfSword.DatasetS5B2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS6I1B1), global::AltarOfSword.DatasetS6I1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS7I1), global::AltarOfSword.DatasetS7I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF8), global::AltarOfSword.DatasetF8.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF7B1), global::AltarOfSword.DatasetF7B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF7S1), global::AltarOfSword.DatasetF7S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF6B2), global::AltarOfSword.DatasetF6B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF6B1S1), global::AltarOfSword.DatasetF6B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF6S2), global::AltarOfSword.DatasetF6S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF5B3), global::AltarOfSword.DatasetF5B3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF5B2S1), global::AltarOfSword.DatasetF5B2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF5S2B1), global::AltarOfSword.DatasetF5S2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF5S3), global::AltarOfSword.DatasetF5S3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4B4), global::AltarOfSword.DatasetF4B4.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4B3S1), global::AltarOfSword.DatasetF4B3S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4B2S2), global::AltarOfSword.DatasetF4B2S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4S3B1), global::AltarOfSword.DatasetF4S3B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4S4), global::AltarOfSword.DatasetF4S4.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB5F3), global::AltarOfSword.DatasetB5F3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4F3S1), global::AltarOfSword.DatasetB4F3S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3B3S2), global::AltarOfSword.DatasetF3B3S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3S3B2), global::AltarOfSword.DatasetF3S3B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4F3B1), global::AltarOfSword.DatasetS4F3B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS5F3), global::AltarOfSword.DatasetS5F3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB6F2), global::AltarOfSword.DatasetB6F2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB5F2S1), global::AltarOfSword.DatasetB5F2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4F2S2), global::AltarOfSword.DatasetB4F2S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3S3F2), global::AltarOfSword.DatasetB3S3F2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4F2B2), global::AltarOfSword.DatasetS4F2B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS5F2B1), global::AltarOfSword.DatasetS5F2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS6F2), global::AltarOfSword.DatasetS6F2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB7F1), global::AltarOfSword.DatasetB7F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB6F1S1), global::AltarOfSword.DatasetB6F1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB5S2F1), global::AltarOfSword.DatasetB5S2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4S3F1), global::AltarOfSword.DatasetB4S3F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4B3F1), global::AltarOfSword.DatasetS4B3F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS5B2F1), global::AltarOfSword.DatasetS5B2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS6F1B1), global::AltarOfSword.DatasetS6F1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS7F1), global::AltarOfSword.DatasetS7F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB8), global::AltarOfSword.DatasetB8.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB7S1), global::AltarOfSword.DatasetB7S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB6S2), global::AltarOfSword.DatasetB6S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB5S3), global::AltarOfSword.DatasetB5S3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4S4), global::AltarOfSword.DatasetB4S4.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS5B3), global::AltarOfSword.DatasetS5B3.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS6B2), global::AltarOfSword.DatasetS6B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS7B1), global::AltarOfSword.DatasetS7B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS8), global::AltarOfSword.DatasetS8.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4", "Data5", "Data6", "Data7" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DatasetI8 : pb::IMessage<DatasetI8> {
    private static readonly pb::MessageParser<DatasetI8> _parser = new pb::MessageParser<DatasetI8>(() => new DatasetI8());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI8> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI8() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI8(DatasetI8 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI8 Clone() {
      return new DatasetI8(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI8);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI8 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI8 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI7F1 : pb::IMessage<DatasetI7F1> {
    private static readonly pb::MessageParser<DatasetI7F1> _parser = new pb::MessageParser<DatasetI7F1>(() => new DatasetI7F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI7F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI7F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI7F1(DatasetI7F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI7F1 Clone() {
      return new DatasetI7F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI7F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI7F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI7F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI7B1 : pb::IMessage<DatasetI7B1> {
    private static readonly pb::MessageParser<DatasetI7B1> _parser = new pb::MessageParser<DatasetI7B1>(() => new DatasetI7B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI7B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI7B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI7B1(DatasetI7B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI7B1 Clone() {
      return new DatasetI7B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI7B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI7B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI7B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI7S1 : pb::IMessage<DatasetI7S1> {
    private static readonly pb::MessageParser<DatasetI7S1> _parser = new pb::MessageParser<DatasetI7S1>(() => new DatasetI7S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI7S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI7S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI7S1(DatasetI7S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI7S1 Clone() {
      return new DatasetI7S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI7S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI7S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI7S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI6F2 : pb::IMessage<DatasetI6F2> {
    private static readonly pb::MessageParser<DatasetI6F2> _parser = new pb::MessageParser<DatasetI6F2>(() => new DatasetI6F2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI6F2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6F2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6F2(DatasetI6F2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6F2 Clone() {
      return new DatasetI6F2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI6F2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI6F2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI6F2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI6F1B1 : pb::IMessage<DatasetI6F1B1> {
    private static readonly pb::MessageParser<DatasetI6F1B1> _parser = new pb::MessageParser<DatasetI6F1B1>(() => new DatasetI6F1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI6F1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6F1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6F1B1(DatasetI6F1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6F1B1 Clone() {
      return new DatasetI6F1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI6F1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI6F1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI6F1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI6F1S1 : pb::IMessage<DatasetI6F1S1> {
    private static readonly pb::MessageParser<DatasetI6F1S1> _parser = new pb::MessageParser<DatasetI6F1S1>(() => new DatasetI6F1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI6F1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6F1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6F1S1(DatasetI6F1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6F1S1 Clone() {
      return new DatasetI6F1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI6F1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI6F1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI6F1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI6B2 : pb::IMessage<DatasetI6B2> {
    private static readonly pb::MessageParser<DatasetI6B2> _parser = new pb::MessageParser<DatasetI6B2>(() => new DatasetI6B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI6B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6B2(DatasetI6B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6B2 Clone() {
      return new DatasetI6B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI6B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI6B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI6B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI6B1S1 : pb::IMessage<DatasetI6B1S1> {
    private static readonly pb::MessageParser<DatasetI6B1S1> _parser = new pb::MessageParser<DatasetI6B1S1>(() => new DatasetI6B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI6B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6B1S1(DatasetI6B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6B1S1 Clone() {
      return new DatasetI6B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI6B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI6B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI6B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI6S2 : pb::IMessage<DatasetI6S2> {
    private static readonly pb::MessageParser<DatasetI6S2> _parser = new pb::MessageParser<DatasetI6S2>(() => new DatasetI6S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI6S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6S2(DatasetI6S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI6S2 Clone() {
      return new DatasetI6S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI6S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI6S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI6S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI5F3 : pb::IMessage<DatasetI5F3> {
    private static readonly pb::MessageParser<DatasetI5F3> _parser = new pb::MessageParser<DatasetI5F3>(() => new DatasetI5F3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI5F3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5F3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5F3(DatasetI5F3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5F3 Clone() {
      return new DatasetI5F3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI5F3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI5F3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI5F3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI5F2B1 : pb::IMessage<DatasetI5F2B1> {
    private static readonly pb::MessageParser<DatasetI5F2B1> _parser = new pb::MessageParser<DatasetI5F2B1>(() => new DatasetI5F2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI5F2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5F2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5F2B1(DatasetI5F2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5F2B1 Clone() {
      return new DatasetI5F2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI5F2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI5F2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI5F2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI5F2S1 : pb::IMessage<DatasetI5F2S1> {
    private static readonly pb::MessageParser<DatasetI5F2S1> _parser = new pb::MessageParser<DatasetI5F2S1>(() => new DatasetI5F2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI5F2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5F2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5F2S1(DatasetI5F2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5F2S1 Clone() {
      return new DatasetI5F2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI5F2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI5F2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI5F2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI5B2F1 : pb::IMessage<DatasetI5B2F1> {
    private static readonly pb::MessageParser<DatasetI5B2F1> _parser = new pb::MessageParser<DatasetI5B2F1>(() => new DatasetI5B2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI5B2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5B2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5B2F1(DatasetI5B2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5B2F1 Clone() {
      return new DatasetI5B2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI5B2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI5B2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI5B2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI5F1B1S1 : pb::IMessage<DatasetI5F1B1S1> {
    private static readonly pb::MessageParser<DatasetI5F1B1S1> _parser = new pb::MessageParser<DatasetI5F1B1S1>(() => new DatasetI5F1B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI5F1B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5F1B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5F1B1S1(DatasetI5F1B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5F1B1S1 Clone() {
      return new DatasetI5F1B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI5F1B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI5F1B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI5F1B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI5S2F1 : pb::IMessage<DatasetI5S2F1> {
    private static readonly pb::MessageParser<DatasetI5S2F1> _parser = new pb::MessageParser<DatasetI5S2F1>(() => new DatasetI5S2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI5S2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5S2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5S2F1(DatasetI5S2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5S2F1 Clone() {
      return new DatasetI5S2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI5S2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI5S2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI5S2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI5B3 : pb::IMessage<DatasetI5B3> {
    private static readonly pb::MessageParser<DatasetI5B3> _parser = new pb::MessageParser<DatasetI5B3>(() => new DatasetI5B3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI5B3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5B3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5B3(DatasetI5B3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5B3 Clone() {
      return new DatasetI5B3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI5B3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI5B3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI5B3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI5B2S1 : pb::IMessage<DatasetI5B2S1> {
    private static readonly pb::MessageParser<DatasetI5B2S1> _parser = new pb::MessageParser<DatasetI5B2S1>(() => new DatasetI5B2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI5B2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5B2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5B2S1(DatasetI5B2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5B2S1 Clone() {
      return new DatasetI5B2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI5B2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI5B2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI5B2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI5S2B1 : pb::IMessage<DatasetI5S2B1> {
    private static readonly pb::MessageParser<DatasetI5S2B1> _parser = new pb::MessageParser<DatasetI5S2B1>(() => new DatasetI5S2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI5S2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5S2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5S2B1(DatasetI5S2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5S2B1 Clone() {
      return new DatasetI5S2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI5S2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI5S2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI5S2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI5S3 : pb::IMessage<DatasetI5S3> {
    private static readonly pb::MessageParser<DatasetI5S3> _parser = new pb::MessageParser<DatasetI5S3>(() => new DatasetI5S3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI5S3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5S3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5S3(DatasetI5S3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5S3 Clone() {
      return new DatasetI5S3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI5S3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI5S3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI5S3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4F4 : pb::IMessage<DatasetI4F4> {
    private static readonly pb::MessageParser<DatasetI4F4> _parser = new pb::MessageParser<DatasetI4F4>(() => new DatasetI4F4());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4F4> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F4() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F4(DatasetI4F4 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F4 Clone() {
      return new DatasetI4F4(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4F4);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4F4 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4F4 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4F3B1 : pb::IMessage<DatasetI4F3B1> {
    private static readonly pb::MessageParser<DatasetI4F3B1> _parser = new pb::MessageParser<DatasetI4F3B1>(() => new DatasetI4F3B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4F3B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F3B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F3B1(DatasetI4F3B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F3B1 Clone() {
      return new DatasetI4F3B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4F3B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4F3B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4F3B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4F3S1 : pb::IMessage<DatasetI4F3S1> {
    private static readonly pb::MessageParser<DatasetI4F3S1> _parser = new pb::MessageParser<DatasetI4F3S1>(() => new DatasetI4F3S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4F3S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F3S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F3S1(DatasetI4F3S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F3S1 Clone() {
      return new DatasetI4F3S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4F3S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4F3S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4F3S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4F2B2 : pb::IMessage<DatasetI4F2B2> {
    private static readonly pb::MessageParser<DatasetI4F2B2> _parser = new pb::MessageParser<DatasetI4F2B2>(() => new DatasetI4F2B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4F2B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F2B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F2B2(DatasetI4F2B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F2B2 Clone() {
      return new DatasetI4F2B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4F2B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4F2B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4F2B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4F2B1S1 : pb::IMessage<DatasetI4F2B1S1> {
    private static readonly pb::MessageParser<DatasetI4F2B1S1> _parser = new pb::MessageParser<DatasetI4F2B1S1>(() => new DatasetI4F2B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4F2B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F2B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F2B1S1(DatasetI4F2B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F2B1S1 Clone() {
      return new DatasetI4F2B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4F2B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4F2B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4F2B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4F2S2 : pb::IMessage<DatasetI4F2S2> {
    private static readonly pb::MessageParser<DatasetI4F2S2> _parser = new pb::MessageParser<DatasetI4F2S2>(() => new DatasetI4F2S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4F2S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F2S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F2S2(DatasetI4F2S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F2S2 Clone() {
      return new DatasetI4F2S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4F2S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4F2S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4F2S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4B3F1 : pb::IMessage<DatasetI4B3F1> {
    private static readonly pb::MessageParser<DatasetI4B3F1> _parser = new pb::MessageParser<DatasetI4B3F1>(() => new DatasetI4B3F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4B3F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B3F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B3F1(DatasetI4B3F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B3F1 Clone() {
      return new DatasetI4B3F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4B3F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4B3F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4B3F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4B2F1S1 : pb::IMessage<DatasetI4B2F1S1> {
    private static readonly pb::MessageParser<DatasetI4B2F1S1> _parser = new pb::MessageParser<DatasetI4B2F1S1>(() => new DatasetI4B2F1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4B2F1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B2F1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B2F1S1(DatasetI4B2F1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B2F1S1 Clone() {
      return new DatasetI4B2F1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4B2F1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4B2F1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4B2F1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4S2F1B1 : pb::IMessage<DatasetI4S2F1B1> {
    private static readonly pb::MessageParser<DatasetI4S2F1B1> _parser = new pb::MessageParser<DatasetI4S2F1B1>(() => new DatasetI4S2F1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4S2F1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S2F1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S2F1B1(DatasetI4S2F1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S2F1B1 Clone() {
      return new DatasetI4S2F1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4S2F1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4S2F1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4S2F1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4S3F1 : pb::IMessage<DatasetI4S3F1> {
    private static readonly pb::MessageParser<DatasetI4S3F1> _parser = new pb::MessageParser<DatasetI4S3F1>(() => new DatasetI4S3F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4S3F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S3F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S3F1(DatasetI4S3F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S3F1 Clone() {
      return new DatasetI4S3F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4S3F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4S3F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4S3F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4B4 : pb::IMessage<DatasetI4B4> {
    private static readonly pb::MessageParser<DatasetI4B4> _parser = new pb::MessageParser<DatasetI4B4>(() => new DatasetI4B4());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4B4> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B4() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B4(DatasetI4B4 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B4 Clone() {
      return new DatasetI4B4(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4B4);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4B4 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4B4 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4B3S1 : pb::IMessage<DatasetI4B3S1> {
    private static readonly pb::MessageParser<DatasetI4B3S1> _parser = new pb::MessageParser<DatasetI4B3S1>(() => new DatasetI4B3S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4B3S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B3S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B3S1(DatasetI4B3S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B3S1 Clone() {
      return new DatasetI4B3S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4B3S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4B3S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4B3S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4B2S2 : pb::IMessage<DatasetI4B2S2> {
    private static readonly pb::MessageParser<DatasetI4B2S2> _parser = new pb::MessageParser<DatasetI4B2S2>(() => new DatasetI4B2S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4B2S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B2S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B2S2(DatasetI4B2S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B2S2 Clone() {
      return new DatasetI4B2S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4B2S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4B2S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4B2S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4S3B1 : pb::IMessage<DatasetI4S3B1> {
    private static readonly pb::MessageParser<DatasetI4S3B1> _parser = new pb::MessageParser<DatasetI4S3B1>(() => new DatasetI4S3B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4S3B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S3B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S3B1(DatasetI4S3B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S3B1 Clone() {
      return new DatasetI4S3B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4S3B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4S3B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4S3B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4S4 : pb::IMessage<DatasetI4S4> {
    private static readonly pb::MessageParser<DatasetI4S4> _parser = new pb::MessageParser<DatasetI4S4>(() => new DatasetI4S4());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4S4> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S4() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S4(DatasetI4S4 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S4 Clone() {
      return new DatasetI4S4(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4S4);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4S4 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4S4 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF5I3 : pb::IMessage<DatasetF5I3> {
    private static readonly pb::MessageParser<DatasetF5I3> _parser = new pb::MessageParser<DatasetF5I3>(() => new DatasetF5I3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF5I3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5I3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5I3(DatasetF5I3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5I3 Clone() {
      return new DatasetF5I3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF5I3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF5I3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF5I3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4I3B1 : pb::IMessage<DatasetF4I3B1> {
    private static readonly pb::MessageParser<DatasetF4I3B1> _parser = new pb::MessageParser<DatasetF4I3B1>(() => new DatasetF4I3B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4I3B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I3B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I3B1(DatasetF4I3B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I3B1 Clone() {
      return new DatasetF4I3B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4I3B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4I3B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4I3B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4I3S1 : pb::IMessage<DatasetF4I3S1> {
    private static readonly pb::MessageParser<DatasetF4I3S1> _parser = new pb::MessageParser<DatasetF4I3S1>(() => new DatasetF4I3S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4I3S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I3S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I3S1(DatasetF4I3S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I3S1 Clone() {
      return new DatasetF4I3S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4I3S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4I3S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4I3S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3F3B2 : pb::IMessage<DatasetI3F3B2> {
    private static readonly pb::MessageParser<DatasetI3F3B2> _parser = new pb::MessageParser<DatasetI3F3B2>(() => new DatasetI3F3B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3F3B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F3B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F3B2(DatasetI3F3B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F3B2 Clone() {
      return new DatasetI3F3B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3F3B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3F3B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3F3B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3F3B1S1 : pb::IMessage<DatasetI3F3B1S1> {
    private static readonly pb::MessageParser<DatasetI3F3B1S1> _parser = new pb::MessageParser<DatasetI3F3B1S1>(() => new DatasetI3F3B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3F3B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F3B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F3B1S1(DatasetI3F3B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F3B1S1 Clone() {
      return new DatasetI3F3B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3F3B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3F3B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3F3B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3F3S2 : pb::IMessage<DatasetI3F3S2> {
    private static readonly pb::MessageParser<DatasetI3F3S2> _parser = new pb::MessageParser<DatasetI3F3S2>(() => new DatasetI3F3S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3F3S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F3S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F3S2(DatasetI3F3S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F3S2 Clone() {
      return new DatasetI3F3S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3F3S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3F3S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3F3S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3B3F2 : pb::IMessage<DatasetI3B3F2> {
    private static readonly pb::MessageParser<DatasetI3B3F2> _parser = new pb::MessageParser<DatasetI3B3F2>(() => new DatasetI3B3F2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3B3F2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B3F2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B3F2(DatasetI3B3F2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B3F2 Clone() {
      return new DatasetI3B3F2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3B3F2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3B3F2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3B3F2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3F2B2S1 : pb::IMessage<DatasetI3F2B2S1> {
    private static readonly pb::MessageParser<DatasetI3F2B2S1> _parser = new pb::MessageParser<DatasetI3F2B2S1>(() => new DatasetI3F2B2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3F2B2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F2B2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F2B2S1(DatasetI3F2B2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F2B2S1 Clone() {
      return new DatasetI3F2B2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3F2B2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3F2B2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3F2B2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3F2S2B1 : pb::IMessage<DatasetI3F2S2B1> {
    private static readonly pb::MessageParser<DatasetI3F2S2B1> _parser = new pb::MessageParser<DatasetI3F2S2B1>(() => new DatasetI3F2S2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3F2S2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F2S2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F2S2B1(DatasetI3F2S2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F2S2B1 Clone() {
      return new DatasetI3F2S2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3F2S2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3F2S2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3F2S2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3S3F2 : pb::IMessage<DatasetI3S3F2> {
    private static readonly pb::MessageParser<DatasetI3S3F2> _parser = new pb::MessageParser<DatasetI3S3F2>(() => new DatasetI3S3F2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3S3F2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S3F2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S3F2(DatasetI3S3F2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S3F2 Clone() {
      return new DatasetI3S3F2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3S3F2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3S3F2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3S3F2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4I3F1 : pb::IMessage<DatasetB4I3F1> {
    private static readonly pb::MessageParser<DatasetB4I3F1> _parser = new pb::MessageParser<DatasetB4I3F1>(() => new DatasetB4I3F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4I3F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I3F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I3F1(DatasetB4I3F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I3F1 Clone() {
      return new DatasetB4I3F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4I3F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4I3F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4I3F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3B3F1S1 : pb::IMessage<DatasetI3B3F1S1> {
    private static readonly pb::MessageParser<DatasetI3B3F1S1> _parser = new pb::MessageParser<DatasetI3B3F1S1>(() => new DatasetI3B3F1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3B3F1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B3F1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B3F1S1(DatasetI3B3F1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B3F1S1 Clone() {
      return new DatasetI3B3F1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3B3F1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3B3F1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3B3F1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3B2S2F1 : pb::IMessage<DatasetI3B2S2F1> {
    private static readonly pb::MessageParser<DatasetI3B2S2F1> _parser = new pb::MessageParser<DatasetI3B2S2F1>(() => new DatasetI3B2S2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3B2S2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B2S2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B2S2F1(DatasetI3B2S2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B2S2F1 Clone() {
      return new DatasetI3B2S2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3B2S2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3B2S2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3B2S2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3S3F1B1 : pb::IMessage<DatasetI3S3F1B1> {
    private static readonly pb::MessageParser<DatasetI3S3F1B1> _parser = new pb::MessageParser<DatasetI3S3F1B1>(() => new DatasetI3S3F1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3S3F1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S3F1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S3F1B1(DatasetI3S3F1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S3F1B1 Clone() {
      return new DatasetI3S3F1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3S3F1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3S3F1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3S3F1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4I3F1 : pb::IMessage<DatasetS4I3F1> {
    private static readonly pb::MessageParser<DatasetS4I3F1> _parser = new pb::MessageParser<DatasetS4I3F1>(() => new DatasetS4I3F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4I3F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I3F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I3F1(DatasetS4I3F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I3F1 Clone() {
      return new DatasetS4I3F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4I3F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4I3F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4I3F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB5I3 : pb::IMessage<DatasetB5I3> {
    private static readonly pb::MessageParser<DatasetB5I3> _parser = new pb::MessageParser<DatasetB5I3>(() => new DatasetB5I3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB5I3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5I3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5I3(DatasetB5I3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5I3 Clone() {
      return new DatasetB5I3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB5I3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB5I3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB5I3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4I3S1 : pb::IMessage<DatasetB4I3S1> {
    private static readonly pb::MessageParser<DatasetB4I3S1> _parser = new pb::MessageParser<DatasetB4I3S1>(() => new DatasetB4I3S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4I3S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I3S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I3S1(DatasetB4I3S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I3S1 Clone() {
      return new DatasetB4I3S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4I3S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4I3S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4I3S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3B3S2 : pb::IMessage<DatasetI3B3S2> {
    private static readonly pb::MessageParser<DatasetI3B3S2> _parser = new pb::MessageParser<DatasetI3B3S2>(() => new DatasetI3B3S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3B3S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B3S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B3S2(DatasetI3B3S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B3S2 Clone() {
      return new DatasetI3B3S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3B3S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3B3S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3B3S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3S3B2 : pb::IMessage<DatasetI3S3B2> {
    private static readonly pb::MessageParser<DatasetI3S3B2> _parser = new pb::MessageParser<DatasetI3S3B2>(() => new DatasetI3S3B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3S3B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S3B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S3B2(DatasetI3S3B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S3B2 Clone() {
      return new DatasetI3S3B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3S3B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3S3B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3S3B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4I3B1 : pb::IMessage<DatasetS4I3B1> {
    private static readonly pb::MessageParser<DatasetS4I3B1> _parser = new pb::MessageParser<DatasetS4I3B1>(() => new DatasetS4I3B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4I3B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I3B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I3B1(DatasetS4I3B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I3B1 Clone() {
      return new DatasetS4I3B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4I3B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4I3B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4I3B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS5I3 : pb::IMessage<DatasetS5I3> {
    private static readonly pb::MessageParser<DatasetS5I3> _parser = new pb::MessageParser<DatasetS5I3>(() => new DatasetS5I3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS5I3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5I3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5I3(DatasetS5I3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5I3 Clone() {
      return new DatasetS5I3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS5I3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS5I3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS5I3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF6I2 : pb::IMessage<DatasetF6I2> {
    private static readonly pb::MessageParser<DatasetF6I2> _parser = new pb::MessageParser<DatasetF6I2>(() => new DatasetF6I2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF6I2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6I2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6I2(DatasetF6I2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6I2 Clone() {
      return new DatasetF6I2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF6I2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF6I2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF6I2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF5I2B1 : pb::IMessage<DatasetF5I2B1> {
    private static readonly pb::MessageParser<DatasetF5I2B1> _parser = new pb::MessageParser<DatasetF5I2B1>(() => new DatasetF5I2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF5I2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5I2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5I2B1(DatasetF5I2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5I2B1 Clone() {
      return new DatasetF5I2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF5I2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF5I2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF5I2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF5I2S1 : pb::IMessage<DatasetF5I2S1> {
    private static readonly pb::MessageParser<DatasetF5I2S1> _parser = new pb::MessageParser<DatasetF5I2S1>(() => new DatasetF5I2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF5I2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5I2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5I2S1(DatasetF5I2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5I2S1 Clone() {
      return new DatasetF5I2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF5I2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF5I2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF5I2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4I2B2 : pb::IMessage<DatasetF4I2B2> {
    private static readonly pb::MessageParser<DatasetF4I2B2> _parser = new pb::MessageParser<DatasetF4I2B2>(() => new DatasetF4I2B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4I2B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I2B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I2B2(DatasetF4I2B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I2B2 Clone() {
      return new DatasetF4I2B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4I2B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4I2B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4I2B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4I2B1S1 : pb::IMessage<DatasetF4I2B1S1> {
    private static readonly pb::MessageParser<DatasetF4I2B1S1> _parser = new pb::MessageParser<DatasetF4I2B1S1>(() => new DatasetF4I2B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4I2B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I2B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I2B1S1(DatasetF4I2B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I2B1S1 Clone() {
      return new DatasetF4I2B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4I2B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4I2B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4I2B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4I2S2 : pb::IMessage<DatasetF4I2S2> {
    private static readonly pb::MessageParser<DatasetF4I2S2> _parser = new pb::MessageParser<DatasetF4I2S2>(() => new DatasetF4I2S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4I2S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I2S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I2S2(DatasetF4I2S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I2S2 Clone() {
      return new DatasetF4I2S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4I2S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4I2S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4I2S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3B3I2 : pb::IMessage<DatasetF3B3I2> {
    private static readonly pb::MessageParser<DatasetF3B3I2> _parser = new pb::MessageParser<DatasetF3B3I2>(() => new DatasetF3B3I2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3B3I2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B3I2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B3I2(DatasetF3B3I2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B3I2 Clone() {
      return new DatasetF3B3I2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3B3I2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3B3I2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3B3I2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3I2B2S1 : pb::IMessage<DatasetF3I2B2S1> {
    private static readonly pb::MessageParser<DatasetF3I2B2S1> _parser = new pb::MessageParser<DatasetF3I2B2S1>(() => new DatasetF3I2B2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3I2B2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I2B2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I2B2S1(DatasetF3I2B2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I2B2S1 Clone() {
      return new DatasetF3I2B2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3I2B2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3I2B2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3I2B2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3I2S2B1 : pb::IMessage<DatasetF3I2S2B1> {
    private static readonly pb::MessageParser<DatasetF3I2S2B1> _parser = new pb::MessageParser<DatasetF3I2S2B1>(() => new DatasetF3I2S2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3I2S2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I2S2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I2S2B1(DatasetF3I2S2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I2S2B1 Clone() {
      return new DatasetF3I2S2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3I2S2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3I2S2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3I2S2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3S3I2 : pb::IMessage<DatasetF3S3I2> {
    private static readonly pb::MessageParser<DatasetF3S3I2> _parser = new pb::MessageParser<DatasetF3S3I2>(() => new DatasetF3S3I2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3S3I2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S3I2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S3I2(DatasetF3S3I2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S3I2 Clone() {
      return new DatasetF3S3I2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3S3I2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3S3I2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3S3I2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4I2F2 : pb::IMessage<DatasetB4I2F2> {
    private static readonly pb::MessageParser<DatasetB4I2F2> _parser = new pb::MessageParser<DatasetB4I2F2>(() => new DatasetB4I2F2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4I2F2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I2F2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I2F2(DatasetB4I2F2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I2F2 Clone() {
      return new DatasetB4I2F2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4I2F2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4I2F2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4I2F2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3I2F2S1 : pb::IMessage<DatasetB3I2F2S1> {
    private static readonly pb::MessageParser<DatasetB3I2F2S1> _parser = new pb::MessageParser<DatasetB3I2F2S1>(() => new DatasetB3I2F2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3I2F2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I2F2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I2F2S1(DatasetB3I2F2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I2F2S1 Clone() {
      return new DatasetB3I2F2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3I2F2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3I2F2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3I2F2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2F2B2S2 : pb::IMessage<DatasetI2F2B2S2> {
    private static readonly pb::MessageParser<DatasetI2F2B2S2> _parser = new pb::MessageParser<DatasetI2F2B2S2>(() => new DatasetI2F2B2S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2F2B2S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2B2S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2B2S2(DatasetI2F2B2S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2B2S2 Clone() {
      return new DatasetI2F2B2S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2F2B2S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2F2B2S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2F2B2S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3I2F2B1 : pb::IMessage<DatasetS3I2F2B1> {
    private static readonly pb::MessageParser<DatasetS3I2F2B1> _parser = new pb::MessageParser<DatasetS3I2F2B1>(() => new DatasetS3I2F2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3I2F2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I2F2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I2F2B1(DatasetS3I2F2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I2F2B1 Clone() {
      return new DatasetS3I2F2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3I2F2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3I2F2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3I2F2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4I2F2 : pb::IMessage<DatasetS4I2F2> {
    private static readonly pb::MessageParser<DatasetS4I2F2> _parser = new pb::MessageParser<DatasetS4I2F2>(() => new DatasetS4I2F2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4I2F2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I2F2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I2F2(DatasetS4I2F2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I2F2 Clone() {
      return new DatasetS4I2F2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4I2F2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4I2F2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4I2F2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB5I2F1 : pb::IMessage<DatasetB5I2F1> {
    private static readonly pb::MessageParser<DatasetB5I2F1> _parser = new pb::MessageParser<DatasetB5I2F1>(() => new DatasetB5I2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB5I2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5I2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5I2F1(DatasetB5I2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5I2F1 Clone() {
      return new DatasetB5I2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB5I2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB5I2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB5I2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4I2F1S1 : pb::IMessage<DatasetB4I2F1S1> {
    private static readonly pb::MessageParser<DatasetB4I2F1S1> _parser = new pb::MessageParser<DatasetB4I2F1S1>(() => new DatasetB4I2F1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4I2F1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I2F1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I2F1S1(DatasetB4I2F1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I2F1S1 Clone() {
      return new DatasetB4I2F1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4I2F1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4I2F1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4I2F1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3I2S2F1 : pb::IMessage<DatasetB3I2S2F1> {
    private static readonly pb::MessageParser<DatasetB3I2S2F1> _parser = new pb::MessageParser<DatasetB3I2S2F1>(() => new DatasetB3I2S2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3I2S2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I2S2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I2S2F1(DatasetB3I2S2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I2S2F1 Clone() {
      return new DatasetB3I2S2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3I2S2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3I2S2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3I2S2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3I2B2F1 : pb::IMessage<DatasetS3I2B2F1> {
    private static readonly pb::MessageParser<DatasetS3I2B2F1> _parser = new pb::MessageParser<DatasetS3I2B2F1>(() => new DatasetS3I2B2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3I2B2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I2B2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I2B2F1(DatasetS3I2B2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I2B2F1 Clone() {
      return new DatasetS3I2B2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3I2B2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3I2B2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3I2B2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4I2F1B1 : pb::IMessage<DatasetS4I2F1B1> {
    private static readonly pb::MessageParser<DatasetS4I2F1B1> _parser = new pb::MessageParser<DatasetS4I2F1B1>(() => new DatasetS4I2F1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4I2F1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I2F1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I2F1B1(DatasetS4I2F1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I2F1B1 Clone() {
      return new DatasetS4I2F1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4I2F1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4I2F1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4I2F1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS5I2F1 : pb::IMessage<DatasetS5I2F1> {
    private static readonly pb::MessageParser<DatasetS5I2F1> _parser = new pb::MessageParser<DatasetS5I2F1>(() => new DatasetS5I2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS5I2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5I2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5I2F1(DatasetS5I2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5I2F1 Clone() {
      return new DatasetS5I2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS5I2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS5I2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS5I2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB6I2 : pb::IMessage<DatasetB6I2> {
    private static readonly pb::MessageParser<DatasetB6I2> _parser = new pb::MessageParser<DatasetB6I2>(() => new DatasetB6I2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB6I2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6I2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6I2(DatasetB6I2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6I2 Clone() {
      return new DatasetB6I2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB6I2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB6I2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB6I2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB5I2S1 : pb::IMessage<DatasetB5I2S1> {
    private static readonly pb::MessageParser<DatasetB5I2S1> _parser = new pb::MessageParser<DatasetB5I2S1>(() => new DatasetB5I2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB5I2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5I2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5I2S1(DatasetB5I2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5I2S1 Clone() {
      return new DatasetB5I2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB5I2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB5I2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB5I2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4I2S2 : pb::IMessage<DatasetB4I2S2> {
    private static readonly pb::MessageParser<DatasetB4I2S2> _parser = new pb::MessageParser<DatasetB4I2S2>(() => new DatasetB4I2S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4I2S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I2S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I2S2(DatasetB4I2S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I2S2 Clone() {
      return new DatasetB4I2S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4I2S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4I2S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4I2S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3S3I2 : pb::IMessage<DatasetB3S3I2> {
    private static readonly pb::MessageParser<DatasetB3S3I2> _parser = new pb::MessageParser<DatasetB3S3I2>(() => new DatasetB3S3I2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3S3I2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S3I2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S3I2(DatasetB3S3I2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S3I2 Clone() {
      return new DatasetB3S3I2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3S3I2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3S3I2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3S3I2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4I2B2 : pb::IMessage<DatasetS4I2B2> {
    private static readonly pb::MessageParser<DatasetS4I2B2> _parser = new pb::MessageParser<DatasetS4I2B2>(() => new DatasetS4I2B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4I2B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I2B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I2B2(DatasetS4I2B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I2B2 Clone() {
      return new DatasetS4I2B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4I2B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4I2B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4I2B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS5I2B1 : pb::IMessage<DatasetS5I2B1> {
    private static readonly pb::MessageParser<DatasetS5I2B1> _parser = new pb::MessageParser<DatasetS5I2B1>(() => new DatasetS5I2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS5I2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5I2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5I2B1(DatasetS5I2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5I2B1 Clone() {
      return new DatasetS5I2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS5I2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS5I2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS5I2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS6I2 : pb::IMessage<DatasetS6I2> {
    private static readonly pb::MessageParser<DatasetS6I2> _parser = new pb::MessageParser<DatasetS6I2>(() => new DatasetS6I2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS6I2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6I2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6I2(DatasetS6I2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6I2 Clone() {
      return new DatasetS6I2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS6I2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS6I2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS6I2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF7I1 : pb::IMessage<DatasetF7I1> {
    private static readonly pb::MessageParser<DatasetF7I1> _parser = new pb::MessageParser<DatasetF7I1>(() => new DatasetF7I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF7I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF7I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF7I1(DatasetF7I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF7I1 Clone() {
      return new DatasetF7I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF7I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF7I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF7I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF6I1B1 : pb::IMessage<DatasetF6I1B1> {
    private static readonly pb::MessageParser<DatasetF6I1B1> _parser = new pb::MessageParser<DatasetF6I1B1>(() => new DatasetF6I1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF6I1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6I1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6I1B1(DatasetF6I1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6I1B1 Clone() {
      return new DatasetF6I1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF6I1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF6I1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF6I1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF6I1S1 : pb::IMessage<DatasetF6I1S1> {
    private static readonly pb::MessageParser<DatasetF6I1S1> _parser = new pb::MessageParser<DatasetF6I1S1>(() => new DatasetF6I1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF6I1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6I1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6I1S1(DatasetF6I1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6I1S1 Clone() {
      return new DatasetF6I1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF6I1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF6I1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF6I1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF5B2I1 : pb::IMessage<DatasetF5B2I1> {
    private static readonly pb::MessageParser<DatasetF5B2I1> _parser = new pb::MessageParser<DatasetF5B2I1>(() => new DatasetF5B2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF5B2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5B2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5B2I1(DatasetF5B2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5B2I1 Clone() {
      return new DatasetF5B2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF5B2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF5B2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF5B2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF5I1B1S1 : pb::IMessage<DatasetF5I1B1S1> {
    private static readonly pb::MessageParser<DatasetF5I1B1S1> _parser = new pb::MessageParser<DatasetF5I1B1S1>(() => new DatasetF5I1B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF5I1B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5I1B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5I1B1S1(DatasetF5I1B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5I1B1S1 Clone() {
      return new DatasetF5I1B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF5I1B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF5I1B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF5I1B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF5S2I1 : pb::IMessage<DatasetF5S2I1> {
    private static readonly pb::MessageParser<DatasetF5S2I1> _parser = new pb::MessageParser<DatasetF5S2I1>(() => new DatasetF5S2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF5S2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5S2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5S2I1(DatasetF5S2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5S2I1 Clone() {
      return new DatasetF5S2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF5S2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF5S2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF5S2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4B3I1 : pb::IMessage<DatasetF4B3I1> {
    private static readonly pb::MessageParser<DatasetF4B3I1> _parser = new pb::MessageParser<DatasetF4B3I1>(() => new DatasetF4B3I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4B3I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B3I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B3I1(DatasetF4B3I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B3I1 Clone() {
      return new DatasetF4B3I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4B3I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4B3I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4B3I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4B2I1S1 : pb::IMessage<DatasetF4B2I1S1> {
    private static readonly pb::MessageParser<DatasetF4B2I1S1> _parser = new pb::MessageParser<DatasetF4B2I1S1>(() => new DatasetF4B2I1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4B2I1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B2I1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B2I1S1(DatasetF4B2I1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B2I1S1 Clone() {
      return new DatasetF4B2I1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4B2I1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4B2I1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4B2I1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4S2I1B1 : pb::IMessage<DatasetF4S2I1B1> {
    private static readonly pb::MessageParser<DatasetF4S2I1B1> _parser = new pb::MessageParser<DatasetF4S2I1B1>(() => new DatasetF4S2I1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4S2I1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S2I1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S2I1B1(DatasetF4S2I1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S2I1B1 Clone() {
      return new DatasetF4S2I1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4S2I1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4S2I1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4S2I1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4S3I1 : pb::IMessage<DatasetF4S3I1> {
    private static readonly pb::MessageParser<DatasetF4S3I1> _parser = new pb::MessageParser<DatasetF4S3I1>(() => new DatasetF4S3I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4S3I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S3I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S3I1(DatasetF4S3I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S3I1 Clone() {
      return new DatasetF4S3I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4S3I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4S3I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4S3I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4F3I1 : pb::IMessage<DatasetB4F3I1> {
    private static readonly pb::MessageParser<DatasetB4F3I1> _parser = new pb::MessageParser<DatasetB4F3I1>(() => new DatasetB4F3I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4F3I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F3I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F3I1(DatasetB4F3I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F3I1 Clone() {
      return new DatasetB4F3I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4F3I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4F3I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4F3I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3B3I1S1 : pb::IMessage<DatasetF3B3I1S1> {
    private static readonly pb::MessageParser<DatasetF3B3I1S1> _parser = new pb::MessageParser<DatasetF3B3I1S1>(() => new DatasetF3B3I1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3B3I1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B3I1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B3I1S1(DatasetF3B3I1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B3I1S1 Clone() {
      return new DatasetF3B3I1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3B3I1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3B3I1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3B3I1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3B2S2I1 : pb::IMessage<DatasetF3B2S2I1> {
    private static readonly pb::MessageParser<DatasetF3B2S2I1> _parser = new pb::MessageParser<DatasetF3B2S2I1>(() => new DatasetF3B2S2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3B2S2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B2S2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B2S2I1(DatasetF3B2S2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B2S2I1 Clone() {
      return new DatasetF3B2S2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3B2S2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3B2S2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3B2S2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3S3I1B1 : pb::IMessage<DatasetF3S3I1B1> {
    private static readonly pb::MessageParser<DatasetF3S3I1B1> _parser = new pb::MessageParser<DatasetF3S3I1B1>(() => new DatasetF3S3I1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3S3I1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S3I1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S3I1B1(DatasetF3S3I1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S3I1B1 Clone() {
      return new DatasetF3S3I1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3S3I1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3S3I1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3S3I1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4F3I1 : pb::IMessage<DatasetS4F3I1> {
    private static readonly pb::MessageParser<DatasetS4F3I1> _parser = new pb::MessageParser<DatasetS4F3I1>(() => new DatasetS4F3I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4F3I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F3I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F3I1(DatasetS4F3I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F3I1 Clone() {
      return new DatasetS4F3I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4F3I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4F3I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4F3I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB5F2I1 : pb::IMessage<DatasetB5F2I1> {
    private static readonly pb::MessageParser<DatasetB5F2I1> _parser = new pb::MessageParser<DatasetB5F2I1>(() => new DatasetB5F2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB5F2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5F2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5F2I1(DatasetB5F2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5F2I1 Clone() {
      return new DatasetB5F2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB5F2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB5F2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB5F2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4F2I1S1 : pb::IMessage<DatasetB4F2I1S1> {
    private static readonly pb::MessageParser<DatasetB4F2I1S1> _parser = new pb::MessageParser<DatasetB4F2I1S1>(() => new DatasetB4F2I1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4F2I1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F2I1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F2I1S1(DatasetB4F2I1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F2I1S1 Clone() {
      return new DatasetB4F2I1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4F2I1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4F2I1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4F2I1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3F2S2I1 : pb::IMessage<DatasetB3F2S2I1> {
    private static readonly pb::MessageParser<DatasetB3F2S2I1> _parser = new pb::MessageParser<DatasetB3F2S2I1>(() => new DatasetB3F2S2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3F2S2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F2S2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F2S2I1(DatasetB3F2S2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F2S2I1 Clone() {
      return new DatasetB3F2S2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3F2S2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3F2S2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3F2S2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3F2B2I1 : pb::IMessage<DatasetS3F2B2I1> {
    private static readonly pb::MessageParser<DatasetS3F2B2I1> _parser = new pb::MessageParser<DatasetS3F2B2I1>(() => new DatasetS3F2B2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3F2B2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F2B2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F2B2I1(DatasetS3F2B2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F2B2I1 Clone() {
      return new DatasetS3F2B2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3F2B2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3F2B2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3F2B2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4F2I1B1 : pb::IMessage<DatasetS4F2I1B1> {
    private static readonly pb::MessageParser<DatasetS4F2I1B1> _parser = new pb::MessageParser<DatasetS4F2I1B1>(() => new DatasetS4F2I1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4F2I1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F2I1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F2I1B1(DatasetS4F2I1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F2I1B1 Clone() {
      return new DatasetS4F2I1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4F2I1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4F2I1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4F2I1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS5F2I1 : pb::IMessage<DatasetS5F2I1> {
    private static readonly pb::MessageParser<DatasetS5F2I1> _parser = new pb::MessageParser<DatasetS5F2I1>(() => new DatasetS5F2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS5F2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5F2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5F2I1(DatasetS5F2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5F2I1 Clone() {
      return new DatasetS5F2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS5F2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS5F2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS5F2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB6I1F1 : pb::IMessage<DatasetB6I1F1> {
    private static readonly pb::MessageParser<DatasetB6I1F1> _parser = new pb::MessageParser<DatasetB6I1F1>(() => new DatasetB6I1F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB6I1F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6I1F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6I1F1(DatasetB6I1F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6I1F1 Clone() {
      return new DatasetB6I1F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB6I1F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB6I1F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB6I1F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB5I1F1S1 : pb::IMessage<DatasetB5I1F1S1> {
    private static readonly pb::MessageParser<DatasetB5I1F1S1> _parser = new pb::MessageParser<DatasetB5I1F1S1>(() => new DatasetB5I1F1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB5I1F1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5I1F1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5I1F1S1(DatasetB5I1F1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5I1F1S1 Clone() {
      return new DatasetB5I1F1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB5I1F1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB5I1F1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB5I1F1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4S2I1F1 : pb::IMessage<DatasetB4S2I1F1> {
    private static readonly pb::MessageParser<DatasetB4S2I1F1> _parser = new pb::MessageParser<DatasetB4S2I1F1>(() => new DatasetB4S2I1F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4S2I1F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S2I1F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S2I1F1(DatasetB4S2I1F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S2I1F1 Clone() {
      return new DatasetB4S2I1F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4S2I1F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4S2I1F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4S2I1F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3S3I1F1 : pb::IMessage<DatasetB3S3I1F1> {
    private static readonly pb::MessageParser<DatasetB3S3I1F1> _parser = new pb::MessageParser<DatasetB3S3I1F1>(() => new DatasetB3S3I1F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3S3I1F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S3I1F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S3I1F1(DatasetB3S3I1F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S3I1F1 Clone() {
      return new DatasetB3S3I1F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3S3I1F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3S3I1F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3S3I1F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4B2I1F1 : pb::IMessage<DatasetS4B2I1F1> {
    private static readonly pb::MessageParser<DatasetS4B2I1F1> _parser = new pb::MessageParser<DatasetS4B2I1F1>(() => new DatasetS4B2I1F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4B2I1F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4B2I1F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4B2I1F1(DatasetS4B2I1F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4B2I1F1 Clone() {
      return new DatasetS4B2I1F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4B2I1F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4B2I1F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4B2I1F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS5I1F1B1 : pb::IMessage<DatasetS5I1F1B1> {
    private static readonly pb::MessageParser<DatasetS5I1F1B1> _parser = new pb::MessageParser<DatasetS5I1F1B1>(() => new DatasetS5I1F1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS5I1F1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5I1F1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5I1F1B1(DatasetS5I1F1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5I1F1B1 Clone() {
      return new DatasetS5I1F1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private int data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS5I1F1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS5I1F1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data5);
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS5I1F1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 48: {
            Data5 = input.ReadInt32();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS6I1F1 : pb::IMessage<DatasetS6I1F1> {
    private static readonly pb::MessageParser<DatasetS6I1F1> _parser = new pb::MessageParser<DatasetS6I1F1>(() => new DatasetS6I1F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS6I1F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[111]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6I1F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6I1F1(DatasetS6I1F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6I1F1 Clone() {
      return new DatasetS6I1F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS6I1F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS6I1F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS6I1F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB7I1 : pb::IMessage<DatasetB7I1> {
    private static readonly pb::MessageParser<DatasetB7I1> _parser = new pb::MessageParser<DatasetB7I1>(() => new DatasetB7I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB7I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[112]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB7I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB7I1(DatasetB7I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB7I1 Clone() {
      return new DatasetB7I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB7I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB7I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB7I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB6I1S1 : pb::IMessage<DatasetB6I1S1> {
    private static readonly pb::MessageParser<DatasetB6I1S1> _parser = new pb::MessageParser<DatasetB6I1S1>(() => new DatasetB6I1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB6I1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[113]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6I1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6I1S1(DatasetB6I1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6I1S1 Clone() {
      return new DatasetB6I1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB6I1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB6I1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB6I1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB5S2I1 : pb::IMessage<DatasetB5S2I1> {
    private static readonly pb::MessageParser<DatasetB5S2I1> _parser = new pb::MessageParser<DatasetB5S2I1>(() => new DatasetB5S2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB5S2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[114]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5S2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5S2I1(DatasetB5S2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5S2I1 Clone() {
      return new DatasetB5S2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB5S2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB5S2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB5S2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4S3I1 : pb::IMessage<DatasetB4S3I1> {
    private static readonly pb::MessageParser<DatasetB4S3I1> _parser = new pb::MessageParser<DatasetB4S3I1>(() => new DatasetB4S3I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4S3I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[115]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S3I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S3I1(DatasetB4S3I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S3I1 Clone() {
      return new DatasetB4S3I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4S3I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4S3I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4S3I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4B3I1 : pb::IMessage<DatasetS4B3I1> {
    private static readonly pb::MessageParser<DatasetS4B3I1> _parser = new pb::MessageParser<DatasetS4B3I1>(() => new DatasetS4B3I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4B3I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[116]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4B3I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4B3I1(DatasetS4B3I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4B3I1 Clone() {
      return new DatasetS4B3I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4B3I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4B3I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4B3I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS5B2I1 : pb::IMessage<DatasetS5B2I1> {
    private static readonly pb::MessageParser<DatasetS5B2I1> _parser = new pb::MessageParser<DatasetS5B2I1>(() => new DatasetS5B2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS5B2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[117]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5B2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5B2I1(DatasetS5B2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5B2I1 Clone() {
      return new DatasetS5B2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS5B2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS5B2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS5B2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS6I1B1 : pb::IMessage<DatasetS6I1B1> {
    private static readonly pb::MessageParser<DatasetS6I1B1> _parser = new pb::MessageParser<DatasetS6I1B1>(() => new DatasetS6I1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS6I1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[118]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6I1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6I1B1(DatasetS6I1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6I1B1 Clone() {
      return new DatasetS6I1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private int data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS6I1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS6I1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data6);
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS6I1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 56: {
            Data6 = input.ReadInt32();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS7I1 : pb::IMessage<DatasetS7I1> {
    private static readonly pb::MessageParser<DatasetS7I1> _parser = new pb::MessageParser<DatasetS7I1>(() => new DatasetS7I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS7I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[119]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS7I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS7I1(DatasetS7I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS7I1 Clone() {
      return new DatasetS7I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private int data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS7I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS7I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS7I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 64: {
            Data7 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF8 : pb::IMessage<DatasetF8> {
    private static readonly pb::MessageParser<DatasetF8> _parser = new pb::MessageParser<DatasetF8>(() => new DatasetF8());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF8> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[120]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF8() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF8(DatasetF8 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF8 Clone() {
      return new DatasetF8(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF8);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF8 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF8 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF7B1 : pb::IMessage<DatasetF7B1> {
    private static readonly pb::MessageParser<DatasetF7B1> _parser = new pb::MessageParser<DatasetF7B1>(() => new DatasetF7B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF7B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[121]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF7B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF7B1(DatasetF7B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF7B1 Clone() {
      return new DatasetF7B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF7B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF7B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF7B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF7S1 : pb::IMessage<DatasetF7S1> {
    private static readonly pb::MessageParser<DatasetF7S1> _parser = new pb::MessageParser<DatasetF7S1>(() => new DatasetF7S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF7S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[122]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF7S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF7S1(DatasetF7S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF7S1 Clone() {
      return new DatasetF7S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF7S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF7S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF7S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF6B2 : pb::IMessage<DatasetF6B2> {
    private static readonly pb::MessageParser<DatasetF6B2> _parser = new pb::MessageParser<DatasetF6B2>(() => new DatasetF6B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF6B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[123]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6B2(DatasetF6B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6B2 Clone() {
      return new DatasetF6B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF6B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF6B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF6B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF6B1S1 : pb::IMessage<DatasetF6B1S1> {
    private static readonly pb::MessageParser<DatasetF6B1S1> _parser = new pb::MessageParser<DatasetF6B1S1>(() => new DatasetF6B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF6B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[124]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6B1S1(DatasetF6B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6B1S1 Clone() {
      return new DatasetF6B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF6B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF6B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF6B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF6S2 : pb::IMessage<DatasetF6S2> {
    private static readonly pb::MessageParser<DatasetF6S2> _parser = new pb::MessageParser<DatasetF6S2>(() => new DatasetF6S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF6S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[125]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6S2(DatasetF6S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF6S2 Clone() {
      return new DatasetF6S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF6S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF6S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF6S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF5B3 : pb::IMessage<DatasetF5B3> {
    private static readonly pb::MessageParser<DatasetF5B3> _parser = new pb::MessageParser<DatasetF5B3>(() => new DatasetF5B3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF5B3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[126]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5B3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5B3(DatasetF5B3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5B3 Clone() {
      return new DatasetF5B3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF5B3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF5B3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF5B3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF5B2S1 : pb::IMessage<DatasetF5B2S1> {
    private static readonly pb::MessageParser<DatasetF5B2S1> _parser = new pb::MessageParser<DatasetF5B2S1>(() => new DatasetF5B2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF5B2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[127]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5B2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5B2S1(DatasetF5B2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5B2S1 Clone() {
      return new DatasetF5B2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF5B2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF5B2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF5B2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF5S2B1 : pb::IMessage<DatasetF5S2B1> {
    private static readonly pb::MessageParser<DatasetF5S2B1> _parser = new pb::MessageParser<DatasetF5S2B1>(() => new DatasetF5S2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF5S2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[128]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5S2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5S2B1(DatasetF5S2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5S2B1 Clone() {
      return new DatasetF5S2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF5S2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF5S2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF5S2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF5S3 : pb::IMessage<DatasetF5S3> {
    private static readonly pb::MessageParser<DatasetF5S3> _parser = new pb::MessageParser<DatasetF5S3>(() => new DatasetF5S3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF5S3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[129]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5S3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5S3(DatasetF5S3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5S3 Clone() {
      return new DatasetF5S3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF5S3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF5S3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF5S3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4B4 : pb::IMessage<DatasetF4B4> {
    private static readonly pb::MessageParser<DatasetF4B4> _parser = new pb::MessageParser<DatasetF4B4>(() => new DatasetF4B4());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4B4> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[130]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B4() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B4(DatasetF4B4 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B4 Clone() {
      return new DatasetF4B4(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4B4);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4B4 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4B4 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4B3S1 : pb::IMessage<DatasetF4B3S1> {
    private static readonly pb::MessageParser<DatasetF4B3S1> _parser = new pb::MessageParser<DatasetF4B3S1>(() => new DatasetF4B3S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4B3S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[131]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B3S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B3S1(DatasetF4B3S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B3S1 Clone() {
      return new DatasetF4B3S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4B3S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4B3S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4B3S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4B2S2 : pb::IMessage<DatasetF4B2S2> {
    private static readonly pb::MessageParser<DatasetF4B2S2> _parser = new pb::MessageParser<DatasetF4B2S2>(() => new DatasetF4B2S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4B2S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[132]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B2S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B2S2(DatasetF4B2S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B2S2 Clone() {
      return new DatasetF4B2S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4B2S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4B2S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4B2S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4S3B1 : pb::IMessage<DatasetF4S3B1> {
    private static readonly pb::MessageParser<DatasetF4S3B1> _parser = new pb::MessageParser<DatasetF4S3B1>(() => new DatasetF4S3B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4S3B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[133]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S3B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S3B1(DatasetF4S3B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S3B1 Clone() {
      return new DatasetF4S3B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4S3B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4S3B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4S3B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4S4 : pb::IMessage<DatasetF4S4> {
    private static readonly pb::MessageParser<DatasetF4S4> _parser = new pb::MessageParser<DatasetF4S4>(() => new DatasetF4S4());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4S4> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[134]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S4() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S4(DatasetF4S4 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S4 Clone() {
      return new DatasetF4S4(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4S4);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4S4 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4S4 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB5F3 : pb::IMessage<DatasetB5F3> {
    private static readonly pb::MessageParser<DatasetB5F3> _parser = new pb::MessageParser<DatasetB5F3>(() => new DatasetB5F3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB5F3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[135]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5F3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5F3(DatasetB5F3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5F3 Clone() {
      return new DatasetB5F3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB5F3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB5F3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB5F3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4F3S1 : pb::IMessage<DatasetB4F3S1> {
    private static readonly pb::MessageParser<DatasetB4F3S1> _parser = new pb::MessageParser<DatasetB4F3S1>(() => new DatasetB4F3S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4F3S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[136]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F3S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F3S1(DatasetB4F3S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F3S1 Clone() {
      return new DatasetB4F3S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4F3S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4F3S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4F3S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3B3S2 : pb::IMessage<DatasetF3B3S2> {
    private static readonly pb::MessageParser<DatasetF3B3S2> _parser = new pb::MessageParser<DatasetF3B3S2>(() => new DatasetF3B3S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3B3S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[137]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B3S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B3S2(DatasetF3B3S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B3S2 Clone() {
      return new DatasetF3B3S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3B3S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3B3S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3B3S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3S3B2 : pb::IMessage<DatasetF3S3B2> {
    private static readonly pb::MessageParser<DatasetF3S3B2> _parser = new pb::MessageParser<DatasetF3S3B2>(() => new DatasetF3S3B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3S3B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[138]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S3B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S3B2(DatasetF3S3B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S3B2 Clone() {
      return new DatasetF3S3B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3S3B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3S3B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3S3B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4F3B1 : pb::IMessage<DatasetS4F3B1> {
    private static readonly pb::MessageParser<DatasetS4F3B1> _parser = new pb::MessageParser<DatasetS4F3B1>(() => new DatasetS4F3B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4F3B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[139]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F3B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F3B1(DatasetS4F3B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F3B1 Clone() {
      return new DatasetS4F3B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4F3B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4F3B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4F3B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS5F3 : pb::IMessage<DatasetS5F3> {
    private static readonly pb::MessageParser<DatasetS5F3> _parser = new pb::MessageParser<DatasetS5F3>(() => new DatasetS5F3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS5F3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[140]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5F3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5F3(DatasetS5F3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5F3 Clone() {
      return new DatasetS5F3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS5F3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS5F3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS5F3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB6F2 : pb::IMessage<DatasetB6F2> {
    private static readonly pb::MessageParser<DatasetB6F2> _parser = new pb::MessageParser<DatasetB6F2>(() => new DatasetB6F2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB6F2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[141]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6F2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6F2(DatasetB6F2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6F2 Clone() {
      return new DatasetB6F2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB6F2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB6F2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB6F2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB5F2S1 : pb::IMessage<DatasetB5F2S1> {
    private static readonly pb::MessageParser<DatasetB5F2S1> _parser = new pb::MessageParser<DatasetB5F2S1>(() => new DatasetB5F2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB5F2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[142]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5F2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5F2S1(DatasetB5F2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5F2S1 Clone() {
      return new DatasetB5F2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB5F2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB5F2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB5F2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4F2S2 : pb::IMessage<DatasetB4F2S2> {
    private static readonly pb::MessageParser<DatasetB4F2S2> _parser = new pb::MessageParser<DatasetB4F2S2>(() => new DatasetB4F2S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4F2S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[143]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F2S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F2S2(DatasetB4F2S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F2S2 Clone() {
      return new DatasetB4F2S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4F2S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4F2S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4F2S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3S3F2 : pb::IMessage<DatasetB3S3F2> {
    private static readonly pb::MessageParser<DatasetB3S3F2> _parser = new pb::MessageParser<DatasetB3S3F2>(() => new DatasetB3S3F2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3S3F2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[144]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S3F2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S3F2(DatasetB3S3F2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S3F2 Clone() {
      return new DatasetB3S3F2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3S3F2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3S3F2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3S3F2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4F2B2 : pb::IMessage<DatasetS4F2B2> {
    private static readonly pb::MessageParser<DatasetS4F2B2> _parser = new pb::MessageParser<DatasetS4F2B2>(() => new DatasetS4F2B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4F2B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[145]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F2B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F2B2(DatasetS4F2B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F2B2 Clone() {
      return new DatasetS4F2B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4F2B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4F2B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4F2B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS5F2B1 : pb::IMessage<DatasetS5F2B1> {
    private static readonly pb::MessageParser<DatasetS5F2B1> _parser = new pb::MessageParser<DatasetS5F2B1>(() => new DatasetS5F2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS5F2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[146]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5F2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5F2B1(DatasetS5F2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5F2B1 Clone() {
      return new DatasetS5F2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private float data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS5F2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS5F2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data5, other.Data5)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data5);
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != 0F) {
        size += 1 + 4;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS5F2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != 0F) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 53: {
            Data5 = input.ReadFloat();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS6F2 : pb::IMessage<DatasetS6F2> {
    private static readonly pb::MessageParser<DatasetS6F2> _parser = new pb::MessageParser<DatasetS6F2>(() => new DatasetS6F2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS6F2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[147]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6F2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6F2(DatasetS6F2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6F2 Clone() {
      return new DatasetS6F2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS6F2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS6F2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS6F2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB7F1 : pb::IMessage<DatasetB7F1> {
    private static readonly pb::MessageParser<DatasetB7F1> _parser = new pb::MessageParser<DatasetB7F1>(() => new DatasetB7F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB7F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[148]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB7F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB7F1(DatasetB7F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB7F1 Clone() {
      return new DatasetB7F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB7F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB7F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB7F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB6F1S1 : pb::IMessage<DatasetB6F1S1> {
    private static readonly pb::MessageParser<DatasetB6F1S1> _parser = new pb::MessageParser<DatasetB6F1S1>(() => new DatasetB6F1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB6F1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[149]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6F1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6F1S1(DatasetB6F1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6F1S1 Clone() {
      return new DatasetB6F1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB6F1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB6F1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB6F1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB5S2F1 : pb::IMessage<DatasetB5S2F1> {
    private static readonly pb::MessageParser<DatasetB5S2F1> _parser = new pb::MessageParser<DatasetB5S2F1>(() => new DatasetB5S2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB5S2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[150]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5S2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5S2F1(DatasetB5S2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5S2F1 Clone() {
      return new DatasetB5S2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB5S2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB5S2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB5S2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4S3F1 : pb::IMessage<DatasetB4S3F1> {
    private static readonly pb::MessageParser<DatasetB4S3F1> _parser = new pb::MessageParser<DatasetB4S3F1>(() => new DatasetB4S3F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4S3F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[151]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S3F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S3F1(DatasetB4S3F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S3F1 Clone() {
      return new DatasetB4S3F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4S3F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4S3F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4S3F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4B3F1 : pb::IMessage<DatasetS4B3F1> {
    private static readonly pb::MessageParser<DatasetS4B3F1> _parser = new pb::MessageParser<DatasetS4B3F1>(() => new DatasetS4B3F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4B3F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[152]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4B3F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4B3F1(DatasetS4B3F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4B3F1 Clone() {
      return new DatasetS4B3F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4B3F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4B3F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4B3F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS5B2F1 : pb::IMessage<DatasetS5B2F1> {
    private static readonly pb::MessageParser<DatasetS5B2F1> _parser = new pb::MessageParser<DatasetS5B2F1>(() => new DatasetS5B2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS5B2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[153]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5B2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5B2F1(DatasetS5B2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5B2F1 Clone() {
      return new DatasetS5B2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS5B2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS5B2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS5B2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS6F1B1 : pb::IMessage<DatasetS6F1B1> {
    private static readonly pb::MessageParser<DatasetS6F1B1> _parser = new pb::MessageParser<DatasetS6F1B1>(() => new DatasetS6F1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS6F1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[154]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6F1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6F1B1(DatasetS6F1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6F1B1 Clone() {
      return new DatasetS6F1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private float data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS6F1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS6F1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data6, other.Data6)) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data6);
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != 0F) {
        size += 1 + 4;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS6F1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != 0F) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 61: {
            Data6 = input.ReadFloat();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS7F1 : pb::IMessage<DatasetS7F1> {
    private static readonly pb::MessageParser<DatasetS7F1> _parser = new pb::MessageParser<DatasetS7F1>(() => new DatasetS7F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS7F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[155]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS7F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS7F1(DatasetS7F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS7F1 Clone() {
      return new DatasetS7F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private float data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS7F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS7F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data7, other.Data7)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data7);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS7F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != 0F) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 69: {
            Data7 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB8 : pb::IMessage<DatasetB8> {
    private static readonly pb::MessageParser<DatasetB8> _parser = new pb::MessageParser<DatasetB8>(() => new DatasetB8());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB8> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[156]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB8() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB8(DatasetB8 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB8 Clone() {
      return new DatasetB8(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB8);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB8 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB8 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB7S1 : pb::IMessage<DatasetB7S1> {
    private static readonly pb::MessageParser<DatasetB7S1> _parser = new pb::MessageParser<DatasetB7S1>(() => new DatasetB7S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB7S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[157]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB7S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB7S1(DatasetB7S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB7S1 Clone() {
      return new DatasetB7S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB7S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB7S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB7S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB6S2 : pb::IMessage<DatasetB6S2> {
    private static readonly pb::MessageParser<DatasetB6S2> _parser = new pb::MessageParser<DatasetB6S2>(() => new DatasetB6S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB6S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[158]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6S2(DatasetB6S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB6S2 Clone() {
      return new DatasetB6S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB6S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB6S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB6S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB5S3 : pb::IMessage<DatasetB5S3> {
    private static readonly pb::MessageParser<DatasetB5S3> _parser = new pb::MessageParser<DatasetB5S3>(() => new DatasetB5S3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB5S3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[159]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5S3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5S3(DatasetB5S3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5S3 Clone() {
      return new DatasetB5S3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB5S3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB5S3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB5S3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4S4 : pb::IMessage<DatasetB4S4> {
    private static readonly pb::MessageParser<DatasetB4S4> _parser = new pb::MessageParser<DatasetB4S4>(() => new DatasetB4S4());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4S4> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[160]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S4() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S4(DatasetB4S4 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S4 Clone() {
      return new DatasetB4S4(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4S4);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4S4 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4S4 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS5B3 : pb::IMessage<DatasetS5B3> {
    private static readonly pb::MessageParser<DatasetS5B3> _parser = new pb::MessageParser<DatasetS5B3>(() => new DatasetS5B3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS5B3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[161]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5B3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5B3(DatasetS5B3 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5B3 Clone() {
      return new DatasetS5B3(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private bool data5_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data5 {
      get { return data5_; }
      set {
        data5_ = value;
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS5B3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS5B3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5 != false) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5 != false) {
        output.WriteRawTag(48);
        output.WriteBool(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5 != false) {
        size += 1 + 1;
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS5B3 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5 != false) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 48: {
            Data5 = input.ReadBool();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS6B2 : pb::IMessage<DatasetS6B2> {
    private static readonly pb::MessageParser<DatasetS6B2> _parser = new pb::MessageParser<DatasetS6B2>(() => new DatasetS6B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS6B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[162]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6B2(DatasetS6B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS6B2 Clone() {
      return new DatasetS6B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private bool data6_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data6 {
      get { return data6_; }
      set {
        data6_ = value;
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS6B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS6B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6 != false) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6 != false) {
        output.WriteRawTag(56);
        output.WriteBool(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6 != false) {
        size += 1 + 1;
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS6B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6 != false) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 56: {
            Data6 = input.ReadBool();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS7B1 : pb::IMessage<DatasetS7B1> {
    private static readonly pb::MessageParser<DatasetS7B1> _parser = new pb::MessageParser<DatasetS7B1>(() => new DatasetS7B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS7B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[163]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS7B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS7B1(DatasetS7B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS7B1 Clone() {
      return new DatasetS7B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private bool data7_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data7 {
      get { return data7_; }
      set {
        data7_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS7B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS7B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7 != false) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7 != false) {
        output.WriteRawTag(64);
        output.WriteBool(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS7B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7 != false) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 64: {
            Data7 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS8 : pb::IMessage<DatasetS8> {
    private static readonly pb::MessageParser<DatasetS8> _parser = new pb::MessageParser<DatasetS8>(() => new DatasetS8());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS8> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset8Reflection.Descriptor.MessageTypes[164]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS8() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS8(DatasetS8 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      data5_ = other.data5_;
      data6_ = other.data6_;
      data7_ = other.data7_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS8 Clone() {
      return new DatasetS8(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data5" field.</summary>
    public const int Data5FieldNumber = 6;
    private string data5_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data5 {
      get { return data5_; }
      set {
        data5_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data6" field.</summary>
    public const int Data6FieldNumber = 7;
    private string data6_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data6 {
      get { return data6_; }
      set {
        data6_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data7" field.</summary>
    public const int Data7FieldNumber = 8;
    private string data7_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data7 {
      get { return data7_; }
      set {
        data7_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS8);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS8 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      if (Data5 != other.Data5) return false;
      if (Data6 != other.Data6) return false;
      if (Data7 != other.Data7) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (Data5.Length != 0) hash ^= Data5.GetHashCode();
      if (Data6.Length != 0) hash ^= Data6.GetHashCode();
      if (Data7.Length != 0) hash ^= Data7.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (Data5.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Data5);
      }
      if (Data6.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Data6);
      }
      if (Data7.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Data7);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (Data5.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data5);
      }
      if (Data6.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data6);
      }
      if (Data7.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data7);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS8 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      if (other.Data5.Length != 0) {
        Data5 = other.Data5;
      }
      if (other.Data6.Length != 0) {
        Data6 = other.Data6;
      }
      if (other.Data7.Length != 0) {
        Data7 = other.Data7;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
          case 50: {
            Data5 = input.ReadString();
            break;
          }
          case 58: {
            Data6 = input.ReadString();
            break;
          }
          case 66: {
            Data7 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
