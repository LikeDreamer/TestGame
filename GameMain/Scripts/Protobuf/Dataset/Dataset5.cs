// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Dataset5.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace AltarOfSword {

  /// <summary>Holder for reflection information generated from Dataset5.proto</summary>
  public static partial class Dataset5Reflection {

    #region Descriptor
    /// <summary>File descriptor for Dataset5.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Dataset5Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5EYXRhc2V0NS5wcm90bxIMQWx0YXJPZlN3b3JkIlYKCURhdGFzZXRJNRIN",
            "CgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoBRIN",
            "CgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoBSJYCgtEYXRhc2V0STRGMRIN",
            "CgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoBRIN",
            "CgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoAiJYCgtEYXRhc2V0STRCMRIN",
            "CgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoBRIN",
            "CgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoCCJYCgtEYXRhc2V0STRTMRIN",
            "CgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoBRIN",
            "CgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoCSJYCgtEYXRhc2V0STNGMhIN",
            "CgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgDIAEoBRIN",
            "CgVkYXRhMxgEIAEoAhINCgVkYXRhNBgFIAEoAiJaCg1EYXRhc2V0STNGMUIx",
            "Eg0KBWRhdGEwGAEgASgFEg0KBWRhdGExGAIgASgFEg0KBWRhdGEyGAMgASgF",
            "Eg0KBWRhdGEzGAQgASgCEg0KBWRhdGE0GAUgASgIIloKDURhdGFzZXRJM0Yx",
            "UzESDQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyAB",
            "KAUSDQoFZGF0YTMYBCABKAISDQoFZGF0YTQYBSABKAkiWAoLRGF0YXNldEkz",
            "QjISDQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0YTIYAyAB",
            "KAUSDQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAgiWgoNRGF0YXNldEkz",
            "QjFTMRINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgD",
            "IAEoBRINCgVkYXRhMxgEIAEoCBINCgVkYXRhNBgFIAEoCSJYCgtEYXRhc2V0",
            "STNTMhINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVkYXRhMhgD",
            "IAEoBRINCgVkYXRhMxgEIAEoCRINCgVkYXRhNBgFIAEoCSJYCgtEYXRhc2V0",
            "RjNJMhINCgVkYXRhMBgBIAEoAhINCgVkYXRhMRgCIAEoAhINCgVkYXRhMhgD",
            "IAEoAhINCgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoBSJaCg1EYXRhc2V0",
            "STJGMkIxEg0KBWRhdGEwGAEgASgFEg0KBWRhdGExGAIgASgFEg0KBWRhdGEy",
            "GAMgASgCEg0KBWRhdGEzGAQgASgCEg0KBWRhdGE0GAUgASgIIloKDURhdGFz",
            "ZXRJMkYyUzESDQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUSDQoFZGF0",
            "YTIYAyABKAISDQoFZGF0YTMYBCABKAISDQoFZGF0YTQYBSABKAkiWgoNRGF0",
            "YXNldEkyQjJGMRINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEoBRINCgVk",
            "YXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoCBINCgVkYXRhNBgFIAEoAiJcCg9E",
            "YXRhc2V0STJGMUIxUzESDQoFZGF0YTAYASABKAUSDQoFZGF0YTEYAiABKAUS",
            "DQoFZGF0YTIYAyABKAISDQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAki",
            "WgoNRGF0YXNldEkyUzJGMRINCgVkYXRhMBgBIAEoBRINCgVkYXRhMRgCIAEo",
            "BRINCgVkYXRhMhgDIAEoCRINCgVkYXRhMxgEIAEoCRINCgVkYXRhNBgFIAEo",
            "AiJYCgtEYXRhc2V0QjNJMhINCgVkYXRhMBgBIAEoCBINCgVkYXRhMRgCIAEo",
            "CBINCgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEo",
            "BSJaCg1EYXRhc2V0STJCMlMxEg0KBWRhdGEwGAEgASgFEg0KBWRhdGExGAIg",
            "ASgFEg0KBWRhdGEyGAMgASgIEg0KBWRhdGEzGAQgASgIEg0KBWRhdGE0GAUg",
            "ASgJIloKDURhdGFzZXRJMlMyQjESDQoFZGF0YTAYASABKAUSDQoFZGF0YTEY",
            "AiABKAUSDQoFZGF0YTIYAyABKAkSDQoFZGF0YTMYBCABKAkSDQoFZGF0YTQY",
            "BSABKAgiWAoLRGF0YXNldFMzSTISDQoFZGF0YTAYASABKAkSDQoFZGF0YTEY",
            "AiABKAkSDQoFZGF0YTIYAyABKAkSDQoFZGF0YTMYBCABKAUSDQoFZGF0YTQY",
            "BSABKAUiWAoLRGF0YXNldEY0STESDQoFZGF0YTAYASABKAISDQoFZGF0YTEY",
            "AiABKAISDQoFZGF0YTIYAyABKAISDQoFZGF0YTMYBCABKAISDQoFZGF0YTQY",
            "BSABKAUiWgoNRGF0YXNldEYzSTFCMRINCgVkYXRhMBgBIAEoAhINCgVkYXRh",
            "MRgCIAEoAhINCgVkYXRhMhgDIAEoAhINCgVkYXRhMxgEIAEoBRINCgVkYXRh",
            "NBgFIAEoCCJaCg1EYXRhc2V0RjNJMVMxEg0KBWRhdGEwGAEgASgCEg0KBWRh",
            "dGExGAIgASgCEg0KBWRhdGEyGAMgASgCEg0KBWRhdGEzGAQgASgFEg0KBWRh",
            "dGE0GAUgASgJIloKDURhdGFzZXRGMkIySTESDQoFZGF0YTAYASABKAISDQoF",
            "ZGF0YTEYAiABKAISDQoFZGF0YTIYAyABKAgSDQoFZGF0YTMYBCABKAgSDQoF",
            "ZGF0YTQYBSABKAUiXAoPRGF0YXNldEYySTFCMVMxEg0KBWRhdGEwGAEgASgC",
            "Eg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMgASgFEg0KBWRhdGEzGAQgASgI",
            "Eg0KBWRhdGE0GAUgASgJIloKDURhdGFzZXRGMlMySTESDQoFZGF0YTAYASAB",
            "KAISDQoFZGF0YTEYAiABKAISDQoFZGF0YTIYAyABKAkSDQoFZGF0YTMYBCAB",
            "KAkSDQoFZGF0YTQYBSABKAUiWgoNRGF0YXNldEIzSTFGMRINCgVkYXRhMBgB",
            "IAEoCBINCgVkYXRhMRgCIAEoCBINCgVkYXRhMhgDIAEoCBINCgVkYXRhMxgE",
            "IAEoBRINCgVkYXRhNBgFIAEoAiJcCg9EYXRhc2V0QjJJMUYxUzESDQoFZGF0",
            "YTAYASABKAgSDQoFZGF0YTEYAiABKAgSDQoFZGF0YTIYAyABKAUSDQoFZGF0",
            "YTMYBCABKAISDQoFZGF0YTQYBSABKAkiXAoPRGF0YXNldFMySTFGMUIxEg0K",
            "BWRhdGEwGAEgASgJEg0KBWRhdGExGAIgASgJEg0KBWRhdGEyGAMgASgFEg0K",
            "BWRhdGEzGAQgASgCEg0KBWRhdGE0GAUgASgIIloKDURhdGFzZXRTM0kxRjES",
            "DQoFZGF0YTAYASABKAkSDQoFZGF0YTEYAiABKAkSDQoFZGF0YTIYAyABKAkS",
            "DQoFZGF0YTMYBCABKAUSDQoFZGF0YTQYBSABKAIiWAoLRGF0YXNldEI0STES",
            "DQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiABKAgSDQoFZGF0YTIYAyABKAgS",
            "DQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAUiWgoNRGF0YXNldEIzSTFT",
            "MRINCgVkYXRhMBgBIAEoCBINCgVkYXRhMRgCIAEoCBINCgVkYXRhMhgDIAEo",
            "CBINCgVkYXRhMxgEIAEoBRINCgVkYXRhNBgFIAEoCSJaCg1EYXRhc2V0QjJT",
            "MkkxEg0KBWRhdGEwGAEgASgIEg0KBWRhdGExGAIgASgIEg0KBWRhdGEyGAMg",
            "ASgJEg0KBWRhdGEzGAQgASgJEg0KBWRhdGE0GAUgASgFIloKDURhdGFzZXRT",
            "M0kxQjESDQoFZGF0YTAYASABKAkSDQoFZGF0YTEYAiABKAkSDQoFZGF0YTIY",
            "AyABKAkSDQoFZGF0YTMYBCABKAUSDQoFZGF0YTQYBSABKAgiWAoLRGF0YXNl",
            "dFM0STESDQoFZGF0YTAYASABKAkSDQoFZGF0YTEYAiABKAkSDQoFZGF0YTIY",
            "AyABKAkSDQoFZGF0YTMYBCABKAkSDQoFZGF0YTQYBSABKAUiVgoJRGF0YXNl",
            "dEY1Eg0KBWRhdGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMg",
            "ASgCEg0KBWRhdGEzGAQgASgCEg0KBWRhdGE0GAUgASgCIlgKC0RhdGFzZXRG",
            "NEIxEg0KBWRhdGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMg",
            "ASgCEg0KBWRhdGEzGAQgASgCEg0KBWRhdGE0GAUgASgIIlgKC0RhdGFzZXRG",
            "NFMxEg0KBWRhdGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMg",
            "ASgCEg0KBWRhdGEzGAQgASgCEg0KBWRhdGE0GAUgASgJIlgKC0RhdGFzZXRG",
            "M0IyEg0KBWRhdGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRhdGEyGAMg",
            "ASgCEg0KBWRhdGEzGAQgASgIEg0KBWRhdGE0GAUgASgIIloKDURhdGFzZXRG",
            "M0IxUzESDQoFZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAISDQoFZGF0YTIY",
            "AyABKAISDQoFZGF0YTMYBCABKAgSDQoFZGF0YTQYBSABKAkiWAoLRGF0YXNl",
            "dEYzUzISDQoFZGF0YTAYASABKAISDQoFZGF0YTEYAiABKAISDQoFZGF0YTIY",
            "AyABKAISDQoFZGF0YTMYBCABKAkSDQoFZGF0YTQYBSABKAkiWAoLRGF0YXNl",
            "dEIzRjISDQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiABKAgSDQoFZGF0YTIY",
            "AyABKAgSDQoFZGF0YTMYBCABKAISDQoFZGF0YTQYBSABKAIiWgoNRGF0YXNl",
            "dEYyQjJTMRINCgVkYXRhMBgBIAEoAhINCgVkYXRhMRgCIAEoAhINCgVkYXRh",
            "MhgDIAEoCBINCgVkYXRhMxgEIAEoCBINCgVkYXRhNBgFIAEoCSJaCg1EYXRh",
            "c2V0RjJTMkIxEg0KBWRhdGEwGAEgASgCEg0KBWRhdGExGAIgASgCEg0KBWRh",
            "dGEyGAMgASgJEg0KBWRhdGEzGAQgASgJEg0KBWRhdGE0GAUgASgIIlgKC0Rh",
            "dGFzZXRTM0YyEg0KBWRhdGEwGAEgASgJEg0KBWRhdGExGAIgASgJEg0KBWRh",
            "dGEyGAMgASgJEg0KBWRhdGEzGAQgASgCEg0KBWRhdGE0GAUgASgCIlgKC0Rh",
            "dGFzZXRCNEYxEg0KBWRhdGEwGAEgASgIEg0KBWRhdGExGAIgASgIEg0KBWRh",
            "dGEyGAMgASgIEg0KBWRhdGEzGAQgASgIEg0KBWRhdGE0GAUgASgCIloKDURh",
            "dGFzZXRCM0YxUzESDQoFZGF0YTAYASABKAgSDQoFZGF0YTEYAiABKAgSDQoF",
            "ZGF0YTIYAyABKAgSDQoFZGF0YTMYBCABKAISDQoFZGF0YTQYBSABKAkiWgoN",
            "RGF0YXNldEIyUzJGMRINCgVkYXRhMBgBIAEoCBINCgVkYXRhMRgCIAEoCBIN",
            "CgVkYXRhMhgDIAEoCRINCgVkYXRhMxgEIAEoCRINCgVkYXRhNBgFIAEoAiJa",
            "Cg1EYXRhc2V0UzNGMUIxEg0KBWRhdGEwGAEgASgJEg0KBWRhdGExGAIgASgJ",
            "Eg0KBWRhdGEyGAMgASgJEg0KBWRhdGEzGAQgASgCEg0KBWRhdGE0GAUgASgI",
            "IlgKC0RhdGFzZXRTNEYxEg0KBWRhdGEwGAEgASgJEg0KBWRhdGExGAIgASgJ",
            "Eg0KBWRhdGEyGAMgASgJEg0KBWRhdGEzGAQgASgJEg0KBWRhdGE0GAUgASgC",
            "IlYKCURhdGFzZXRCNRINCgVkYXRhMBgBIAEoCBINCgVkYXRhMRgCIAEoCBIN",
            "CgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoCBINCgVkYXRhNBgFIAEoCCJY",
            "CgtEYXRhc2V0QjRTMRINCgVkYXRhMBgBIAEoCBINCgVkYXRhMRgCIAEoCBIN",
            "CgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoCBINCgVkYXRhNBgFIAEoCSJY",
            "CgtEYXRhc2V0QjNTMhINCgVkYXRhMBgBIAEoCBINCgVkYXRhMRgCIAEoCBIN",
            "CgVkYXRhMhgDIAEoCBINCgVkYXRhMxgEIAEoCRINCgVkYXRhNBgFIAEoCSJY",
            "CgtEYXRhc2V0UzNCMhINCgVkYXRhMBgBIAEoCRINCgVkYXRhMRgCIAEoCRIN",
            "CgVkYXRhMhgDIAEoCRINCgVkYXRhMxgEIAEoCBINCgVkYXRhNBgFIAEoCCJY",
            "CgtEYXRhc2V0UzRCMRINCgVkYXRhMBgBIAEoCRINCgVkYXRhMRgCIAEoCRIN",
            "CgVkYXRhMhgDIAEoCRINCgVkYXRhMxgEIAEoCRINCgVkYXRhNBgFIAEoCCJW",
            "CglEYXRhc2V0UzUSDQoFZGF0YTAYASABKAkSDQoFZGF0YTEYAiABKAkSDQoF",
            "ZGF0YTIYAyABKAkSDQoFZGF0YTMYBCABKAkSDQoFZGF0YTQYBSABKAliBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI5), global::AltarOfSword.DatasetI5.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4F1), global::AltarOfSword.DatasetI4F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4B1), global::AltarOfSword.DatasetI4B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI4S1), global::AltarOfSword.DatasetI4S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3F2), global::AltarOfSword.DatasetI3F2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3F1B1), global::AltarOfSword.DatasetI3F1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3F1S1), global::AltarOfSword.DatasetI3F1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3B2), global::AltarOfSword.DatasetI3B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3B1S1), global::AltarOfSword.DatasetI3B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI3S2), global::AltarOfSword.DatasetI3S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3I2), global::AltarOfSword.DatasetF3I2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2F2B1), global::AltarOfSword.DatasetI2F2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2F2S1), global::AltarOfSword.DatasetI2F2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2B2F1), global::AltarOfSword.DatasetI2B2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2F1B1S1), global::AltarOfSword.DatasetI2F1B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2S2F1), global::AltarOfSword.DatasetI2S2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3I2), global::AltarOfSword.DatasetB3I2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2B2S1), global::AltarOfSword.DatasetI2B2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetI2S2B1), global::AltarOfSword.DatasetI2S2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3I2), global::AltarOfSword.DatasetS3I2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4I1), global::AltarOfSword.DatasetF4I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3I1B1), global::AltarOfSword.DatasetF3I1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3I1S1), global::AltarOfSword.DatasetF3I1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF2B2I1), global::AltarOfSword.DatasetF2B2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF2I1B1S1), global::AltarOfSword.DatasetF2I1B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF2S2I1), global::AltarOfSword.DatasetF2S2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3I1F1), global::AltarOfSword.DatasetB3I1F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB2I1F1S1), global::AltarOfSword.DatasetB2I1F1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS2I1F1B1), global::AltarOfSword.DatasetS2I1F1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3I1F1), global::AltarOfSword.DatasetS3I1F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4I1), global::AltarOfSword.DatasetB4I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3I1S1), global::AltarOfSword.DatasetB3I1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB2S2I1), global::AltarOfSword.DatasetB2S2I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3I1B1), global::AltarOfSword.DatasetS3I1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4I1), global::AltarOfSword.DatasetS4I1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF5), global::AltarOfSword.DatasetF5.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4B1), global::AltarOfSword.DatasetF4B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF4S1), global::AltarOfSword.DatasetF4S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3B2), global::AltarOfSword.DatasetF3B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3B1S1), global::AltarOfSword.DatasetF3B1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF3S2), global::AltarOfSword.DatasetF3S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3F2), global::AltarOfSword.DatasetB3F2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF2B2S1), global::AltarOfSword.DatasetF2B2S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetF2S2B1), global::AltarOfSword.DatasetF2S2B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3F2), global::AltarOfSword.DatasetS3F2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4F1), global::AltarOfSword.DatasetB4F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3F1S1), global::AltarOfSword.DatasetB3F1S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB2S2F1), global::AltarOfSword.DatasetB2S2F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3F1B1), global::AltarOfSword.DatasetS3F1B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4F1), global::AltarOfSword.DatasetS4F1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB5), global::AltarOfSword.DatasetB5.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB4S1), global::AltarOfSword.DatasetB4S1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetB3S2), global::AltarOfSword.DatasetB3S2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS3B2), global::AltarOfSword.DatasetS3B2.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS4B1), global::AltarOfSword.DatasetS4B1.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::AltarOfSword.DatasetS5), global::AltarOfSword.DatasetS5.Parser, new[]{ "Data0", "Data1", "Data2", "Data3", "Data4" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class DatasetI5 : pb::IMessage<DatasetI5> {
    private static readonly pb::MessageParser<DatasetI5> _parser = new pb::MessageParser<DatasetI5>(() => new DatasetI5());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI5> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5(DatasetI5 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI5 Clone() {
      return new DatasetI5(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI5);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI5 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI5 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4F1 : pb::IMessage<DatasetI4F1> {
    private static readonly pb::MessageParser<DatasetI4F1> _parser = new pb::MessageParser<DatasetI4F1>(() => new DatasetI4F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F1(DatasetI4F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4F1 Clone() {
      return new DatasetI4F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4B1 : pb::IMessage<DatasetI4B1> {
    private static readonly pb::MessageParser<DatasetI4B1> _parser = new pb::MessageParser<DatasetI4B1>(() => new DatasetI4B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B1(DatasetI4B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4B1 Clone() {
      return new DatasetI4B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI4S1 : pb::IMessage<DatasetI4S1> {
    private static readonly pb::MessageParser<DatasetI4S1> _parser = new pb::MessageParser<DatasetI4S1>(() => new DatasetI4S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI4S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S1(DatasetI4S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI4S1 Clone() {
      return new DatasetI4S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI4S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI4S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI4S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3F2 : pb::IMessage<DatasetI3F2> {
    private static readonly pb::MessageParser<DatasetI3F2> _parser = new pb::MessageParser<DatasetI3F2>(() => new DatasetI3F2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3F2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F2(DatasetI3F2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F2 Clone() {
      return new DatasetI3F2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3F2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3F2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3F2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3F1B1 : pb::IMessage<DatasetI3F1B1> {
    private static readonly pb::MessageParser<DatasetI3F1B1> _parser = new pb::MessageParser<DatasetI3F1B1>(() => new DatasetI3F1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3F1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F1B1(DatasetI3F1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F1B1 Clone() {
      return new DatasetI3F1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3F1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3F1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3F1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3F1S1 : pb::IMessage<DatasetI3F1S1> {
    private static readonly pb::MessageParser<DatasetI3F1S1> _parser = new pb::MessageParser<DatasetI3F1S1>(() => new DatasetI3F1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3F1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F1S1(DatasetI3F1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3F1S1 Clone() {
      return new DatasetI3F1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3F1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3F1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3F1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3B2 : pb::IMessage<DatasetI3B2> {
    private static readonly pb::MessageParser<DatasetI3B2> _parser = new pb::MessageParser<DatasetI3B2>(() => new DatasetI3B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B2(DatasetI3B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B2 Clone() {
      return new DatasetI3B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3B1S1 : pb::IMessage<DatasetI3B1S1> {
    private static readonly pb::MessageParser<DatasetI3B1S1> _parser = new pb::MessageParser<DatasetI3B1S1>(() => new DatasetI3B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B1S1(DatasetI3B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3B1S1 Clone() {
      return new DatasetI3B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI3S2 : pb::IMessage<DatasetI3S2> {
    private static readonly pb::MessageParser<DatasetI3S2> _parser = new pb::MessageParser<DatasetI3S2>(() => new DatasetI3S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI3S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S2(DatasetI3S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI3S2 Clone() {
      return new DatasetI3S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI3S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI3S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI3S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3I2 : pb::IMessage<DatasetF3I2> {
    private static readonly pb::MessageParser<DatasetF3I2> _parser = new pb::MessageParser<DatasetF3I2>(() => new DatasetF3I2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3I2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I2(DatasetF3I2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I2 Clone() {
      return new DatasetF3I2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3I2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3I2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3I2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2F2B1 : pb::IMessage<DatasetI2F2B1> {
    private static readonly pb::MessageParser<DatasetI2F2B1> _parser = new pb::MessageParser<DatasetI2F2B1>(() => new DatasetI2F2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2F2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2B1(DatasetI2F2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2B1 Clone() {
      return new DatasetI2F2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2F2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2F2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2F2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2F2S1 : pb::IMessage<DatasetI2F2S1> {
    private static readonly pb::MessageParser<DatasetI2F2S1> _parser = new pb::MessageParser<DatasetI2F2S1>(() => new DatasetI2F2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2F2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2S1(DatasetI2F2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F2S1 Clone() {
      return new DatasetI2F2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2F2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2F2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2F2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2B2F1 : pb::IMessage<DatasetI2B2F1> {
    private static readonly pb::MessageParser<DatasetI2B2F1> _parser = new pb::MessageParser<DatasetI2B2F1>(() => new DatasetI2B2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2B2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B2F1(DatasetI2B2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B2F1 Clone() {
      return new DatasetI2B2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2B2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2B2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2B2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2F1B1S1 : pb::IMessage<DatasetI2F1B1S1> {
    private static readonly pb::MessageParser<DatasetI2F1B1S1> _parser = new pb::MessageParser<DatasetI2F1B1S1>(() => new DatasetI2F1B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2F1B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F1B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F1B1S1(DatasetI2F1B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2F1B1S1 Clone() {
      return new DatasetI2F1B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2F1B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2F1B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2F1B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2S2F1 : pb::IMessage<DatasetI2S2F1> {
    private static readonly pb::MessageParser<DatasetI2S2F1> _parser = new pb::MessageParser<DatasetI2S2F1>(() => new DatasetI2S2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2S2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2S2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2S2F1(DatasetI2S2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2S2F1 Clone() {
      return new DatasetI2S2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2S2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2S2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2S2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3I2 : pb::IMessage<DatasetB3I2> {
    private static readonly pb::MessageParser<DatasetB3I2> _parser = new pb::MessageParser<DatasetB3I2>(() => new DatasetB3I2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3I2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I2(DatasetB3I2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I2 Clone() {
      return new DatasetB3I2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3I2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3I2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3I2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2B2S1 : pb::IMessage<DatasetI2B2S1> {
    private static readonly pb::MessageParser<DatasetI2B2S1> _parser = new pb::MessageParser<DatasetI2B2S1>(() => new DatasetI2B2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2B2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B2S1(DatasetI2B2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2B2S1 Clone() {
      return new DatasetI2B2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2B2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2B2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2B2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetI2S2B1 : pb::IMessage<DatasetI2S2B1> {
    private static readonly pb::MessageParser<DatasetI2S2B1> _parser = new pb::MessageParser<DatasetI2S2B1>(() => new DatasetI2S2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetI2S2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2S2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2S2B1(DatasetI2S2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetI2S2B1 Clone() {
      return new DatasetI2S2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private int data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private int data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetI2S2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetI2S2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0) hash ^= Data0.GetHashCode();
      if (Data1 != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Data0);
      }
      if (Data1 != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data0);
      }
      if (Data1 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetI2S2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadInt32();
            break;
          }
          case 16: {
            Data1 = input.ReadInt32();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3I2 : pb::IMessage<DatasetS3I2> {
    private static readonly pb::MessageParser<DatasetS3I2> _parser = new pb::MessageParser<DatasetS3I2>(() => new DatasetS3I2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3I2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I2(DatasetS3I2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I2 Clone() {
      return new DatasetS3I2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3I2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3I2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3I2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4I1 : pb::IMessage<DatasetF4I1> {
    private static readonly pb::MessageParser<DatasetF4I1> _parser = new pb::MessageParser<DatasetF4I1>(() => new DatasetF4I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I1(DatasetF4I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4I1 Clone() {
      return new DatasetF4I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3I1B1 : pb::IMessage<DatasetF3I1B1> {
    private static readonly pb::MessageParser<DatasetF3I1B1> _parser = new pb::MessageParser<DatasetF3I1B1>(() => new DatasetF3I1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3I1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I1B1(DatasetF3I1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I1B1 Clone() {
      return new DatasetF3I1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3I1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3I1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3I1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3I1S1 : pb::IMessage<DatasetF3I1S1> {
    private static readonly pb::MessageParser<DatasetF3I1S1> _parser = new pb::MessageParser<DatasetF3I1S1>(() => new DatasetF3I1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3I1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I1S1(DatasetF3I1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3I1S1 Clone() {
      return new DatasetF3I1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3I1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3I1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3I1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF2B2I1 : pb::IMessage<DatasetF2B2I1> {
    private static readonly pb::MessageParser<DatasetF2B2I1> _parser = new pb::MessageParser<DatasetF2B2I1>(() => new DatasetF2B2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF2B2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B2I1(DatasetF2B2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B2I1 Clone() {
      return new DatasetF2B2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF2B2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF2B2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF2B2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF2I1B1S1 : pb::IMessage<DatasetF2I1B1S1> {
    private static readonly pb::MessageParser<DatasetF2I1B1S1> _parser = new pb::MessageParser<DatasetF2I1B1S1>(() => new DatasetF2I1B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF2I1B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2I1B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2I1B1S1(DatasetF2I1B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2I1B1S1 Clone() {
      return new DatasetF2I1B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF2I1B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF2I1B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF2I1B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF2S2I1 : pb::IMessage<DatasetF2S2I1> {
    private static readonly pb::MessageParser<DatasetF2S2I1> _parser = new pb::MessageParser<DatasetF2S2I1>(() => new DatasetF2S2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF2S2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2S2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2S2I1(DatasetF2S2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2S2I1 Clone() {
      return new DatasetF2S2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF2S2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF2S2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF2S2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3I1F1 : pb::IMessage<DatasetB3I1F1> {
    private static readonly pb::MessageParser<DatasetB3I1F1> _parser = new pb::MessageParser<DatasetB3I1F1>(() => new DatasetB3I1F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3I1F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I1F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I1F1(DatasetB3I1F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I1F1 Clone() {
      return new DatasetB3I1F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3I1F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3I1F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3I1F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB2I1F1S1 : pb::IMessage<DatasetB2I1F1S1> {
    private static readonly pb::MessageParser<DatasetB2I1F1S1> _parser = new pb::MessageParser<DatasetB2I1F1S1>(() => new DatasetB2I1F1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB2I1F1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2I1F1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2I1F1S1(DatasetB2I1F1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2I1F1S1 Clone() {
      return new DatasetB2I1F1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB2I1F1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB2I1F1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB2I1F1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS2I1F1B1 : pb::IMessage<DatasetS2I1F1B1> {
    private static readonly pb::MessageParser<DatasetS2I1F1B1> _parser = new pb::MessageParser<DatasetS2I1F1B1>(() => new DatasetS2I1F1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS2I1F1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS2I1F1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS2I1F1B1(DatasetS2I1F1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS2I1F1B1 Clone() {
      return new DatasetS2I1F1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private int data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS2I1F1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS2I1F1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2 != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2 != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS2I1F1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 24: {
            Data2 = input.ReadInt32();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3I1F1 : pb::IMessage<DatasetS3I1F1> {
    private static readonly pb::MessageParser<DatasetS3I1F1> _parser = new pb::MessageParser<DatasetS3I1F1>(() => new DatasetS3I1F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3I1F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I1F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I1F1(DatasetS3I1F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I1F1 Clone() {
      return new DatasetS3I1F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3I1F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3I1F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3I1F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4I1 : pb::IMessage<DatasetB4I1> {
    private static readonly pb::MessageParser<DatasetB4I1> _parser = new pb::MessageParser<DatasetB4I1>(() => new DatasetB4I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I1(DatasetB4I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4I1 Clone() {
      return new DatasetB4I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3I1S1 : pb::IMessage<DatasetB3I1S1> {
    private static readonly pb::MessageParser<DatasetB3I1S1> _parser = new pb::MessageParser<DatasetB3I1S1>(() => new DatasetB3I1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3I1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I1S1(DatasetB3I1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3I1S1 Clone() {
      return new DatasetB3I1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3I1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3I1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3I1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB2S2I1 : pb::IMessage<DatasetB2S2I1> {
    private static readonly pb::MessageParser<DatasetB2S2I1> _parser = new pb::MessageParser<DatasetB2S2I1>(() => new DatasetB2S2I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB2S2I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2S2I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2S2I1(DatasetB2S2I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2S2I1 Clone() {
      return new DatasetB2S2I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB2S2I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB2S2I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB2S2I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3I1B1 : pb::IMessage<DatasetS3I1B1> {
    private static readonly pb::MessageParser<DatasetS3I1B1> _parser = new pb::MessageParser<DatasetS3I1B1>(() => new DatasetS3I1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3I1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I1B1(DatasetS3I1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3I1B1 Clone() {
      return new DatasetS3I1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private int data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3I1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3I1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3I1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 32: {
            Data3 = input.ReadInt32();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4I1 : pb::IMessage<DatasetS4I1> {
    private static readonly pb::MessageParser<DatasetS4I1> _parser = new pb::MessageParser<DatasetS4I1>(() => new DatasetS4I1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4I1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I1(DatasetS4I1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4I1 Clone() {
      return new DatasetS4I1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private int data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4I1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4I1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4I1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF5 : pb::IMessage<DatasetF5> {
    private static readonly pb::MessageParser<DatasetF5> _parser = new pb::MessageParser<DatasetF5>(() => new DatasetF5());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF5> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5(DatasetF5 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF5 Clone() {
      return new DatasetF5(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF5);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF5 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF5 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4B1 : pb::IMessage<DatasetF4B1> {
    private static readonly pb::MessageParser<DatasetF4B1> _parser = new pb::MessageParser<DatasetF4B1>(() => new DatasetF4B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B1(DatasetF4B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4B1 Clone() {
      return new DatasetF4B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF4S1 : pb::IMessage<DatasetF4S1> {
    private static readonly pb::MessageParser<DatasetF4S1> _parser = new pb::MessageParser<DatasetF4S1>(() => new DatasetF4S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF4S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S1(DatasetF4S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF4S1 Clone() {
      return new DatasetF4S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF4S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF4S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF4S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3B2 : pb::IMessage<DatasetF3B2> {
    private static readonly pb::MessageParser<DatasetF3B2> _parser = new pb::MessageParser<DatasetF3B2>(() => new DatasetF3B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B2(DatasetF3B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B2 Clone() {
      return new DatasetF3B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3B1S1 : pb::IMessage<DatasetF3B1S1> {
    private static readonly pb::MessageParser<DatasetF3B1S1> _parser = new pb::MessageParser<DatasetF3B1S1>(() => new DatasetF3B1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3B1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B1S1(DatasetF3B1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3B1S1 Clone() {
      return new DatasetF3B1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3B1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3B1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3B1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF3S2 : pb::IMessage<DatasetF3S2> {
    private static readonly pb::MessageParser<DatasetF3S2> _parser = new pb::MessageParser<DatasetF3S2>(() => new DatasetF3S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF3S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S2(DatasetF3S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF3S2 Clone() {
      return new DatasetF3S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private float data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF3S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF3S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data2, other.Data2)) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data2);
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != 0F) {
        size += 1 + 4;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF3S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != 0F) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 29: {
            Data2 = input.ReadFloat();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3F2 : pb::IMessage<DatasetB3F2> {
    private static readonly pb::MessageParser<DatasetB3F2> _parser = new pb::MessageParser<DatasetB3F2>(() => new DatasetB3F2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3F2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F2(DatasetB3F2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F2 Clone() {
      return new DatasetB3F2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3F2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3F2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3F2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF2B2S1 : pb::IMessage<DatasetF2B2S1> {
    private static readonly pb::MessageParser<DatasetF2B2S1> _parser = new pb::MessageParser<DatasetF2B2S1>(() => new DatasetF2B2S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF2B2S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B2S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B2S1(DatasetF2B2S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2B2S1 Clone() {
      return new DatasetF2B2S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF2B2S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF2B2S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF2B2S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetF2S2B1 : pb::IMessage<DatasetF2S2B1> {
    private static readonly pb::MessageParser<DatasetF2S2B1> _parser = new pb::MessageParser<DatasetF2S2B1>(() => new DatasetF2S2B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetF2S2B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2S2B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2S2B1(DatasetF2S2B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetF2S2B1 Clone() {
      return new DatasetF2S2B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private float data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private float data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetF2S2B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetF2S2B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data0, other.Data0)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data1, other.Data1)) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data0);
      if (Data1 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data1);
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(Data0);
      }
      if (Data1 != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != 0F) {
        size += 1 + 4;
      }
      if (Data1 != 0F) {
        size += 1 + 4;
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetF2S2B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != 0F) {
        Data0 = other.Data0;
      }
      if (other.Data1 != 0F) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            Data0 = input.ReadFloat();
            break;
          }
          case 21: {
            Data1 = input.ReadFloat();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3F2 : pb::IMessage<DatasetS3F2> {
    private static readonly pb::MessageParser<DatasetS3F2> _parser = new pb::MessageParser<DatasetS3F2>(() => new DatasetS3F2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3F2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F2(DatasetS3F2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F2 Clone() {
      return new DatasetS3F2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3F2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3F2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3F2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4F1 : pb::IMessage<DatasetB4F1> {
    private static readonly pb::MessageParser<DatasetB4F1> _parser = new pb::MessageParser<DatasetB4F1>(() => new DatasetB4F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F1(DatasetB4F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4F1 Clone() {
      return new DatasetB4F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3F1S1 : pb::IMessage<DatasetB3F1S1> {
    private static readonly pb::MessageParser<DatasetB3F1S1> _parser = new pb::MessageParser<DatasetB3F1S1>(() => new DatasetB3F1S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3F1S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F1S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F1S1(DatasetB3F1S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3F1S1 Clone() {
      return new DatasetB3F1S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3F1S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3F1S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3F1S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB2S2F1 : pb::IMessage<DatasetB2S2F1> {
    private static readonly pb::MessageParser<DatasetB2S2F1> _parser = new pb::MessageParser<DatasetB2S2F1>(() => new DatasetB2S2F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB2S2F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2S2F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2S2F1(DatasetB2S2F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB2S2F1 Clone() {
      return new DatasetB2S2F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB2S2F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB2S2F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB2S2F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3F1B1 : pb::IMessage<DatasetS3F1B1> {
    private static readonly pb::MessageParser<DatasetS3F1B1> _parser = new pb::MessageParser<DatasetS3F1B1>(() => new DatasetS3F1B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3F1B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F1B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F1B1(DatasetS3F1B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3F1B1 Clone() {
      return new DatasetS3F1B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private float data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3F1B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3F1B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data3, other.Data3)) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data3);
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != 0F) {
        size += 1 + 4;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3F1B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != 0F) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 37: {
            Data3 = input.ReadFloat();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4F1 : pb::IMessage<DatasetS4F1> {
    private static readonly pb::MessageParser<DatasetS4F1> _parser = new pb::MessageParser<DatasetS4F1>(() => new DatasetS4F1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4F1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F1(DatasetS4F1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4F1 Clone() {
      return new DatasetS4F1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private float data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4F1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4F1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Data4, other.Data4)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Data4);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4F1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != 0F) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 45: {
            Data4 = input.ReadFloat();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB5 : pb::IMessage<DatasetB5> {
    private static readonly pb::MessageParser<DatasetB5> _parser = new pb::MessageParser<DatasetB5>(() => new DatasetB5());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB5> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5(DatasetB5 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB5 Clone() {
      return new DatasetB5(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB5);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB5 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB5 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB4S1 : pb::IMessage<DatasetB4S1> {
    private static readonly pb::MessageParser<DatasetB4S1> _parser = new pb::MessageParser<DatasetB4S1>(() => new DatasetB4S1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB4S1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S1(DatasetB4S1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB4S1 Clone() {
      return new DatasetB4S1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB4S1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB4S1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB4S1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetB3S2 : pb::IMessage<DatasetB3S2> {
    private static readonly pb::MessageParser<DatasetB3S2> _parser = new pb::MessageParser<DatasetB3S2>(() => new DatasetB3S2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetB3S2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S2(DatasetB3S2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetB3S2 Clone() {
      return new DatasetB3S2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private bool data0_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data0 {
      get { return data0_; }
      set {
        data0_ = value;
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private bool data1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data1 {
      get { return data1_; }
      set {
        data1_ = value;
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private bool data2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data2 {
      get { return data2_; }
      set {
        data2_ = value;
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetB3S2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetB3S2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0 != false) hash ^= Data0.GetHashCode();
      if (Data1 != false) hash ^= Data1.GetHashCode();
      if (Data2 != false) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0 != false) {
        output.WriteRawTag(8);
        output.WriteBool(Data0);
      }
      if (Data1 != false) {
        output.WriteRawTag(16);
        output.WriteBool(Data1);
      }
      if (Data2 != false) {
        output.WriteRawTag(24);
        output.WriteBool(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0 != false) {
        size += 1 + 1;
      }
      if (Data1 != false) {
        size += 1 + 1;
      }
      if (Data2 != false) {
        size += 1 + 1;
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetB3S2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0 != false) {
        Data0 = other.Data0;
      }
      if (other.Data1 != false) {
        Data1 = other.Data1;
      }
      if (other.Data2 != false) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Data0 = input.ReadBool();
            break;
          }
          case 16: {
            Data1 = input.ReadBool();
            break;
          }
          case 24: {
            Data2 = input.ReadBool();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS3B2 : pb::IMessage<DatasetS3B2> {
    private static readonly pb::MessageParser<DatasetS3B2> _parser = new pb::MessageParser<DatasetS3B2>(() => new DatasetS3B2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS3B2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3B2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3B2(DatasetS3B2 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS3B2 Clone() {
      return new DatasetS3B2(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private bool data3_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data3 {
      get { return data3_; }
      set {
        data3_ = value;
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS3B2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS3B2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3 != false) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3 != false) {
        output.WriteRawTag(32);
        output.WriteBool(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3 != false) {
        size += 1 + 1;
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS3B2 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3 != false) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 32: {
            Data3 = input.ReadBool();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS4B1 : pb::IMessage<DatasetS4B1> {
    private static readonly pb::MessageParser<DatasetS4B1> _parser = new pb::MessageParser<DatasetS4B1>(() => new DatasetS4B1());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS4B1> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4B1() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4B1(DatasetS4B1 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS4B1 Clone() {
      return new DatasetS4B1(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private bool data4_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Data4 {
      get { return data4_; }
      set {
        data4_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS4B1);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS4B1 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4 != false) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4 != false) {
        output.WriteRawTag(40);
        output.WriteBool(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4 != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS4B1 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4 != false) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 40: {
            Data4 = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DatasetS5 : pb::IMessage<DatasetS5> {
    private static readonly pb::MessageParser<DatasetS5> _parser = new pb::MessageParser<DatasetS5>(() => new DatasetS5());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatasetS5> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::AltarOfSword.Dataset5Reflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5(DatasetS5 other) : this() {
      data0_ = other.data0_;
      data1_ = other.data1_;
      data2_ = other.data2_;
      data3_ = other.data3_;
      data4_ = other.data4_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatasetS5 Clone() {
      return new DatasetS5(this);
    }

    /// <summary>Field number for the "data0" field.</summary>
    public const int Data0FieldNumber = 1;
    private string data0_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data0 {
      get { return data0_; }
      set {
        data0_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data1" field.</summary>
    public const int Data1FieldNumber = 2;
    private string data1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data1 {
      get { return data1_; }
      set {
        data1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data2" field.</summary>
    public const int Data2FieldNumber = 3;
    private string data2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data2 {
      get { return data2_; }
      set {
        data2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data3" field.</summary>
    public const int Data3FieldNumber = 4;
    private string data3_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data3 {
      get { return data3_; }
      set {
        data3_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data4" field.</summary>
    public const int Data4FieldNumber = 5;
    private string data4_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Data4 {
      get { return data4_; }
      set {
        data4_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatasetS5);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatasetS5 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data0 != other.Data0) return false;
      if (Data1 != other.Data1) return false;
      if (Data2 != other.Data2) return false;
      if (Data3 != other.Data3) return false;
      if (Data4 != other.Data4) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data0.Length != 0) hash ^= Data0.GetHashCode();
      if (Data1.Length != 0) hash ^= Data1.GetHashCode();
      if (Data2.Length != 0) hash ^= Data2.GetHashCode();
      if (Data3.Length != 0) hash ^= Data3.GetHashCode();
      if (Data4.Length != 0) hash ^= Data4.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data0.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Data0);
      }
      if (Data1.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Data1);
      }
      if (Data2.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Data2);
      }
      if (Data3.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Data3);
      }
      if (Data4.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Data4);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data0.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data0);
      }
      if (Data1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data1);
      }
      if (Data2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data2);
      }
      if (Data3.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data3);
      }
      if (Data4.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Data4);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatasetS5 other) {
      if (other == null) {
        return;
      }
      if (other.Data0.Length != 0) {
        Data0 = other.Data0;
      }
      if (other.Data1.Length != 0) {
        Data1 = other.Data1;
      }
      if (other.Data2.Length != 0) {
        Data2 = other.Data2;
      }
      if (other.Data3.Length != 0) {
        Data3 = other.Data3;
      }
      if (other.Data4.Length != 0) {
        Data4 = other.Data4;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data0 = input.ReadString();
            break;
          }
          case 18: {
            Data1 = input.ReadString();
            break;
          }
          case 26: {
            Data2 = input.ReadString();
            break;
          }
          case 34: {
            Data3 = input.ReadString();
            break;
          }
          case 42: {
            Data4 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
